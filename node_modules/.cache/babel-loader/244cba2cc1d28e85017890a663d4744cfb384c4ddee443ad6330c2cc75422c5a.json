{"ast":null,"code":"var _jsxFileName = \"/Users/martinbsandberg/Documents/GitHub/react-flow/src/components/flow/flow.component.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Controls, Background, applyNodeChanges, applyEdgeChanges, addEdge } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { darkTheme } from \"../../theme.jsx\";\nimport { initialNodes } from \"../node.components.jsx\";\nimport { initialEdges } from \"../edges.component\";\nimport { CustomNode } from \"../custom-nodes/custom-node.component.jsx\";\nimport { StyledFlow, MiniMapStyled } from \"./flow.styles\";\nimport { CustomEdge } from \"../custom-edges/custom-edges.component.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  highLevelNode: CustomNode,\n  specificLevelNode: CustomNode,\n  consequenceNode: CustomNode\n};\nconst edgeTypes = {\n  custom: CustomEdge\n};\nconst Flow = props => {\n  _s();\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [anySelected, setAnySelected] = useState(false);\n  const [relatedNodes, setRelatedNodes] = useState(false);\n  const onNodesChange = useCallback(changes => setNodes(nds => {\n    const selected = changes.filter(node => node.selected === true);\n    if (selected.length >= 1) {\n      setAnySelected(selected);\n    } else {\n      setAnySelected(() => false);\n    }\n    return applyNodeChanges(changes, nds);\n  }), []);\n  useEffect(() => {\n    setNodes(nds => nds.map(node => {\n      if (anySelected) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            anySelected: true\n          }\n        };\n      } else {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            anySelected: false\n          }\n        };\n      }\n    }));\n    setEdges(edgs => {\n      return edgs.map(edge => {\n        if (!anySelected) {\n          return {\n            ...edge,\n            data: {\n              anySelected: false,\n              connectedToSelected: false\n            }\n          };\n        }\n        if (edge.target === anySelected[0].id || edge.source === anySelected[0].id) {\n          return {\n            ...edge,\n            data: {\n              anySelected: true,\n              connectedToSelected: true\n            }\n          };\n        } else {\n          return {\n            ...edge,\n            data: {\n              anySelected: true,\n              connectedToSelected: false\n            }\n          };\n        }\n      });\n    });\n    if (relatedNodes) {}\n    return;\n  }, [anySelected]);\n  const onEdgesChange = useCallback(changes => setEdges(eds => applyEdgeChanges(changes, eds)), []);\n  return /*#__PURE__*/_jsxDEV(StyledFlow, {\n    nodes: nodes,\n    onNodesChange: onNodesChange,\n    edges: edges,\n    onEdgesChange: onEdgesChange,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    fitView: true,\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MiniMapStyled, {\n      zoomable: true,\n      pannable: true,\n      nodeColor: _ref => {\n        let {\n          type\n        } = _ref;\n        return darkTheme[type].bgC;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Flow, \"TbCMM9J1+Z3A2kliA0qftl+zYZA=\");\n_c = Flow;\nexport default Flow;\nvar _c;\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"names":["useState","useCallback","useEffect","Controls","Background","applyNodeChanges","applyEdgeChanges","addEdge","darkTheme","initialNodes","initialEdges","CustomNode","StyledFlow","MiniMapStyled","CustomEdge","jsxDEV","_jsxDEV","nodeTypes","highLevelNode","specificLevelNode","consequenceNode","edgeTypes","custom","Flow","props","_s","nodes","setNodes","edges","setEdges","anySelected","setAnySelected","relatedNodes","setRelatedNodes","onNodesChange","changes","nds","selected","filter","node","length","map","data","edgs","edge","connectedToSelected","target","id","source","onEdgesChange","eds","fitView","children","fileName","_jsxFileName","lineNumber","columnNumber","zoomable","pannable","nodeColor","_ref","type","bgC","_c","$RefreshReg$"],"sources":["/Users/martinbsandberg/Documents/GitHub/react-flow/src/components/flow/flow.component.jsx"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport {\n  Controls,\n  Background,\n  applyNodeChanges,\n  applyEdgeChanges,\n  addEdge,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { darkTheme } from \"../../theme.jsx\";\nimport { initialNodes } from \"../node.components.jsx\";\nimport { initialEdges } from \"../edges.component\";\nimport { CustomNode } from \"../custom-nodes/custom-node.component.jsx\";\nimport { StyledFlow, MiniMapStyled } from \"./flow.styles\";\nimport { CustomEdge } from \"../custom-edges/custom-edges.component.jsx\";\n\nconst nodeTypes = {\n  highLevelNode: CustomNode,\n  specificLevelNode: CustomNode,\n  consequenceNode: CustomNode,\n};\n\nconst edgeTypes = {\n  custom: CustomEdge,\n};\n\nconst Flow = (props) => {\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [anySelected, setAnySelected] = useState(false);\n  const [relatedNodes, setRelatedNodes] = useState(false);\n\n  const onNodesChange = useCallback(\n    (changes) =>\n      setNodes((nds) => {\n        const selected = changes.filter((node) => node.selected === true);\n        if (selected.length >= 1) {\n          setAnySelected(selected);\n        } else {\n          setAnySelected(() => false);\n        }\n        return applyNodeChanges(changes, nds);\n      }),\n    []\n  );\n\n  useEffect(() => {\n    setNodes((nds) =>\n      nds.map((node) => {\n        if (anySelected) {\n          return { ...node, data: { ...node.data, anySelected: true } };\n        } else {\n          return { ...node, data: { ...node.data, anySelected: false } };\n        }\n      })\n    );\n\n    setEdges((edgs)=>{\n      return edgs.map((edge) => {\n        if(!anySelected){\n          return {...edge, data: {anySelected:false, connectedToSelected: false}}\n        }\n        if(edge.target===anySelected[0].id || edge.source===anySelected[0].id){\n         \n          return {...edge, data: {anySelected:true, connectedToSelected:true}}\n        }\n        else{\n          return {...edge, data: {anySelected:true, connectedToSelected: false}}\n        }\n\n      })\n      })\n    \n      if(relatedNodes){\n\n      }\n    return;\n  }, [anySelected ]);\n\n\n\n\n  const onEdgesChange = useCallback(\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n    []\n  );\n\n  return (\n    <StyledFlow\n      nodes={nodes}\n      onNodesChange={onNodesChange}\n      edges={edges}\n      onEdgesChange={onEdgesChange}\n      nodeTypes={nodeTypes}\n      edgeTypes={edgeTypes}\n      fitView\n    >\n      <Background />\n      <Controls />\n      <MiniMapStyled\n        zoomable\n        pannable\n        nodeColor={({ type }) => darkTheme[type].bgC}\n      />\n    </StyledFlow>\n  );\n};\n\nexport default Flow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}