{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/martinbsandberg/Documents/GitHub/painpoints-graph/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/Users/martinbsandberg/Documents/GitHub/painpoints-graph/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/martinbsandberg/Documents/GitHub/painpoints-graph/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/martinbsandberg/Documents/GitHub/painpoints-graph/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/martinbsandberg/Documents/GitHub/painpoints-graph/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/martinbsandberg/Documents/GitHub/painpoints-graph/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _handleDirections, _MarkerSymbols, _oppositePosition;\nvar _excluded = [\"position\", \"children\", \"className\", \"style\"],\n  _excluded2 = [\"x\", \"y\", \"label\", \"labelStyle\", \"labelShowBg\", \"labelBgStyle\", \"labelBgPadding\", \"labelBgBorderRadius\", \"children\", \"className\"],\n  _excluded3 = [\"type\", \"position\", \"isValidConnection\", \"isConnectable\", \"id\", \"onConnect\", \"children\", \"className\", \"onMouseDown\", \"onTouchStart\"],\n  _excluded4 = [\"nodes\", \"edges\", \"defaultNodes\", \"defaultEdges\", \"className\", \"nodeTypes\", \"edgeTypes\", \"onNodeClick\", \"onEdgeClick\", \"onInit\", \"onMove\", \"onMoveStart\", \"onMoveEnd\", \"onConnect\", \"onConnectStart\", \"onConnectEnd\", \"onClickConnectStart\", \"onClickConnectEnd\", \"onNodeMouseEnter\", \"onNodeMouseMove\", \"onNodeMouseLeave\", \"onNodeContextMenu\", \"onNodeDoubleClick\", \"onNodeDragStart\", \"onNodeDrag\", \"onNodeDragStop\", \"onNodesDelete\", \"onEdgesDelete\", \"onSelectionChange\", \"onSelectionDragStart\", \"onSelectionDrag\", \"onSelectionDragStop\", \"onSelectionContextMenu\", \"onSelectionStart\", \"onSelectionEnd\", \"connectionMode\", \"connectionLineType\", \"connectionLineStyle\", \"connectionLineComponent\", \"connectionLineContainerStyle\", \"deleteKeyCode\", \"selectionKeyCode\", \"selectionOnDrag\", \"selectionMode\", \"panActivationKeyCode\", \"multiSelectionKeyCode\", \"zoomActivationKeyCode\", \"snapToGrid\", \"snapGrid\", \"onlyRenderVisibleElements\", \"selectNodesOnDrag\", \"nodesDraggable\", \"nodesConnectable\", \"nodesFocusable\", \"nodeOrigin\", \"edgesFocusable\", \"elementsSelectable\", \"defaultViewport\", \"minZoom\", \"maxZoom\", \"translateExtent\", \"preventScrolling\", \"nodeExtent\", \"defaultMarkerColor\", \"zoomOnScroll\", \"zoomOnPinch\", \"panOnScroll\", \"panOnScrollSpeed\", \"panOnScrollMode\", \"zoomOnDoubleClick\", \"panOnDrag\", \"onPaneClick\", \"onPaneMouseEnter\", \"onPaneMouseMove\", \"onPaneMouseLeave\", \"onPaneScroll\", \"onPaneContextMenu\", \"children\", \"onEdgeUpdate\", \"onEdgeContextMenu\", \"onEdgeDoubleClick\", \"onEdgeMouseEnter\", \"onEdgeMouseMove\", \"onEdgeMouseLeave\", \"onEdgeUpdateStart\", \"onEdgeUpdateEnd\", \"edgeUpdaterRadius\", \"onNodesChange\", \"onEdgesChange\", \"noDragClassName\", \"noWheelClassName\", \"noPanClassName\", \"fitView\", \"fitViewOptions\", \"connectOnClick\", \"attributionPosition\", \"proOptions\", \"defaultEdgeOptions\", \"elevateNodesOnSelect\", \"elevateEdgesOnSelect\", \"disableKeyboardA11y\", \"autoPanOnConnect\", \"autoPanOnNodeDrag\", \"connectionRadius\", \"onError\", \"style\", \"id\"];\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\nvar StoreContext = createContext(null);\nvar Provider$1 = StoreContext.Provider;\nvar errorMessages = {\n  '001': function _() {\n    return '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001';\n  },\n  '002': function _() {\n    return \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\";\n  },\n  '003': function _(nodeType) {\n    return \"Node type \\\"\".concat(nodeType, \"\\\" not found. Using fallback type \\\"default\\\".\");\n  },\n  '004': function _() {\n    return 'The React Flow parent container needs a width and a height to render the graph.';\n  },\n  '005': function _() {\n    return 'Only child nodes can use a parent extent.';\n  },\n  '006': function _() {\n    return \"Can't create edge. An edge needs a source and a target.\";\n  },\n  '007': function _(id) {\n    return \"The old edge with id=\".concat(id, \" does not exist.\");\n  },\n  '009': function _(type) {\n    return \"Marker type \\\"\".concat(type, \"\\\" doesn't exist.\");\n  },\n  '008': function _(sourceHandle, edge) {\n    return \"Couldn't create edge for \".concat(!sourceHandle ? 'source' : 'target', \" handle id: \\\"\").concat(!sourceHandle ? edge.sourceHandle : edge.targetHandle, \"\\\", edge id: \").concat(edge.id, \".\");\n  },\n  '010': function _() {\n    return 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.';\n  },\n  '011': function _(edgeType) {\n    return \"Edge type \\\"\".concat(edgeType, \"\\\" not found. Using fallback type \\\"default\\\".\");\n  }\n};\nvar zustandErrorMessage = errorMessages['001']();\nfunction useStore(selector, equalityFn) {\n  var store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useStore$1(store, selector, equalityFn);\n}\nvar useStoreApi = function useStoreApi() {\n  var store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useMemo(function () {\n    return {\n      getState: store.getState,\n      setState: store.setState,\n      subscribe: store.subscribe,\n      destroy: store.destroy\n    };\n  }, [store]);\n};\nvar selector$g = function selector$g(s) {\n  return s.userSelectionActive ? 'none' : 'all';\n};\nfunction Panel(_ref) {\n  var position = _ref.position,\n    children = _ref.children,\n    className = _ref.className,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var pointerEvents = useStore(selector$g);\n  var positionClasses = \"\".concat(position).split('-');\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    className: cc(['react-flow__panel', className].concat(_toConsumableArray(positionClasses))),\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      pointerEvents: pointerEvents\n    })\n  }, rest), {}, {\n    children: children\n  }));\n}\nfunction Attribution(_ref2) {\n  var proOptions = _ref2.proOptions,\n    _ref2$position = _ref2.position,\n    position = _ref2$position === void 0 ? 'bottom-right' : _ref2$position;\n  if (proOptions !== null && proOptions !== void 0 && proOptions.hideAttribution) {\n    return null;\n  }\n  return jsx(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\",\n    children: jsx(\"a\", {\n      href: \"https://reactflow.dev\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"React Flow attribution\",\n      children: \"React Flow\"\n    })\n  });\n}\nvar EdgeText = function EdgeText(_ref3) {\n  var x = _ref3.x,\n    y = _ref3.y,\n    label = _ref3.label,\n    _ref3$labelStyle = _ref3.labelStyle,\n    labelStyle = _ref3$labelStyle === void 0 ? {} : _ref3$labelStyle,\n    _ref3$labelShowBg = _ref3.labelShowBg,\n    labelShowBg = _ref3$labelShowBg === void 0 ? true : _ref3$labelShowBg,\n    _ref3$labelBgStyle = _ref3.labelBgStyle,\n    labelBgStyle = _ref3$labelBgStyle === void 0 ? {} : _ref3$labelBgStyle,\n    _ref3$labelBgPadding = _ref3.labelBgPadding,\n    labelBgPadding = _ref3$labelBgPadding === void 0 ? [2, 4] : _ref3$labelBgPadding,\n    _ref3$labelBgBorderRa = _ref3.labelBgBorderRadius,\n    labelBgBorderRadius = _ref3$labelBgBorderRa === void 0 ? 2 : _ref3$labelBgBorderRa,\n    children = _ref3.children,\n    className = _ref3.className,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  var edgeRef = useRef(null);\n  var _useState = useState({\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    edgeTextBbox = _useState2[0],\n    setEdgeTextBbox = _useState2[1];\n  var edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(function () {\n    if (edgeRef.current) {\n      var textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return jsxs(\"g\", _objectSpread(_objectSpread({\n    transform: \"translate(\".concat(x - edgeTextBbox.width / 2, \" \").concat(y - edgeTextBbox.height / 2, \")\"),\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden'\n  }, rest), {}, {\n    children: [labelShowBg && jsx(\"rect\", {\n      width: edgeTextBbox.width + 2 * labelBgPadding[0],\n      x: -labelBgPadding[0],\n      y: -labelBgPadding[1],\n      height: edgeTextBbox.height + 2 * labelBgPadding[1],\n      className: \"react-flow__edge-textbg\",\n      style: labelBgStyle,\n      rx: labelBgBorderRadius,\n      ry: labelBgBorderRadius\n    }), jsx(\"text\", {\n      className: \"react-flow__edge-text\",\n      y: edgeTextBbox.height / 2,\n      dy: \"0.3em\",\n      ref: edgeRef,\n      style: labelStyle,\n      children: label\n    }), children]\n  }));\n};\nvar EdgeText$1 = memo(EdgeText);\nvar getDimensions = function getDimensions(node) {\n  return {\n    width: node.offsetWidth,\n    height: node.offsetHeight\n  };\n};\nvar clamp = function clamp(val) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nvar clampPosition = function clampPosition() {\n  var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  var extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nvar calcAutoPanVelocity = function calcAutoPanVelocity(value, min, max) {\n  if (value < min) {\n    return clamp(Math.abs(value - min), 1, 50) / 50;\n  } else if (value > max) {\n    return -clamp(Math.abs(value - max), 1, 50) / 50;\n  }\n  return 0;\n};\nvar calcAutoPan = function calcAutoPan(pos, bounds) {\n  var xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n  var yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n  return [xMovement, yMovement];\n};\nvar getHostForElement = function getHostForElement(element) {\n  var _element$getRootNode, _window;\n  return ((_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element)) || ((_window = window) === null || _window === void 0 ? void 0 : _window.document);\n};\nvar getBoundsOfBoxes = function getBoundsOfBoxes(box1, box2) {\n  return {\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2)\n  };\n};\nvar rectToBox = function rectToBox(_ref4) {\n  var x = _ref4.x,\n    y = _ref4.y,\n    width = _ref4.width,\n    height = _ref4.height;\n  return {\n    x: x,\n    y: y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nvar boxToRect = function boxToRect(_ref5) {\n  var x = _ref5.x,\n    y = _ref5.y,\n    x2 = _ref5.x2,\n    y2 = _ref5.y2;\n  return {\n    x: x,\n    y: y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nvar nodeToRect = function nodeToRect(node) {\n  return _objectSpread(_objectSpread({}, node.positionAbsolute || {\n    x: 0,\n    y: 0\n  }), {}, {\n    width: node.width || 0,\n    height: node.height || 0\n  });\n};\nvar getBoundsOfRects = function getBoundsOfRects(rect1, rect2) {\n  return boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\n};\nvar getOverlappingArea = function getOverlappingArea(rectA, rectB) {\n  var xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  var yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar isRectObject = function isRectObject(obj) {\n  return isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n};\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(n) && isFinite(n);\n};\nvar internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nvar elementSelectionKeys = ['Enter', ' ', 'Escape'];\nvar devWarn = function devWarn(id, message) {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\"[React Flow]: \".concat(message, \" Help: https://reactflow.dev/error#\").concat(id));\n  }\n};\nvar isReactKeyboardEvent = function isReactKeyboardEvent(event) {\n  return 'nativeEvent' in event;\n};\nfunction isInputDOMNode(event) {\n  var _kbEvent$composedPath, _kbEvent$composedPath2;\n  var kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  var target = ((_kbEvent$composedPath = kbEvent.composedPath) === null || _kbEvent$composedPath === void 0 ? void 0 : (_kbEvent$composedPath2 = _kbEvent$composedPath.call(kbEvent)) === null || _kbEvent$composedPath2 === void 0 ? void 0 : _kbEvent$composedPath2[0]) || event.target;\n  var isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target === null || target === void 0 ? void 0 : target.nodeName) || (target === null || target === void 0 ? void 0 : target.hasAttribute('contenteditable'));\n  // we want to be able to do a multi selection event if we are in an input field\n  var isModifierKey = event.ctrlKey || event.metaKey || event.shiftKey;\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return isInput && !isModifierKey || !!(target !== null && target !== void 0 && target.closest('.nokey'));\n}\nvar isMouseEvent = function isMouseEvent(event) {\n  return 'clientX' in event;\n};\nvar getEventPosition = function getEventPosition(event, bounds) {\n  var _event$touches, _event$touches2, _bounds$left, _bounds$top;\n  var isMouseTriggered = isMouseEvent(event);\n  var evtX = isMouseTriggered ? event.clientX : (_event$touches = event.touches) === null || _event$touches === void 0 ? void 0 : _event$touches[0].clientX;\n  var evtY = isMouseTriggered ? event.clientY : (_event$touches2 = event.touches) === null || _event$touches2 === void 0 ? void 0 : _event$touches2[0].clientY;\n  return {\n    x: evtX - ((_bounds$left = bounds === null || bounds === void 0 ? void 0 : bounds.left) !== null && _bounds$left !== void 0 ? _bounds$left : 0),\n    y: evtY - ((_bounds$top = bounds === null || bounds === void 0 ? void 0 : bounds.top) !== null && _bounds$top !== void 0 ? _bounds$top : 0)\n  };\n};\nvar BaseEdge = function BaseEdge(_ref6) {\n  var path = _ref6.path,\n    labelX = _ref6.labelX,\n    labelY = _ref6.labelY,\n    label = _ref6.label,\n    labelStyle = _ref6.labelStyle,\n    labelShowBg = _ref6.labelShowBg,\n    labelBgStyle = _ref6.labelBgStyle,\n    labelBgPadding = _ref6.labelBgPadding,\n    labelBgBorderRadius = _ref6.labelBgBorderRadius,\n    style = _ref6.style,\n    markerEnd = _ref6.markerEnd,\n    markerStart = _ref6.markerStart,\n    _ref6$interactionWidt = _ref6.interactionWidth,\n    interactionWidth = _ref6$interactionWidt === void 0 ? 20 : _ref6$interactionWidt;\n  return jsxs(Fragment, {\n    children: [jsx(\"path\", {\n      style: style,\n      d: path,\n      fill: \"none\",\n      className: \"react-flow__edge-path\",\n      markerEnd: markerEnd,\n      markerStart: markerStart\n    }), interactionWidth && jsx(\"path\", {\n      d: path,\n      fill: \"none\",\n      strokeOpacity: 0,\n      strokeWidth: interactionWidth,\n      className: \"react-flow__edge-interaction\"\n    }), label && isNumeric(labelX) && isNumeric(labelY) ? jsx(EdgeText$1, {\n      x: labelX,\n      y: labelY,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius\n    }) : null]\n  });\n};\nBaseEdge.displayName = 'BaseEdge';\nvar getMarkerEnd = function getMarkerEnd(markerType, markerEndId) {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return \"url(#\".concat(markerEndId, \")\");\n  }\n  return typeof markerType !== 'undefined' ? \"url(#react-flow__\".concat(markerType, \")\") : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : function (event) {\n    var edge = getState().edges.find(function (e) {\n      return e.id === id;\n    });\n    if (edge) {\n      handler(event, _objectSpread({}, edge));\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  var sourceX = _ref7.sourceX,\n    sourceY = _ref7.sourceY,\n    targetX = _ref7.targetX,\n    targetY = _ref7.targetY;\n  var xOffset = Math.abs(targetX - sourceX) / 2;\n  var centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  var yOffset = Math.abs(targetY - sourceY) / 2;\n  var centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  var sourceX = _ref8.sourceX,\n    sourceY = _ref8.sourceY,\n    targetX = _ref8.targetX,\n    targetY = _ref8.targetY,\n    sourceControlX = _ref8.sourceControlX,\n    sourceControlY = _ref8.sourceControlY,\n    targetControlX = _ref8.targetControlX,\n    targetControlY = _ref8.targetControlY;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  var centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  var centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  var offsetX = Math.abs(centerX - sourceX);\n  var offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl(_ref9) {\n  var pos = _ref9.pos,\n    x1 = _ref9.x1,\n    y1 = _ref9.y1,\n    x2 = _ref9.x2,\n    y2 = _ref9.y2;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref10) {\n  var sourceX = _ref10.sourceX,\n    sourceY = _ref10.sourceY,\n    _ref10$sourcePosition = _ref10.sourcePosition,\n    sourcePosition = _ref10$sourcePosition === void 0 ? Position.Bottom : _ref10$sourcePosition,\n    targetX = _ref10.targetX,\n    targetY = _ref10.targetY,\n    _ref10$targetPosition = _ref10.targetPosition,\n    targetPosition = _ref10$targetPosition === void 0 ? Position.Top : _ref10$targetPosition;\n  var _getControl = getControl({\n      pos: sourcePosition,\n      x1: sourceX,\n      y1: sourceY,\n      x2: targetX,\n      y2: targetY\n    }),\n    _getControl2 = _slicedToArray(_getControl, 2),\n    sourceControlX = _getControl2[0],\n    sourceControlY = _getControl2[1];\n  var _getControl3 = getControl({\n      pos: targetPosition,\n      x1: targetX,\n      y1: targetY,\n      x2: sourceX,\n      y2: sourceY\n    }),\n    _getControl4 = _slicedToArray(_getControl3, 2),\n    targetControlX = _getControl4[0],\n    targetControlY = _getControl4[1];\n  var _getBezierEdgeCenter = getBezierEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourceControlX: sourceControlX,\n      sourceControlY: sourceControlY,\n      targetControlX: targetControlX,\n      targetControlY: targetControlY\n    }),\n    _getBezierEdgeCenter2 = _slicedToArray(_getBezierEdgeCenter, 4),\n    labelX = _getBezierEdgeCenter2[0],\n    labelY = _getBezierEdgeCenter2[1],\n    offsetX = _getBezierEdgeCenter2[2],\n    offsetY = _getBezierEdgeCenter2[3];\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar SimpleBezierEdge = memo(function (_ref11) {\n  var sourceX = _ref11.sourceX,\n    sourceY = _ref11.sourceY,\n    targetX = _ref11.targetX,\n    targetY = _ref11.targetY,\n    _ref11$sourcePosition = _ref11.sourcePosition,\n    sourcePosition = _ref11$sourcePosition === void 0 ? Position.Bottom : _ref11$sourcePosition,\n    _ref11$targetPosition = _ref11.targetPosition,\n    targetPosition = _ref11$targetPosition === void 0 ? Position.Top : _ref11$targetPosition,\n    label = _ref11.label,\n    labelStyle = _ref11.labelStyle,\n    labelShowBg = _ref11.labelShowBg,\n    labelBgStyle = _ref11.labelBgStyle,\n    labelBgPadding = _ref11.labelBgPadding,\n    labelBgBorderRadius = _ref11.labelBgBorderRadius,\n    style = _ref11.style,\n    markerEnd = _ref11.markerEnd,\n    markerStart = _ref11.markerStart,\n    interactionWidth = _ref11.interactionWidth;\n  var _getSimpleBezierPath = getSimpleBezierPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition\n    }),\n    _getSimpleBezierPath2 = _slicedToArray(_getSimpleBezierPath, 3),\n    path = _getSimpleBezierPath2[0],\n    labelX = _getSimpleBezierPath2[1],\n    labelY = _getSimpleBezierPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nvar handleDirections = (_handleDirections = {}, _defineProperty(_handleDirections, Position.Left, {\n  x: -1,\n  y: 0\n}), _defineProperty(_handleDirections, Position.Right, {\n  x: 1,\n  y: 0\n}), _defineProperty(_handleDirections, Position.Top, {\n  x: 0,\n  y: -1\n}), _defineProperty(_handleDirections, Position.Bottom, {\n  x: 0,\n  y: 1\n}), _handleDirections);\nvar getDirection = function getDirection(_ref12) {\n  var source = _ref12.source,\n    _ref12$sourcePosition = _ref12.sourcePosition,\n    sourcePosition = _ref12$sourcePosition === void 0 ? Position.Bottom : _ref12$sourcePosition,\n    target = _ref12.target;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nvar distance = function distance(a, b) {\n  return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n};\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref13) {\n  var source = _ref13.source,\n    _ref13$sourcePosition = _ref13.sourcePosition,\n    sourcePosition = _ref13$sourcePosition === void 0 ? Position.Bottom : _ref13$sourcePosition,\n    target = _ref13.target,\n    _ref13$targetPosition = _ref13.targetPosition,\n    targetPosition = _ref13$targetPosition === void 0 ? Position.Top : _ref13$targetPosition,\n    center = _ref13.center,\n    offset = _ref13.offset;\n  var sourceDir = handleDirections[sourcePosition];\n  var targetDir = handleDirections[targetPosition];\n  var sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  var targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  var dir = getDirection({\n    source: sourceGapped,\n    sourcePosition: sourcePosition,\n    target: targetGapped\n  });\n  var dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  var currDir = dir[dirAccessor];\n  var points = [];\n  var centerX, centerY;\n  var _getEdgeCenter = getEdgeCenter({\n      sourceX: source.x,\n      sourceY: source.y,\n      targetX: target.x,\n      targetY: target.y\n    }),\n    _getEdgeCenter2 = _slicedToArray(_getEdgeCenter, 4),\n    defaultCenterX = _getEdgeCenter2[0],\n    defaultCenterY = _getEdgeCenter2[1],\n    defaultOffsetX = _getEdgeCenter2[2],\n    defaultOffsetY = _getEdgeCenter2[3];\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    var verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    var horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    var sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    var targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      var dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      var isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      var sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      var sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      var flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    centerX = points[0].x;\n    centerY = points[0].y;\n  }\n  var pathPoints = [source, sourceGapped].concat(_toConsumableArray(points), [targetGapped, target]);\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  var bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  var x = b.x,\n    y = b.y;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return \"L\".concat(x, \" \").concat(y);\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    var _xDir = a.x < c.x ? -1 : 1;\n    var _yDir = a.y < c.y ? 1 : -1;\n    return \"L \".concat(x + bendSize * _xDir, \",\").concat(y, \"Q \").concat(x, \",\").concat(y, \" \").concat(x, \",\").concat(y + bendSize * _yDir);\n  }\n  var xDir = a.x < c.x ? 1 : -1;\n  var yDir = a.y < c.y ? -1 : 1;\n  return \"L \".concat(x, \",\").concat(y + bendSize * yDir, \"Q \").concat(x, \",\").concat(y, \" \").concat(x + bendSize * xDir, \",\").concat(y);\n}\nfunction getSmoothStepPath(_ref14) {\n  var sourceX = _ref14.sourceX,\n    sourceY = _ref14.sourceY,\n    _ref14$sourcePosition = _ref14.sourcePosition,\n    sourcePosition = _ref14$sourcePosition === void 0 ? Position.Bottom : _ref14$sourcePosition,\n    targetX = _ref14.targetX,\n    targetY = _ref14.targetY,\n    _ref14$targetPosition = _ref14.targetPosition,\n    targetPosition = _ref14$targetPosition === void 0 ? Position.Top : _ref14$targetPosition,\n    _ref14$borderRadius = _ref14.borderRadius,\n    borderRadius = _ref14$borderRadius === void 0 ? 5 : _ref14$borderRadius,\n    centerX = _ref14.centerX,\n    centerY = _ref14.centerY,\n    _ref14$offset = _ref14.offset,\n    offset = _ref14$offset === void 0 ? 20 : _ref14$offset;\n  var _getPoints = getPoints({\n      source: {\n        x: sourceX,\n        y: sourceY\n      },\n      sourcePosition: sourcePosition,\n      target: {\n        x: targetX,\n        y: targetY\n      },\n      targetPosition: targetPosition,\n      center: {\n        x: centerX,\n        y: centerY\n      },\n      offset: offset\n    }),\n    _getPoints2 = _slicedToArray(_getPoints, 5),\n    points = _getPoints2[0],\n    labelX = _getPoints2[1],\n    labelY = _getPoints2[2],\n    offsetX = _getPoints2[3],\n    offsetY = _getPoints2[4];\n  var path = points.reduce(function (res, p, i) {\n    var segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = \"\".concat(i === 0 ? 'M' : 'L').concat(p.x, \" \").concat(p.y);\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nvar SmoothStepEdge = memo(function (_ref15) {\n  var sourceX = _ref15.sourceX,\n    sourceY = _ref15.sourceY,\n    targetX = _ref15.targetX,\n    targetY = _ref15.targetY,\n    label = _ref15.label,\n    labelStyle = _ref15.labelStyle,\n    labelShowBg = _ref15.labelShowBg,\n    labelBgStyle = _ref15.labelBgStyle,\n    labelBgPadding = _ref15.labelBgPadding,\n    labelBgBorderRadius = _ref15.labelBgBorderRadius,\n    style = _ref15.style,\n    _ref15$sourcePosition = _ref15.sourcePosition,\n    sourcePosition = _ref15$sourcePosition === void 0 ? Position.Bottom : _ref15$sourcePosition,\n    _ref15$targetPosition = _ref15.targetPosition,\n    targetPosition = _ref15$targetPosition === void 0 ? Position.Top : _ref15$targetPosition,\n    markerEnd = _ref15.markerEnd,\n    markerStart = _ref15.markerStart,\n    pathOptions = _ref15.pathOptions,\n    interactionWidth = _ref15.interactionWidth;\n  var _getSmoothStepPath = getSmoothStepPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition,\n      borderRadius: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.borderRadius,\n      offset: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.offset\n    }),\n    _getSmoothStepPath2 = _slicedToArray(_getSmoothStepPath, 3),\n    path = _getSmoothStepPath2[0],\n    labelX = _getSmoothStepPath2[1],\n    labelY = _getSmoothStepPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nvar StepEdge = memo(function (props) {\n  var _props$pathOptions2;\n  return jsx(SmoothStepEdge, _objectSpread(_objectSpread({}, props), {}, {\n    pathOptions: useMemo(function () {\n      var _props$pathOptions;\n      return {\n        borderRadius: 0,\n        offset: (_props$pathOptions = props.pathOptions) === null || _props$pathOptions === void 0 ? void 0 : _props$pathOptions.offset\n      };\n    }, [(_props$pathOptions2 = props.pathOptions) === null || _props$pathOptions2 === void 0 ? void 0 : _props$pathOptions2.offset])\n  }));\n});\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref16) {\n  var sourceX = _ref16.sourceX,\n    sourceY = _ref16.sourceY,\n    targetX = _ref16.targetX,\n    targetY = _ref16.targetY;\n  var _getEdgeCenter3 = getEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }),\n    _getEdgeCenter4 = _slicedToArray(_getEdgeCenter3, 4),\n    labelX = _getEdgeCenter4[0],\n    labelY = _getEdgeCenter4[1],\n    offsetX = _getEdgeCenter4[2],\n    offsetY = _getEdgeCenter4[3];\n  return [\"M \".concat(sourceX, \",\").concat(sourceY, \"L \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar StraightEdge = memo(function (_ref17) {\n  var sourceX = _ref17.sourceX,\n    sourceY = _ref17.sourceY,\n    targetX = _ref17.targetX,\n    targetY = _ref17.targetY,\n    label = _ref17.label,\n    labelStyle = _ref17.labelStyle,\n    labelShowBg = _ref17.labelShowBg,\n    labelBgStyle = _ref17.labelBgStyle,\n    labelBgPadding = _ref17.labelBgPadding,\n    labelBgBorderRadius = _ref17.labelBgBorderRadius,\n    style = _ref17.style,\n    markerEnd = _ref17.markerEnd,\n    markerStart = _ref17.markerStart,\n    interactionWidth = _ref17.interactionWidth;\n  var _getStraightPath = getStraightPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }),\n    _getStraightPath2 = _slicedToArray(_getStraightPath, 3),\n    path = _getStraightPath2[0],\n    labelX = _getStraightPath2[1],\n    labelY = _getStraightPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref18) {\n  var pos = _ref18.pos,\n    x1 = _ref18.x1,\n    y1 = _ref18.y1,\n    x2 = _ref18.x2,\n    y2 = _ref18.y2,\n    c = _ref18.c;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref19) {\n  var sourceX = _ref19.sourceX,\n    sourceY = _ref19.sourceY,\n    _ref19$sourcePosition = _ref19.sourcePosition,\n    sourcePosition = _ref19$sourcePosition === void 0 ? Position.Bottom : _ref19$sourcePosition,\n    targetX = _ref19.targetX,\n    targetY = _ref19.targetY,\n    _ref19$targetPosition = _ref19.targetPosition,\n    targetPosition = _ref19$targetPosition === void 0 ? Position.Top : _ref19$targetPosition,\n    _ref19$curvature = _ref19.curvature,\n    curvature = _ref19$curvature === void 0 ? 0.25 : _ref19$curvature;\n  var _getControlWithCurvat = getControlWithCurvature({\n      pos: sourcePosition,\n      x1: sourceX,\n      y1: sourceY,\n      x2: targetX,\n      y2: targetY,\n      c: curvature\n    }),\n    _getControlWithCurvat2 = _slicedToArray(_getControlWithCurvat, 2),\n    sourceControlX = _getControlWithCurvat2[0],\n    sourceControlY = _getControlWithCurvat2[1];\n  var _getControlWithCurvat3 = getControlWithCurvature({\n      pos: targetPosition,\n      x1: targetX,\n      y1: targetY,\n      x2: sourceX,\n      y2: sourceY,\n      c: curvature\n    }),\n    _getControlWithCurvat4 = _slicedToArray(_getControlWithCurvat3, 2),\n    targetControlX = _getControlWithCurvat4[0],\n    targetControlY = _getControlWithCurvat4[1];\n  var _getBezierEdgeCenter3 = getBezierEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourceControlX: sourceControlX,\n      sourceControlY: sourceControlY,\n      targetControlX: targetControlX,\n      targetControlY: targetControlY\n    }),\n    _getBezierEdgeCenter4 = _slicedToArray(_getBezierEdgeCenter3, 4),\n    labelX = _getBezierEdgeCenter4[0],\n    labelY = _getBezierEdgeCenter4[1],\n    offsetX = _getBezierEdgeCenter4[2],\n    offsetY = _getBezierEdgeCenter4[3];\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar BezierEdge = memo(function (_ref20) {\n  var sourceX = _ref20.sourceX,\n    sourceY = _ref20.sourceY,\n    targetX = _ref20.targetX,\n    targetY = _ref20.targetY,\n    _ref20$sourcePosition = _ref20.sourcePosition,\n    sourcePosition = _ref20$sourcePosition === void 0 ? Position.Bottom : _ref20$sourcePosition,\n    _ref20$targetPosition = _ref20.targetPosition,\n    targetPosition = _ref20$targetPosition === void 0 ? Position.Top : _ref20$targetPosition,\n    label = _ref20.label,\n    labelStyle = _ref20.labelStyle,\n    labelShowBg = _ref20.labelShowBg,\n    labelBgStyle = _ref20.labelBgStyle,\n    labelBgPadding = _ref20.labelBgPadding,\n    labelBgBorderRadius = _ref20.labelBgBorderRadius,\n    style = _ref20.style,\n    markerEnd = _ref20.markerEnd,\n    markerStart = _ref20.markerStart,\n    pathOptions = _ref20.pathOptions,\n    interactionWidth = _ref20.interactionWidth;\n  var _getBezierPath = getBezierPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition,\n      curvature: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.curvature\n    }),\n    _getBezierPath2 = _slicedToArray(_getBezierPath, 3),\n    path = _getBezierPath2[0],\n    labelX = _getBezierPath2[1],\n    labelY = _getBezierPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nvar NodeIdContext = createContext(null);\nvar Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nvar useNodeId = function useNodeId() {\n  var nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\nvar isEdge = function isEdge(element) {\n  return 'id' in element && 'source' in element && 'target' in element;\n};\nvar isNode = function isNode(element) {\n  return 'id' in element && !('source' in element) && !('target' in element);\n};\nvar getOutgoers = function getOutgoers(node, nodes, edges) {\n  if (!isNode(node)) {\n    return [];\n  }\n  var outgoerIds = edges.filter(function (e) {\n    return e.source === node.id;\n  }).map(function (e) {\n    return e.target;\n  });\n  return nodes.filter(function (n) {\n    return outgoerIds.includes(n.id);\n  });\n};\nvar getIncomers = function getIncomers(node, nodes, edges) {\n  if (!isNode(node)) {\n    return [];\n  }\n  var incomersIds = edges.filter(function (e) {\n    return e.target === node.id;\n  }).map(function (e) {\n    return e.source;\n  });\n  return nodes.filter(function (n) {\n    return incomersIds.includes(n.id);\n  });\n};\nvar getEdgeId = function getEdgeId(_ref21) {\n  var source = _ref21.source,\n    sourceHandle = _ref21.sourceHandle,\n    target = _ref21.target,\n    targetHandle = _ref21.targetHandle;\n  return \"reactflow__edge-\".concat(source).concat(sourceHandle || '', \"-\").concat(target).concat(targetHandle || '');\n};\nvar getMarkerId = function getMarkerId(marker, rfId) {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  var idPrefix = rfId ? \"\".concat(rfId, \"__\") : '';\n  return \"\".concat(idPrefix).concat(Object.keys(marker).sort().map(function (key) {\n    return \"\".concat(key, \"=\").concat(marker[key]);\n  }).join('&'));\n};\nvar connectionExists = function connectionExists(edge, edges) {\n  return edges.some(function (el) {\n    return el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle);\n  });\n};\nvar addEdge = function addEdge(edgeParams, edges) {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn('006', errorMessages['006']());\n    return edges;\n  }\n  var edge;\n  if (isEdge(edgeParams)) {\n    edge = _objectSpread({}, edgeParams);\n  } else {\n    edge = _objectSpread(_objectSpread({}, edgeParams), {}, {\n      id: getEdgeId(edgeParams)\n    });\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nvar updateEdge = function updateEdge(oldEdge, newConnection, edges) {\n  if (!newConnection.source || !newConnection.target) {\n    devWarn('006', errorMessages['006']());\n    return edges;\n  }\n  var foundEdge = edges.find(function (e) {\n    return e.id === oldEdge.id;\n  });\n  if (!foundEdge) {\n    devWarn('007', errorMessages['007'](oldEdge.id));\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  var edge = _objectSpread(_objectSpread({}, oldEdge), {}, {\n    id: getEdgeId(newConnection),\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  });\n  return edges.filter(function (e) {\n    return e.id !== oldEdge.id;\n  }).concat(edge);\n};\nvar pointToRendererPoint = function pointToRendererPoint(_ref22, _ref23, snapToGrid, _ref24) {\n  var x = _ref22.x,\n    y = _ref22.y;\n  var _ref25 = _slicedToArray(_ref23, 3),\n    tx = _ref25[0],\n    ty = _ref25[1],\n    tScale = _ref25[2];\n  var _ref26 = _slicedToArray(_ref24, 2),\n    snapX = _ref26[0],\n    snapY = _ref26[1];\n  var position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nvar rendererPointToPoint = function rendererPointToPoint(_ref27, _ref28) {\n  var x = _ref27.x,\n    y = _ref27.y;\n  var _ref29 = _slicedToArray(_ref28, 3),\n    tx = _ref29[0],\n    ty = _ref29[1],\n    tScale = _ref29[2];\n  return {\n    x: x * tScale + tx,\n    y: y * tScale + ty\n  };\n};\nvar getNodePositionWithOrigin = function getNodePositionWithOrigin(node) {\n  var _node$width, _node$height;\n  var nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  var offsetX = ((_node$width = node.width) !== null && _node$width !== void 0 ? _node$width : 0) * nodeOrigin[0];\n  var offsetY = ((_node$height = node.height) !== null && _node$height !== void 0 ? _node$height : 0) * nodeOrigin[1];\n  var position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return _objectSpread(_objectSpread({}, position), {}, {\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  });\n};\nvar getRectOfNodes = function getRectOfNodes(nodes) {\n  var nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  var box = nodes.reduce(function (currBox, node) {\n    var _getNodePositionWithO = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute,\n      x = _getNodePositionWithO.x,\n      y = _getNodePositionWithO.y;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x: x,\n      y: y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\nvar getNodesInside = function getNodesInside(nodeInternals, rect) {\n  var _ref30 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1],\n    _ref31 = _slicedToArray(_ref30, 3),\n    tx = _ref31[0],\n    ty = _ref31[1],\n    tScale = _ref31[2];\n  var partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var nodeOrigin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0];\n  var paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  var visibleNodes = [];\n  nodeInternals.forEach(function (node) {\n    var width = node.width,\n      height = node.height,\n      _node$selectable = node.selectable,\n      selectable = _node$selectable === void 0 ? true : _node$selectable,\n      _node$hidden = node.hidden,\n      hidden = _node$hidden === void 0 ? false : _node$hidden;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    var _getNodePositionWithO2 = getNodePositionWithOrigin(node, nodeOrigin),\n      positionAbsolute = _getNodePositionWithO2.positionAbsolute;\n    var nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    var overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    var notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    var partiallyVisible = partially && overlappingArea > 0;\n    var area = (width || 0) * (height || 0);\n    var isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nvar getConnectedEdges = function getConnectedEdges(nodes, edges) {\n  var nodeIds = nodes.map(function (node) {\n    return node.id;\n  });\n  return edges.filter(function (edge) {\n    return nodeIds.includes(edge.source) || nodeIds.includes(edge.target);\n  });\n};\nvar getTransformForBounds = function getTransformForBounds(bounds, width, height, minZoom, maxZoom) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  var xZoom = width / (bounds.width * (1 + padding));\n  var yZoom = height / (bounds.height * (1 + padding));\n  var zoom = Math.min(xZoom, yZoom);\n  var clampedZoom = clamp(zoom, minZoom, maxZoom);\n  var boundsCenterX = bounds.x + bounds.width / 2;\n  var boundsCenterY = bounds.y + bounds.height / 2;\n  var x = width / 2 - boundsCenterX * clampedZoom;\n  var y = height / 2 - boundsCenterY * clampedZoom;\n  return [x, y, clampedZoom];\n};\nvar getD3Transition = function getD3Transition(selection) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n  return (handleBounds[type] || []).reduce(function (res, h) {\n    if (\"\".concat(node.id, \"-\").concat(h.id, \"-\").concat(type) !== currentHandle) {\n      var _node$positionAbsolut, _node$positionAbsolut2, _node$positionAbsolut3, _node$positionAbsolut4;\n      res.push({\n        id: h.id || null,\n        type: type,\n        nodeId: node.id,\n        x: ((_node$positionAbsolut = (_node$positionAbsolut2 = node.positionAbsolute) === null || _node$positionAbsolut2 === void 0 ? void 0 : _node$positionAbsolut2.x) !== null && _node$positionAbsolut !== void 0 ? _node$positionAbsolut : 0) + h.x + h.width / 2,\n        y: ((_node$positionAbsolut3 = (_node$positionAbsolut4 = node.positionAbsolute) === null || _node$positionAbsolut4 === void 0 ? void 0 : _node$positionAbsolut4.y) !== null && _node$positionAbsolut3 !== void 0 ? _node$positionAbsolut3 : 0) + h.y + h.height / 2\n      });\n    }\n    return res;\n  }, []);\n}\nfunction getClosestHandle(pos, connectionRadius, handles) {\n  var closestHandle = null;\n  var minDistance = Infinity;\n  handles.forEach(function (handle) {\n    var distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n    if (distance <= connectionRadius && distance < minDistance) {\n      minDistance = distance;\n      closestHandle = handle;\n    }\n  });\n  return closestHandle;\n}\nvar nullConnection = {\n  source: null,\n  target: null,\n  sourceHandle: null,\n  targetHandle: null\n};\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n  var isTarget = fromType === 'target';\n  var handleDomNode = doc.querySelector(\".react-flow__handle[data-id=\\\"\".concat(handle === null || handle === void 0 ? void 0 : handle.nodeId, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.id, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.type, \"\\\"]\"));\n  var _getEventPosition = getEventPosition(event),\n    x = _getEventPosition.x,\n    y = _getEventPosition.y;\n  var handleBelow = doc.elementFromPoint(x, y);\n  var handleToCheck = handleBelow !== null && handleBelow !== void 0 && handleBelow.classList.contains('react-flow__handle') ? handleBelow : handleDomNode;\n  var result = {\n    handleDomNode: handleToCheck,\n    isValid: false,\n    connection: nullConnection\n  };\n  if (handleToCheck) {\n    var handleType = getHandleType(undefined, handleToCheck);\n    var handleNodeId = handleToCheck.getAttribute('data-nodeid');\n    var handleId = handleToCheck.getAttribute('data-handleid');\n    var connection = {\n      source: isTarget ? handleNodeId : fromNodeId,\n      sourceHandle: isTarget ? handleId : fromHandleId,\n      target: isTarget ? fromNodeId : handleNodeId,\n      targetHandle: isTarget ? fromHandleId : handleId\n    };\n    result.connection = connection;\n    // in strict mode we don't allow target to target or source to source connections\n    var isValid = connectionMode === ConnectionMode.Strict ? isTarget && handleType === 'source' || !isTarget && handleType === 'target' : handleNodeId !== fromNodeId || handleId !== fromHandleId;\n    if (isValid) {\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction getHandleLookup(_ref32) {\n  var nodes = _ref32.nodes,\n    nodeId = _ref32.nodeId,\n    handleId = _ref32.handleId,\n    handleType = _ref32.handleType;\n  return nodes.reduce(function (res, node) {\n    if (node[internalsSymbol]) {\n      var handleBounds = node[internalsSymbol].handleBounds;\n      var sourceHandles = [];\n      var targetHandles = [];\n      if (handleBounds) {\n        sourceHandles = getHandles(node, handleBounds, 'source', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n        targetHandles = getHandles(node, handleBounds, 'target', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n      }\n      res.push.apply(res, _toConsumableArray(sourceHandles).concat(_toConsumableArray(targetHandles)));\n    }\n    return res;\n  }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n  if (edgeUpdaterType) {\n    return edgeUpdaterType;\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('target')) {\n    return 'target';\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('source')) {\n    return 'source';\n  }\n  return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n  handleDomNode === null || handleDomNode === void 0 ? void 0 : handleDomNode.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n  var connectionStatus = null;\n  if (isHandleValid) {\n    connectionStatus = 'valid';\n  } else if (isInsideConnectionRadius && !isHandleValid) {\n    connectionStatus = 'invalid';\n  }\n  return connectionStatus;\n}\nfunction handlePointerDown(_ref33) {\n  var event = _ref33.event,\n    handleId = _ref33.handleId,\n    nodeId = _ref33.nodeId,\n    onConnect = _ref33.onConnect,\n    isTarget = _ref33.isTarget,\n    getState = _ref33.getState,\n    setState = _ref33.setState,\n    isValidConnection = _ref33.isValidConnection,\n    edgeUpdaterType = _ref33.edgeUpdaterType,\n    onEdgeUpdateEnd = _ref33.onEdgeUpdateEnd;\n  // when react-flow is used inside a shadow root we can't use document\n  var doc = getHostForElement(event.target);\n  var _getState = getState(),\n    connectionMode = _getState.connectionMode,\n    domNode = _getState.domNode,\n    autoPanOnConnect = _getState.autoPanOnConnect,\n    connectionRadius = _getState.connectionRadius,\n    onConnectStart = _getState.onConnectStart,\n    panBy = _getState.panBy,\n    getNodes = _getState.getNodes,\n    cancelConnection = _getState.cancelConnection;\n  var autoPanId = 0;\n  var prevClosestHandle;\n  var _getEventPosition2 = getEventPosition(event),\n    x = _getEventPosition2.x,\n    y = _getEventPosition2.y;\n  var clickedHandle = doc === null || doc === void 0 ? void 0 : doc.elementFromPoint(x, y);\n  var handleType = getHandleType(edgeUpdaterType, clickedHandle);\n  var containerBounds = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n  if (!containerBounds || !handleType) {\n    return;\n  }\n  var prevActiveHandle;\n  var connectionPosition = getEventPosition(event, containerBounds);\n  var autoPanStarted = false;\n  var connection = null;\n  var isValid = false;\n  var handleDomNode = null;\n  var handleLookup = getHandleLookup({\n    nodes: getNodes(),\n    nodeId: nodeId,\n    handleId: handleId,\n    handleType: handleType\n  });\n  // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n  var autoPan = function autoPan() {\n    if (!autoPanOnConnect) {\n      return;\n    }\n    var _calcAutoPan = calcAutoPan(connectionPosition, containerBounds),\n      _calcAutoPan2 = _slicedToArray(_calcAutoPan, 2),\n      xMovement = _calcAutoPan2[0],\n      yMovement = _calcAutoPan2[1];\n    panBy({\n      x: xMovement,\n      y: yMovement\n    });\n    autoPanId = requestAnimationFrame(autoPan);\n  };\n  setState({\n    connectionPosition: connectionPosition,\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType,\n    connectionStatus: null\n  });\n  onConnectStart === null || onConnectStart === void 0 ? void 0 : onConnectStart(event, {\n    nodeId: nodeId,\n    handleId: handleId,\n    handleType: handleType\n  });\n  function onPointerMove(event) {\n    var _getState2 = getState(),\n      transform = _getState2.transform;\n    connectionPosition = getEventPosition(event, containerBounds);\n    prevClosestHandle = getClosestHandle(pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup);\n    if (!autoPanStarted) {\n      autoPan();\n      autoPanStarted = true;\n    }\n    var result = isValidHandle(event, prevClosestHandle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n    handleDomNode = result.handleDomNode;\n    connection = result.connection;\n    isValid = result.isValid;\n    setState({\n      connectionPosition: prevClosestHandle && isValid ? rendererPointToPoint({\n        x: prevClosestHandle.x,\n        y: prevClosestHandle.y\n      }, transform) : connectionPosition,\n      connectionStatus: getConnectionStatus(!!prevClosestHandle, isValid)\n    });\n    if (!prevClosestHandle && !isValid && !handleDomNode) {\n      return resetRecentHandle(prevActiveHandle);\n    }\n    if (connection.source !== connection.target && handleDomNode) {\n      resetRecentHandle(prevActiveHandle);\n      prevActiveHandle = handleDomNode;\n      // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n      handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n      handleDomNode.classList.toggle('valid', isValid);\n      handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onPointerUp(event) {\n    var _getState$onConnectEn, _getState3;\n    if ((prevClosestHandle || handleDomNode) && connection && isValid) {\n      onConnect === null || onConnect === void 0 ? void 0 : onConnect(connection);\n    }\n    // it's important to get a fresh reference from the store here\n    // in order to get the latest state of onConnectEnd\n    (_getState$onConnectEn = (_getState3 = getState()).onConnectEnd) === null || _getState$onConnectEn === void 0 ? void 0 : _getState$onConnectEn.call(_getState3, event);\n    if (edgeUpdaterType) {\n      onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 ? void 0 : onEdgeUpdateEnd(event);\n    }\n    resetRecentHandle(prevActiveHandle);\n    cancelConnection();\n    cancelAnimationFrame(autoPanId);\n    autoPanStarted = false;\n    isValid = false;\n    connection = null;\n    handleDomNode = null;\n    doc.removeEventListener('mousemove', onPointerMove);\n    doc.removeEventListener('mouseup', onPointerUp);\n    doc.removeEventListener('touchmove', onPointerMove);\n    doc.removeEventListener('touchend', onPointerUp);\n  }\n  doc.addEventListener('mousemove', onPointerMove);\n  doc.addEventListener('mouseup', onPointerUp);\n  doc.addEventListener('touchmove', onPointerMove);\n  doc.addEventListener('touchend', onPointerUp);\n}\nvar alwaysValid = function alwaysValid() {\n  return true;\n};\nvar selector$f = function selector$f(s) {\n  return {\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName\n  };\n};\nvar Handle = forwardRef(function (_ref34, ref) {\n  var _ref34$type = _ref34.type,\n    type = _ref34$type === void 0 ? 'source' : _ref34$type,\n    _ref34$position = _ref34.position,\n    position = _ref34$position === void 0 ? Position.Top : _ref34$position,\n    _ref34$isValidConnect = _ref34.isValidConnection,\n    isValidConnection = _ref34$isValidConnect === void 0 ? alwaysValid : _ref34$isValidConnect,\n    _ref34$isConnectable = _ref34.isConnectable,\n    isConnectable = _ref34$isConnectable === void 0 ? true : _ref34$isConnectable,\n    id = _ref34.id,\n    onConnect = _ref34.onConnect,\n    children = _ref34.children,\n    className = _ref34.className,\n    onMouseDown = _ref34.onMouseDown,\n    onTouchStart = _ref34.onTouchStart,\n    rest = _objectWithoutProperties(_ref34, _excluded3);\n  var store = useStoreApi();\n  var nodeId = useNodeId();\n  if (!nodeId) {\n    var _store$getState$onErr, _store$getState;\n    (_store$getState$onErr = (_store$getState = store.getState()).onError) === null || _store$getState$onErr === void 0 ? void 0 : _store$getState$onErr.call(_store$getState, '010', errorMessages['010']());\n    return null;\n  }\n  var _useStore = useStore(selector$f, shallow),\n    connectionStartHandle = _useStore.connectionStartHandle,\n    connectOnClick = _useStore.connectOnClick,\n    noPanClassName = _useStore.noPanClassName;\n  var handleId = id || null;\n  var isTarget = type === 'target';\n  var onConnectExtended = function onConnectExtended(params) {\n    var _store$getState2 = store.getState(),\n      defaultEdgeOptions = _store$getState2.defaultEdgeOptions,\n      onConnectAction = _store$getState2.onConnect,\n      hasDefaultEdges = _store$getState2.hasDefaultEdges;\n    var edgeParams = _objectSpread(_objectSpread({}, defaultEdgeOptions), params);\n    if (hasDefaultEdges) {\n      var _store$getState3 = store.getState(),\n        edges = _store$getState3.edges;\n      store.setState({\n        edges: addEdge(edgeParams, edges)\n      });\n    }\n    onConnectAction === null || onConnectAction === void 0 ? void 0 : onConnectAction(edgeParams);\n    onConnect === null || onConnect === void 0 ? void 0 : onConnect(edgeParams);\n  };\n  var onPointerDown = function onPointerDown(event) {\n    var isMouseTriggered = isMouseEvent(event);\n    if (isMouseTriggered && event.button === 0 || !isMouseTriggered) {\n      handlePointerDown({\n        event: event,\n        handleId: handleId,\n        nodeId: nodeId,\n        onConnect: onConnectExtended,\n        isTarget: isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection\n      });\n    }\n    if (isMouseTriggered) {\n      onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown(event);\n    } else {\n      onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event);\n    }\n  };\n  var onClick = function onClick(event) {\n    var _store$getState4 = store.getState(),\n      onClickConnectStart = _store$getState4.onClickConnectStart,\n      onClickConnectEnd = _store$getState4.onClickConnectEnd,\n      connectionMode = _store$getState4.connectionMode;\n    if (!connectionStartHandle) {\n      onClickConnectStart === null || onClickConnectStart === void 0 ? void 0 : onClickConnectStart(event, {\n        nodeId: nodeId,\n        handleId: handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionStartHandle: {\n          nodeId: nodeId,\n          type: type,\n          handleId: handleId\n        }\n      });\n      return;\n    }\n    var doc = getHostForElement(event.target);\n    var _isValidHandle = isValidHandle(event, {\n        nodeId: nodeId,\n        id: handleId,\n        type: type\n      }, connectionMode, connectionStartHandle.nodeId, connectionStartHandle.handleId || null, connectionStartHandle.type, isValidConnection, doc),\n      connection = _isValidHandle.connection,\n      isValid = _isValidHandle.isValid;\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd === null || onClickConnectEnd === void 0 ? void 0 : onClickConnectEnd(event);\n    store.setState({\n      connectionStartHandle: null\n    });\n  };\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    \"data-id\": \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(type),\n    className: cc(['react-flow__handle', \"react-flow__handle-\".concat(position), 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connecting: (connectionStartHandle === null || connectionStartHandle === void 0 ? void 0 : connectionStartHandle.nodeId) === nodeId && (connectionStartHandle === null || connectionStartHandle === void 0 ? void 0 : connectionStartHandle.handleId) === handleId && (connectionStartHandle === null || connectionStartHandle === void 0 ? void 0 : connectionStartHandle.type) === type\n    }]),\n    onMouseDown: onPointerDown,\n    onTouchStart: onPointerDown,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref\n  }, rest), {}, {\n    children: children\n  }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nvar DefaultNode = function DefaultNode(_ref35) {\n  var data = _ref35.data,\n    isConnectable = _ref35.isConnectable,\n    _ref35$targetPosition = _ref35.targetPosition,\n    targetPosition = _ref35$targetPosition === void 0 ? Position.Top : _ref35$targetPosition,\n    _ref35$sourcePosition = _ref35.sourcePosition,\n    sourcePosition = _ref35$sourcePosition === void 0 ? Position.Bottom : _ref35$sourcePosition;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data === null || data === void 0 ? void 0 : data.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nvar InputNode = function InputNode(_ref36) {\n  var data = _ref36.data,\n    isConnectable = _ref36.isConnectable,\n    _ref36$sourcePosition = _ref36.sourcePosition,\n    sourcePosition = _ref36$sourcePosition === void 0 ? Position.Bottom : _ref36$sourcePosition;\n  return jsxs(Fragment, {\n    children: [data === null || data === void 0 ? void 0 : data.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nvar OutputNode = function OutputNode(_ref37) {\n  var data = _ref37.data,\n    isConnectable = _ref37.isConnectable,\n    _ref37$targetPosition = _ref37.targetPosition,\n    targetPosition = _ref37$targetPosition === void 0 ? Position.Top : _ref37$targetPosition;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data === null || data === void 0 ? void 0 : data.label]\n  });\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nvar GroupNode = function GroupNode() {\n  return null;\n};\nGroupNode.displayName = 'GroupNode';\nvar selector$e = function selector$e(s) {\n  return {\n    selectedNodes: s.getNodes().filter(function (n) {\n      return n.selected;\n    }),\n    selectedEdges: s.edges.filter(function (e) {\n      return e.selected;\n    })\n  };\n};\nvar selectId = function selectId(obj) {\n  return obj.id;\n};\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nvar SelectionListener = memo(function (_ref38) {\n  var onSelectionChange = _ref38.onSelectionChange;\n  var store = useStoreApi();\n  var _useStore2 = useStore(selector$e, areEqual),\n    selectedNodes = _useStore2.selectedNodes,\n    selectedEdges = _useStore2.selectedEdges;\n  useEffect(function () {\n    var _store$getState$onSel, _store$getState5;\n    var params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(params);\n    (_store$getState$onSel = (_store$getState5 = store.getState()).onSelectionChange) === null || _store$getState$onSel === void 0 ? void 0 : _store$getState$onSel.call(_store$getState5, params);\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nvar changeSelector = function changeSelector(s) {\n  return !!s.onSelectionChange;\n};\nfunction Wrapper$1(_ref39) {\n  var onSelectionChange = _ref39.onSelectionChange;\n  var storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return jsx(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nvar selector$d = function selector$d(s) {\n  return {\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset\n  };\n};\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(function () {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(function () {\n    if (typeof value !== 'undefined') {\n      setState(_defineProperty({}, key, value));\n    }\n  }, [value]);\n}\nvar StoreUpdater = function StoreUpdater(_ref40) {\n  var nodes = _ref40.nodes,\n    edges = _ref40.edges,\n    defaultNodes = _ref40.defaultNodes,\n    defaultEdges = _ref40.defaultEdges,\n    onConnect = _ref40.onConnect,\n    onConnectStart = _ref40.onConnectStart,\n    onConnectEnd = _ref40.onConnectEnd,\n    onClickConnectStart = _ref40.onClickConnectStart,\n    onClickConnectEnd = _ref40.onClickConnectEnd,\n    nodesDraggable = _ref40.nodesDraggable,\n    nodesConnectable = _ref40.nodesConnectable,\n    nodesFocusable = _ref40.nodesFocusable,\n    edgesFocusable = _ref40.edgesFocusable,\n    elevateNodesOnSelect = _ref40.elevateNodesOnSelect,\n    minZoom = _ref40.minZoom,\n    maxZoom = _ref40.maxZoom,\n    nodeExtent = _ref40.nodeExtent,\n    onNodesChange = _ref40.onNodesChange,\n    onEdgesChange = _ref40.onEdgesChange,\n    elementsSelectable = _ref40.elementsSelectable,\n    connectionMode = _ref40.connectionMode,\n    snapGrid = _ref40.snapGrid,\n    snapToGrid = _ref40.snapToGrid,\n    translateExtent = _ref40.translateExtent,\n    connectOnClick = _ref40.connectOnClick,\n    defaultEdgeOptions = _ref40.defaultEdgeOptions,\n    fitView = _ref40.fitView,\n    fitViewOptions = _ref40.fitViewOptions,\n    onNodesDelete = _ref40.onNodesDelete,\n    onEdgesDelete = _ref40.onEdgesDelete,\n    onNodeDrag = _ref40.onNodeDrag,\n    onNodeDragStart = _ref40.onNodeDragStart,\n    onNodeDragStop = _ref40.onNodeDragStop,\n    onSelectionDrag = _ref40.onSelectionDrag,\n    onSelectionDragStart = _ref40.onSelectionDragStart,\n    onSelectionDragStop = _ref40.onSelectionDragStop,\n    noPanClassName = _ref40.noPanClassName,\n    nodeOrigin = _ref40.nodeOrigin,\n    rfId = _ref40.rfId,\n    autoPanOnConnect = _ref40.autoPanOnConnect,\n    autoPanOnNodeDrag = _ref40.autoPanOnNodeDrag,\n    onError = _ref40.onError,\n    connectionRadius = _ref40.connectionRadius;\n  var _useStore3 = useStore(selector$d, shallow),\n    setNodes = _useStore3.setNodes,\n    setEdges = _useStore3.setEdges,\n    setDefaultNodesAndEdges = _useStore3.setDefaultNodesAndEdges,\n    setMinZoom = _useStore3.setMinZoom,\n    setMaxZoom = _useStore3.setMaxZoom,\n    setTranslateExtent = _useStore3.setTranslateExtent,\n    setNodeExtent = _useStore3.setNodeExtent,\n    reset = _useStore3.reset;\n  var store = useStoreApi();\n  useEffect(function () {\n    var edgesWithDefaults = defaultEdges === null || defaultEdges === void 0 ? void 0 : defaultEdges.map(function (e) {\n      return _objectSpread(_objectSpread({}, e), defaultEdgeOptions);\n    });\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return function () {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n  useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n  useDirectStoreUpdater('onError', onError, store.setState);\n  useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nvar style = {\n  display: 'none'\n};\nvar ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nvar ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nvar ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nvar ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nvar selector$c = function selector$c(s) {\n  return s.ariaLiveMessage;\n};\nfunction AriaLiveMessage(_ref41) {\n  var rfId = _ref41.rfId;\n  var ariaLiveMessage = useStore(selector$c);\n  return jsx(\"div\", {\n    id: \"\".concat(ARIA_LIVE_MESSAGE, \"-\").concat(rfId),\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle,\n    children: ariaLiveMessage\n  });\n}\nfunction A11yDescriptions(_ref42) {\n  var rfId = _ref42.rfId,\n    disableKeyboardA11y = _ref42.disableKeyboardA11y;\n  return jsxs(Fragment, {\n    children: [jsxs(\"div\", {\n      id: \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      style: style,\n      children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' ']\n    }), jsx(\"div\", {\n      id: \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId),\n      style: style,\n      children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"\n    }), !disableKeyboardA11y && jsx(AriaLiveMessage, {\n      rfId: rfId\n    })]\n  });\n}\nvar shiftX = function shiftX(x, shift, position) {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nvar shiftY = function shiftY(y, shift, position) {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nvar EdgeUpdaterClassName = 'react-flow__edgeupdater';\nvar EdgeAnchor = function EdgeAnchor(_ref43) {\n  var position = _ref43.position,\n    centerX = _ref43.centerX,\n    centerY = _ref43.centerY,\n    _ref43$radius = _ref43.radius,\n    radius = _ref43$radius === void 0 ? 10 : _ref43$radius,\n    onMouseDown = _ref43.onMouseDown,\n    onMouseEnter = _ref43.onMouseEnter,\n    onMouseOut = _ref43.onMouseOut,\n    type = _ref43.type;\n  return jsx(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, \"\".concat(EdgeUpdaterClassName, \"-\").concat(type)]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nvar wrapEdge = function wrapEdge(EdgeComponent) {\n  var EdgeWrapper = function EdgeWrapper(_ref44) {\n    var id = _ref44.id,\n      className = _ref44.className,\n      type = _ref44.type,\n      data = _ref44.data,\n      onClick = _ref44.onClick,\n      onEdgeDoubleClick = _ref44.onEdgeDoubleClick,\n      selected = _ref44.selected,\n      animated = _ref44.animated,\n      label = _ref44.label,\n      labelStyle = _ref44.labelStyle,\n      labelShowBg = _ref44.labelShowBg,\n      labelBgStyle = _ref44.labelBgStyle,\n      labelBgPadding = _ref44.labelBgPadding,\n      labelBgBorderRadius = _ref44.labelBgBorderRadius,\n      style = _ref44.style,\n      source = _ref44.source,\n      target = _ref44.target,\n      sourceX = _ref44.sourceX,\n      sourceY = _ref44.sourceY,\n      targetX = _ref44.targetX,\n      targetY = _ref44.targetY,\n      sourcePosition = _ref44.sourcePosition,\n      targetPosition = _ref44.targetPosition,\n      elementsSelectable = _ref44.elementsSelectable,\n      hidden = _ref44.hidden,\n      sourceHandleId = _ref44.sourceHandleId,\n      targetHandleId = _ref44.targetHandleId,\n      onContextMenu = _ref44.onContextMenu,\n      onMouseEnter = _ref44.onMouseEnter,\n      onMouseMove = _ref44.onMouseMove,\n      onMouseLeave = _ref44.onMouseLeave,\n      edgeUpdaterRadius = _ref44.edgeUpdaterRadius,\n      onEdgeUpdate = _ref44.onEdgeUpdate,\n      onEdgeUpdateStart = _ref44.onEdgeUpdateStart,\n      onEdgeUpdateEnd = _ref44.onEdgeUpdateEnd,\n      markerEnd = _ref44.markerEnd,\n      markerStart = _ref44.markerStart,\n      rfId = _ref44.rfId,\n      ariaLabel = _ref44.ariaLabel,\n      isFocusable = _ref44.isFocusable,\n      pathOptions = _ref44.pathOptions,\n      interactionWidth = _ref44.interactionWidth;\n    var edgeRef = useRef(null);\n    var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateHover = _useState4[0],\n      setUpdateHover = _useState4[1];\n    var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updating = _useState6[0],\n      setUpdating = _useState6[1];\n    var store = useStoreApi();\n    var markerStartUrl = useMemo(function () {\n      return \"url(#\".concat(getMarkerId(markerStart, rfId), \")\");\n    }, [markerStart, rfId]);\n    var markerEndUrl = useMemo(function () {\n      return \"url(#\".concat(getMarkerId(markerEnd, rfId), \")\");\n    }, [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    var onEdgeClick = function onEdgeClick(event) {\n      var _store$getState6 = store.getState(),\n        edges = _store$getState6.edges,\n        addSelectedEdges = _store$getState6.addSelectedEdges;\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        addSelectedEdges([id]);\n      }\n      if (onClick) {\n        var edge = edges.find(function (e) {\n          return e.id === id;\n        });\n        onClick(event, edge);\n      }\n    };\n    var onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    var onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    var onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    var onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    var onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    var handleEdgeUpdater = function handleEdgeUpdater(event, isSourceHandle) {\n      // avoid triggering edge updater if mouse btn is not left\n      if (event.button !== 0) {\n        return;\n      }\n      var nodeId = isSourceHandle ? target : source;\n      var handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      var handleType = isSourceHandle ? 'target' : 'source';\n      var isValidConnection = function isValidConnection() {\n        return true;\n      };\n      var isTarget = isSourceHandle;\n      var edge = store.getState().edges.find(function (e) {\n        return e.id === id;\n      });\n      setUpdating(true);\n      onEdgeUpdateStart === null || onEdgeUpdateStart === void 0 ? void 0 : onEdgeUpdateStart(event, edge, handleType);\n      var _onEdgeUpdateEnd = function _onEdgeUpdateEnd(evt) {\n        setUpdating(false);\n        onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 ? void 0 : onEdgeUpdateEnd(evt, edge, handleType);\n      };\n      var onConnectEdge = function onConnectEdge(connection) {\n        return onEdgeUpdate === null || onEdgeUpdate === void 0 ? void 0 : onEdgeUpdate(edge, connection);\n      };\n      handlePointerDown({\n        event: event,\n        handleId: handleId,\n        nodeId: nodeId,\n        onConnect: onConnectEdge,\n        isTarget: isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection,\n        edgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    var onEdgeUpdaterSourceMouseDown = function onEdgeUpdaterSourceMouseDown(event) {\n      return handleEdgeUpdater(event, true);\n    };\n    var onEdgeUpdaterTargetMouseDown = function onEdgeUpdaterTargetMouseDown(event) {\n      return handleEdgeUpdater(event, false);\n    };\n    var onEdgeUpdaterMouseEnter = function onEdgeUpdaterMouseEnter() {\n      return setUpdateHover(true);\n    };\n    var onEdgeUpdaterMouseOut = function onEdgeUpdaterMouseOut() {\n      return setUpdateHover(false);\n    };\n    var inactive = !elementsSelectable && !onClick;\n    var handleEdgeUpdate = typeof onEdgeUpdate !== 'undefined';\n    var onKeyDown = function onKeyDown(event) {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        var _store$getState7 = store.getState(),\n          unselectNodesAndEdges = _store$getState7.unselectNodesAndEdges,\n          addSelectedEdges = _store$getState7.addSelectedEdges,\n          edges = _store$getState7.edges;\n        var unselect = event.key === 'Escape';\n        if (unselect) {\n          var _edgeRef$current;\n          (_edgeRef$current = edgeRef.current) === null || _edgeRef$current === void 0 ? void 0 : _edgeRef$current.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(function (e) {\n              return e.id === id;\n            })]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return jsxs(\"g\", {\n      className: cc(['react-flow__edge', \"react-flow__edge-\".concat(type), className, {\n        selected: selected,\n        animated: animated,\n        inactive: inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"data-testid\": \"rf__edge-\".concat(id),\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : \"Edge from \".concat(source, \" to \").concat(target),\n      \"aria-describedby\": isFocusable ? \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId) : undefined,\n      ref: edgeRef,\n      children: [!updating && jsx(EdgeComponent, {\n        id: id,\n        source: source,\n        target: target,\n        selected: selected,\n        animated: animated,\n        label: label,\n        labelStyle: labelStyle,\n        labelShowBg: labelShowBg,\n        labelBgStyle: labelBgStyle,\n        labelBgPadding: labelBgPadding,\n        labelBgBorderRadius: labelBgBorderRadius,\n        data: data,\n        style: style,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        sourceHandleId: sourceHandleId,\n        targetHandleId: targetHandleId,\n        markerStart: markerStartUrl,\n        markerEnd: markerEndUrl,\n        pathOptions: pathOptions,\n        interactionWidth: interactionWidth\n      }), handleEdgeUpdate && jsxs(Fragment, {\n        children: [jsx(EdgeAnchor, {\n          position: sourcePosition,\n          centerX: sourceX,\n          centerY: sourceY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterSourceMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"source\"\n        }), jsx(EdgeAnchor, {\n          position: targetPosition,\n          centerX: targetX,\n          centerY: targetY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterTargetMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"target\"\n        })]\n      })]\n    });\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  var standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  var wrappedTypes = {};\n  var specialTypes = Object.keys(edgeTypes).filter(function (k) {\n    return !['default', 'bezier'].includes(k);\n  }).reduce(function (res, key) {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nfunction getHandlePosition(position, nodeRect) {\n  var handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var x = ((handle === null || handle === void 0 ? void 0 : handle.x) || 0) + nodeRect.x;\n  var y = ((handle === null || handle === void 0 ? void 0 : handle.y) || 0) + nodeRect.y;\n  var width = (handle === null || handle === void 0 ? void 0 : handle.width) || nodeRect.width;\n  var height = (handle === null || handle === void 0 ? void 0 : handle.height) || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y: y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x: x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  if (handleId) {\n    return bounds.find(function (d) {\n      return d.id === handleId;\n    });\n  } else if (bounds.length === 1) {\n    return bounds[0];\n  }\n  return null;\n}\nvar getEdgePositions = function getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) {\n  var sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  var targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref45) {\n  var sourcePos = _ref45.sourcePos,\n    targetPos = _ref45.targetPos,\n    sourceWidth = _ref45.sourceWidth,\n    sourceHeight = _ref45.sourceHeight,\n    targetWidth = _ref45.targetWidth,\n    targetHeight = _ref45.targetHeight,\n    width = _ref45.width,\n    height = _ref45.height,\n    transform = _ref45.transform;\n  var edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  var viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  var xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  var yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  var overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  var _node$internalsSymbol, _node$positionAbsolut5, _node$positionAbsolut6, _node$positionAbsolut7, _node$positionAbsolut8;\n  var handleBounds = (node === null || node === void 0 ? void 0 : (_node$internalsSymbol = node[internalsSymbol]) === null || _node$internalsSymbol === void 0 ? void 0 : _node$internalsSymbol.handleBounds) || null;\n  var isValid = handleBounds && (node === null || node === void 0 ? void 0 : node.width) && (node === null || node === void 0 ? void 0 : node.height) && typeof (node === null || node === void 0 ? void 0 : (_node$positionAbsolut5 = node.positionAbsolute) === null || _node$positionAbsolut5 === void 0 ? void 0 : _node$positionAbsolut5.x) !== 'undefined' && typeof (node === null || node === void 0 ? void 0 : (_node$positionAbsolut6 = node.positionAbsolute) === null || _node$positionAbsolut6 === void 0 ? void 0 : _node$positionAbsolut6.y) !== 'undefined';\n  return [{\n    x: (node === null || node === void 0 ? void 0 : (_node$positionAbsolut7 = node.positionAbsolute) === null || _node$positionAbsolut7 === void 0 ? void 0 : _node$positionAbsolut7.x) || 0,\n    y: (node === null || node === void 0 ? void 0 : (_node$positionAbsolut8 = node.positionAbsolute) === null || _node$positionAbsolut8 === void 0 ? void 0 : _node$positionAbsolut8.y) || 0,\n    width: (node === null || node === void 0 ? void 0 : node.width) || 0,\n    height: (node === null || node === void 0 ? void 0 : node.height) || 0\n  }, handleBounds, !!isValid];\n}\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  var parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  var current = target;\n  do {\n    var _current;\n    if ((_current = current) !== null && _current !== void 0 && _current.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(function (n) {\n    return (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)) && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined');\n  }).map(function (n) {\n    var _n$positionAbsolute$x, _n$positionAbsolute, _n$positionAbsolute$y, _n$positionAbsolute2;\n    return {\n      id: n.id,\n      position: n.position || {\n        x: 0,\n        y: 0\n      },\n      positionAbsolute: n.positionAbsolute || {\n        x: 0,\n        y: 0\n      },\n      distance: {\n        x: mousePos.x - ((_n$positionAbsolute$x = (_n$positionAbsolute = n.positionAbsolute) === null || _n$positionAbsolute === void 0 ? void 0 : _n$positionAbsolute.x) !== null && _n$positionAbsolute$x !== void 0 ? _n$positionAbsolute$x : 0),\n        y: mousePos.y - ((_n$positionAbsolute$y = (_n$positionAbsolute2 = n.positionAbsolute) === null || _n$positionAbsolute2 === void 0 ? void 0 : _n$positionAbsolute2.y) !== null && _n$positionAbsolute$y !== void 0 ? _n$positionAbsolute$y : 0)\n      },\n      delta: {\n        x: 0,\n        y: 0\n      },\n      extent: n.extent,\n      parentNode: n.parentNode,\n      width: n.width,\n      height: n.height\n    };\n  });\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  var nodeOrigin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0, 0];\n  var onError = arguments.length > 5 ? arguments[5] : undefined;\n  var currentExtent = node.extent || nodeExtent;\n  if (node.extent === 'parent') {\n    if (node.parentNode && node.width && node.height) {\n      var parent = nodeInternals.get(node.parentNode);\n      var _getNodePositionWithO3 = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute,\n        parentX = _getNodePositionWithO3.x,\n        parentY = _getNodePositionWithO3.y;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      onError === null || onError === void 0 ? void 0 : onError('005', errorMessages['005']());\n      currentExtent = nodeExtent;\n    }\n  } else if (node.extent && node.parentNode) {\n    var _parent = nodeInternals.get(node.parentNode);\n    var _getNodePositionWithO4 = getNodePositionWithOrigin(_parent, nodeOrigin).positionAbsolute,\n      _parentX = _getNodePositionWithO4.x,\n      _parentY = _getNodePositionWithO4.y;\n    currentExtent = [[node.extent[0][0] + _parentX, node.extent[0][1] + _parentY], [node.extent[1][0] + _parentX, node.extent[1][1] + _parentY]];\n  }\n  var parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    var parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  var positionAbsolute = currentExtent ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute: positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref46) {\n  var nodeId = _ref46.nodeId,\n    dragItems = _ref46.dragItems,\n    nodeInternals = _ref46.nodeInternals;\n  var extentedDragItems = dragItems.map(function (n) {\n    var node = nodeInternals.get(n.id);\n    return _objectSpread(_objectSpread({}, node), {}, {\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    });\n  });\n  return [nodeId ? extentedDragItems.find(function (n) {\n    return n.id === nodeId;\n  }) : extentedDragItems[0], extentedDragItems];\n}\nvar getHandleBounds = function getHandleBounds(selector, nodeElement, zoom, nodeOrigin) {\n  var handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  var handlesArray = Array.from(handles);\n  var nodeBounds = nodeElement.getBoundingClientRect();\n  var nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(function (handle) {\n    var handleBounds = handle.getBoundingClientRect();\n    return _objectSpread({\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom\n    }, getDimensions(handle));\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : function (event) {\n    var node = getState().nodeInternals.get(id);\n    handler(event, _objectSpread({}, node));\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref47) {\n  var id = _ref47.id,\n    store = _ref47.store,\n    _ref47$unselect = _ref47.unselect,\n    unselect = _ref47$unselect === void 0 ? false : _ref47$unselect;\n  var _store$getState8 = store.getState(),\n    addSelectedNodes = _store$getState8.addSelectedNodes,\n    unselectNodesAndEdges = _store$getState8.unselectNodesAndEdges,\n    multiSelectionActive = _store$getState8.multiSelectionActive,\n    nodeInternals = _store$getState8.nodeInternals;\n  var node = nodeInternals.get(id);\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node]\n    });\n  }\n}\nfunction useGetPointerPosition() {\n  var store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  var getPointerPosition = useCallback(function (_ref48) {\n    var sourceEvent = _ref48.sourceEvent;\n    var _store$getState9 = store.getState(),\n      transform = _store$getState9.transform,\n      snapGrid = _store$getState9.snapGrid,\n      snapToGrid = _store$getState9.snapToGrid;\n    var x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    var y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    var pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return _objectSpread({\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y\n    }, pointerPos);\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return function (event, _, nodes) {\n    return selectionFunc === null || selectionFunc === void 0 ? void 0 : selectionFunc(event, nodes);\n  };\n}\nfunction useDrag(_ref49) {\n  var nodeRef = _ref49.nodeRef,\n    _ref49$disabled = _ref49.disabled,\n    disabled = _ref49$disabled === void 0 ? false : _ref49$disabled,\n    noDragClassName = _ref49.noDragClassName,\n    handleSelector = _ref49.handleSelector,\n    nodeId = _ref49.nodeId,\n    isSelectable = _ref49.isSelectable,\n    selectNodesOnDrag = _ref49.selectNodesOnDrag;\n  var store = useStoreApi();\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dragging = _useState8[0],\n    setDragging = _useState8[1];\n  var dragItems = useRef([]);\n  var lastPos = useRef({\n    x: null,\n    y: null\n  });\n  var autoPanId = useRef(0);\n  var containerBounds = useRef(null);\n  var mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  var dragEvent = useRef(null);\n  var autoPanStarted = useRef(false);\n  var getPointerPosition = useGetPointerPosition();\n  useEffect(function () {\n    if (nodeRef !== null && nodeRef !== void 0 && nodeRef.current) {\n      var selection = select(nodeRef.current);\n      var updateNodes = function updateNodes(_ref50) {\n        var x = _ref50.x,\n          y = _ref50.y;\n        var _store$getState10 = store.getState(),\n          nodeInternals = _store$getState10.nodeInternals,\n          onNodeDrag = _store$getState10.onNodeDrag,\n          onSelectionDrag = _store$getState10.onSelectionDrag,\n          updateNodePositions = _store$getState10.updateNodePositions,\n          nodeExtent = _store$getState10.nodeExtent,\n          snapGrid = _store$getState10.snapGrid,\n          snapToGrid = _store$getState10.snapToGrid,\n          nodeOrigin = _store$getState10.nodeOrigin,\n          onError = _store$getState10.onError;\n        lastPos.current = {\n          x: x,\n          y: y\n        };\n        var hasChange = false;\n        dragItems.current = dragItems.current.map(function (n) {\n          var nextPosition = {\n            x: x - n.distance.x,\n            y: y - n.distance.y\n          };\n          if (snapToGrid) {\n            nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n            nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n          }\n          var updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n          // we want to make sure that we only fire a change event when there is a changes\n          hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n          n.position = updatedPos.position;\n          n.positionAbsolute = updatedPos.positionAbsolute;\n          return n;\n        });\n        if (!hasChange) {\n          return;\n        }\n        updateNodePositions(dragItems.current, true, true);\n        setDragging(true);\n        var onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n        if (onDrag && dragEvent.current) {\n          var _getEventHandlerParam = getEventHandlerParams({\n              nodeId: nodeId,\n              dragItems: dragItems.current,\n              nodeInternals: nodeInternals\n            }),\n            _getEventHandlerParam2 = _slicedToArray(_getEventHandlerParam, 2),\n            currentNode = _getEventHandlerParam2[0],\n            nodes = _getEventHandlerParam2[1];\n          onDrag(dragEvent.current, currentNode, nodes);\n        }\n      };\n      var autoPan = function autoPan() {\n        if (!containerBounds.current) {\n          return;\n        }\n        var _calcAutoPan3 = calcAutoPan(mousePosition.current, containerBounds.current),\n          _calcAutoPan4 = _slicedToArray(_calcAutoPan3, 2),\n          xMovement = _calcAutoPan4[0],\n          yMovement = _calcAutoPan4[1];\n        if (xMovement !== 0 || yMovement !== 0) {\n          var _lastPos$current$x, _lastPos$current$y;\n          var _store$getState11 = store.getState(),\n            transform = _store$getState11.transform,\n            panBy = _store$getState11.panBy;\n          lastPos.current.x = ((_lastPos$current$x = lastPos.current.x) !== null && _lastPos$current$x !== void 0 ? _lastPos$current$x : 0) - xMovement / transform[2];\n          lastPos.current.y = ((_lastPos$current$y = lastPos.current.y) !== null && _lastPos$current$y !== void 0 ? _lastPos$current$y : 0) - yMovement / transform[2];\n          updateNodes(lastPos.current);\n          panBy({\n            x: xMovement,\n            y: yMovement\n          });\n        }\n        autoPanId.current = requestAnimationFrame(autoPan);\n      };\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        var dragHandler = drag().on('start', function (event) {\n          var _store$getState12 = store.getState(),\n            nodeInternals = _store$getState12.nodeInternals,\n            multiSelectionActive = _store$getState12.multiSelectionActive,\n            domNode = _store$getState12.domNode,\n            nodesDraggable = _store$getState12.nodesDraggable,\n            unselectNodesAndEdges = _store$getState12.unselectNodesAndEdges,\n            onNodeDragStart = _store$getState12.onNodeDragStart,\n            onSelectionDragStart = _store$getState12.onSelectionDragStart;\n          var onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n          if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n            var _nodeInternals$get;\n            if (!((_nodeInternals$get = nodeInternals.get(nodeId)) !== null && _nodeInternals$get !== void 0 && _nodeInternals$get.selected)) {\n              // we need to reset selected nodes when selectNodesOnDrag=false\n              unselectNodesAndEdges();\n            }\n          }\n          if (nodeId && isSelectable && selectNodesOnDrag) {\n            handleNodeClick({\n              id: nodeId,\n              store: store\n            });\n          }\n          var pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n          if (onStart && dragItems.current) {\n            var _getEventHandlerParam3 = getEventHandlerParams({\n                nodeId: nodeId,\n                dragItems: dragItems.current,\n                nodeInternals: nodeInternals\n              }),\n              _getEventHandlerParam4 = _slicedToArray(_getEventHandlerParam3, 2),\n              currentNode = _getEventHandlerParam4[0],\n              nodes = _getEventHandlerParam4[1];\n            onStart(event.sourceEvent, currentNode, nodes);\n          }\n          containerBounds.current = (domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect()) || null;\n          mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n        }).on('drag', function (event) {\n          var pointerPos = getPointerPosition(event);\n          var _store$getState13 = store.getState(),\n            autoPanOnNodeDrag = _store$getState13.autoPanOnNodeDrag;\n          if (!autoPanStarted.current && autoPanOnNodeDrag) {\n            autoPanStarted.current = true;\n            autoPan();\n          }\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current) {\n            dragEvent.current = event.sourceEvent;\n            mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n            updateNodes(pointerPos);\n          }\n        }).on('end', function (event) {\n          setDragging(false);\n          autoPanStarted.current = false;\n          cancelAnimationFrame(autoPanId.current);\n          if (dragItems.current) {\n            var _store$getState14 = store.getState(),\n              updateNodePositions = _store$getState14.updateNodePositions,\n              nodeInternals = _store$getState14.nodeInternals,\n              onNodeDragStop = _store$getState14.onNodeDragStop,\n              onSelectionDragStop = _store$getState14.onSelectionDragStop;\n            var onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              var _getEventHandlerParam5 = getEventHandlerParams({\n                  nodeId: nodeId,\n                  dragItems: dragItems.current,\n                  nodeInternals: nodeInternals\n                }),\n                _getEventHandlerParam6 = _slicedToArray(_getEventHandlerParam5, 2),\n                currentNode = _getEventHandlerParam6[0],\n                nodes = _getEventHandlerParam6[1];\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(function (event) {\n          var target = event.target;\n          var isDraggable = !event.button && (!noDragClassName || !hasSelector(target, \".\".concat(noDragClassName), nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return function () {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  var store = useStoreApi();\n  var updatePositions = useCallback(function (params) {\n    var _store$getState15 = store.getState(),\n      nodeInternals = _store$getState15.nodeInternals,\n      nodeExtent = _store$getState15.nodeExtent,\n      updateNodePositions = _store$getState15.updateNodePositions,\n      getNodes = _store$getState15.getNodes,\n      snapToGrid = _store$getState15.snapToGrid,\n      snapGrid = _store$getState15.snapGrid,\n      onError = _store$getState15.onError,\n      nodesDraggable = _store$getState15.nodesDraggable;\n    var selectedNodes = getNodes().filter(function (n) {\n      return n.selected && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined');\n    });\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    var xVelo = snapToGrid ? snapGrid[0] : 5;\n    var yVelo = snapToGrid ? snapGrid[1] : 5;\n    var factor = params.isShiftPressed ? 4 : 1;\n    var positionDiffX = params.x * xVelo * factor;\n    var positionDiffY = params.y * yVelo * factor;\n    var nodeUpdates = selectedNodes.map(function (n) {\n      if (n.positionAbsolute) {\n        var nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        var _calcNextPosition = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError),\n          positionAbsolute = _calcNextPosition.positionAbsolute,\n          position = _calcNextPosition.position;\n        n.position = position;\n        n.positionAbsolute = positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nvar arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = function wrapNode(NodeComponent) {\n  var NodeWrapper = function NodeWrapper(_ref51) {\n    var id = _ref51.id,\n      type = _ref51.type,\n      data = _ref51.data,\n      xPos = _ref51.xPos,\n      yPos = _ref51.yPos,\n      xPosOrigin = _ref51.xPosOrigin,\n      yPosOrigin = _ref51.yPosOrigin,\n      selected = _ref51.selected,\n      onClick = _ref51.onClick,\n      onMouseEnter = _ref51.onMouseEnter,\n      onMouseMove = _ref51.onMouseMove,\n      onMouseLeave = _ref51.onMouseLeave,\n      onContextMenu = _ref51.onContextMenu,\n      onDoubleClick = _ref51.onDoubleClick,\n      style = _ref51.style,\n      className = _ref51.className,\n      isDraggable = _ref51.isDraggable,\n      isSelectable = _ref51.isSelectable,\n      isConnectable = _ref51.isConnectable,\n      isFocusable = _ref51.isFocusable,\n      selectNodesOnDrag = _ref51.selectNodesOnDrag,\n      sourcePosition = _ref51.sourcePosition,\n      targetPosition = _ref51.targetPosition,\n      hidden = _ref51.hidden,\n      resizeObserver = _ref51.resizeObserver,\n      dragHandle = _ref51.dragHandle,\n      zIndex = _ref51.zIndex,\n      isParent = _ref51.isParent,\n      noDragClassName = _ref51.noDragClassName,\n      noPanClassName = _ref51.noPanClassName,\n      initialized = _ref51.initialized,\n      disableKeyboardA11y = _ref51.disableKeyboardA11y,\n      ariaLabel = _ref51.ariaLabel,\n      rfId = _ref51.rfId;\n    var store = useStoreApi();\n    var nodeRef = useRef(null);\n    var prevSourcePosition = useRef(sourcePosition);\n    var prevTargetPosition = useRef(targetPosition);\n    var prevType = useRef(type);\n    var hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    var updatePositions = useUpdateNodePositions();\n    var onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    var onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    var onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    var onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    var onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    var onSelectNodeHandler = function onSelectNodeHandler(event) {\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id: id,\n          store: store\n        });\n      }\n      if (onClick) {\n        var node = store.getState().nodeInternals.get(id);\n        onClick(event, _objectSpread({}, node));\n      }\n    };\n    var onKeyDown = function onKeyDown(event) {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        var unselect = event.key === 'Escape';\n        if (unselect) {\n          var _nodeRef$current;\n          (_nodeRef$current = nodeRef.current) === null || _nodeRef$current === void 0 ? void 0 : _nodeRef$current.blur();\n        }\n        handleNodeClick({\n          id: id,\n          store: store,\n          unselect: unselect\n        });\n      } else if (!disableKeyboardA11y && isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: \"Moved selected node \".concat(event.key.replace('Arrow', '').toLowerCase(), \". New position, x: \").concat(~~xPos, \", y: \").concat(~~yPos)\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(function () {\n      if (nodeRef.current && !hidden) {\n        var currNode = nodeRef.current;\n        resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.observe(currNode);\n        return function () {\n          return resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.unobserve(currNode);\n        };\n      }\n    }, [hidden]);\n    useEffect(function () {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      var typeChanged = prevType.current !== type;\n      var sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      var targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id: id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    var dragging = useDrag({\n      nodeRef: nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName: noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable: isSelectable,\n      selectNodesOnDrag: selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return jsx(\"div\", {\n      className: cc(['react-flow__node', \"react-flow__node-\".concat(type), _defineProperty({}, noPanClassName, isDraggable), className, {\n        selected: selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging: dragging\n      }]),\n      ref: nodeRef,\n      style: _objectSpread({\n        zIndex: zIndex,\n        transform: \"translate(\".concat(xPosOrigin, \"px,\").concat(yPosOrigin, \"px)\"),\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden'\n      }, style),\n      \"data-id\": id,\n      \"data-testid\": \"rf__node-\".concat(id),\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      \"aria-label\": ariaLabel,\n      children: jsx(Provider, {\n        value: id,\n        children: jsx(NodeComponent, {\n          id: id,\n          data: data,\n          type: type,\n          xPos: xPos,\n          yPos: yPos,\n          selected: selected,\n          isConnectable: isConnectable,\n          sourcePosition: sourcePosition,\n          targetPosition: targetPosition,\n          dragging: dragging,\n          dragHandle: dragHandle,\n          zIndex: zIndex\n        })\n      })\n    });\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\nfunction createNodeTypes(nodeTypes) {\n  var standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  var wrappedTypes = {};\n  var specialTypes = Object.keys(nodeTypes).filter(function (k) {\n    return !['input', 'default', 'output', 'group'].includes(k);\n  }).reduce(function (res, key) {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nvar getPositionWithOrigin = function getPositionWithOrigin(_ref53) {\n  var x = _ref53.x,\n    y = _ref53.y,\n    width = _ref53.width,\n    height = _ref53.height,\n    origin = _ref53.origin;\n  if (!width || !height) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nvar doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function useKeyPress() {\n  var keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    target: doc\n  };\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    keyPressed = _useState10[0],\n    setKeyPressed = _useState10[1];\n  // we need to remember the pressed keys in order to support combinations\n  var pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  var _useMemo = useMemo(function () {\n      if (keyCode !== null) {\n        var keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n        var keys = keyCodeArr.filter(function (kc) {\n          return typeof kc === 'string';\n        }).map(function (kc) {\n          return kc.split('+');\n        });\n        var keysFlat = keys.reduce(function (res, item) {\n          return res.concat.apply(res, _toConsumableArray(item));\n        }, []);\n        return [keys, keysFlat];\n      }\n      return [[], []];\n    }, [keyCode]),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    keyCodes = _useMemo2[0],\n    keysToWatch = _useMemo2[1];\n  useEffect(function () {\n    if (keyCode !== null) {\n      var _options$target, _options$target2;\n      var downHandler = function downHandler(event) {\n        if (isInputDOMNode(event)) {\n          return false;\n        }\n        var keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      var upHandler = function upHandler(event) {\n        if (isInputDOMNode(event)) {\n          return false;\n        }\n        var keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n      };\n      var resetHandler = function resetHandler() {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      options === null || options === void 0 ? void 0 : (_options$target = options.target) === null || _options$target === void 0 ? void 0 : _options$target.addEventListener('keydown', downHandler);\n      options === null || options === void 0 ? void 0 : (_options$target2 = options.target) === null || _options$target2 === void 0 ? void 0 : _options$target2.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return function () {\n        var _options$target3, _options$target4;\n        options === null || options === void 0 ? void 0 : (_options$target3 = options.target) === null || _options$target3 === void 0 ? void 0 : _options$target3.removeEventListener('keydown', downHandler);\n        options === null || options === void 0 ? void 0 : (_options$target4 = options.target) === null || _options$target4 === void 0 ? void 0 : _options$target4.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(function (keys) {\n    return isUp || keys.length === pressedKeys.size;\n  })\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(function (keys) {\n    return keys.every(function (k) {\n      return pressedKeys.has(k);\n    });\n  });\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n  var _result$x, _result$y, _parentNode$internals, _parentNode$internals2, _result$z, _parentNode$internals3, _parentNode$internals4, _result$z2;\n  if (!node.parentNode) {\n    return result;\n  }\n  var parentNode = nodeInternals.get(node.parentNode);\n  var parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, {\n    x: ((_result$x = result.x) !== null && _result$x !== void 0 ? _result$x : 0) + parentNodePosition.x,\n    y: ((_result$y = result.y) !== null && _result$y !== void 0 ? _result$y : 0) + parentNodePosition.y,\n    z: ((_parentNode$internals = (_parentNode$internals2 = parentNode[internalsSymbol]) === null || _parentNode$internals2 === void 0 ? void 0 : _parentNode$internals2.z) !== null && _parentNode$internals !== void 0 ? _parentNode$internals : 0) > ((_result$z = result.z) !== null && _result$z !== void 0 ? _result$z : 0) ? (_parentNode$internals3 = (_parentNode$internals4 = parentNode[internalsSymbol]) === null || _parentNode$internals4 === void 0 ? void 0 : _parentNode$internals4.z) !== null && _parentNode$internals3 !== void 0 ? _parentNode$internals3 : 0 : (_result$z2 = result.z) !== null && _result$z2 !== void 0 ? _result$z2 : 0\n  }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n  nodeInternals.forEach(function (node) {\n    if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n      throw new Error(\"Parent node \".concat(node.parentNode, \" not found\"));\n    }\n    if (node.parentNode || parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n      var _node$internalsSymbol2, _node$internalsSymbol3;\n      var _calculateXYZPosition = calculateXYZPosition(node, nodeInternals, _objectSpread(_objectSpread({}, node.position), {}, {\n          z: (_node$internalsSymbol2 = (_node$internalsSymbol3 = node[internalsSymbol]) === null || _node$internalsSymbol3 === void 0 ? void 0 : _node$internalsSymbol3.z) !== null && _node$internalsSymbol2 !== void 0 ? _node$internalsSymbol2 : 0\n        }), nodeOrigin),\n        x = _calculateXYZPosition.x,\n        y = _calculateXYZPosition.y,\n        z = _calculateXYZPosition.z;\n      node.positionAbsolute = {\n        x: x,\n        y: y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  var nextNodeInternals = new Map();\n  var parentNodes = {};\n  var selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(function (node) {\n    var _currInternals$intern;\n    var z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    var currInternals = nodeInternals.get(node.id);\n    var internals = _objectSpread(_objectSpread({\n      width: currInternals === null || currInternals === void 0 ? void 0 : currInternals.width,\n      height: currInternals === null || currInternals === void 0 ? void 0 : currInternals.height\n    }, node), {}, {\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    });\n    if (node.parentNode) {\n      internals.parentNode = node.parentNode;\n      parentNodes[node.parentNode] = true;\n    }\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: currInternals === null || currInternals === void 0 ? void 0 : (_currInternals$intern = currInternals[internalsSymbol]) === null || _currInternals$intern === void 0 ? void 0 : _currInternals$intern.handleBounds,\n        z: z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n  return nextNodeInternals;\n}\nfunction _fitView(get) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _get = get(),\n    getNodes = _get.getNodes,\n    width = _get.width,\n    height = _get.height,\n    minZoom = _get.minZoom,\n    maxZoom = _get.maxZoom,\n    d3Zoom = _get.d3Zoom,\n    d3Selection = _get.d3Selection,\n    fitViewOnInitDone = _get.fitViewOnInitDone,\n    fitViewOnInit = _get.fitViewOnInit,\n    nodeOrigin = _get.nodeOrigin;\n  var isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n  var d3initialized = d3Zoom && d3Selection;\n  if (d3initialized && (isInitialFitView || !options.initial)) {\n    var nodes = getNodes().filter(function (n) {\n      var _options$nodes;\n      var isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n      if ((_options$nodes = options.nodes) !== null && _options$nodes !== void 0 && _options$nodes.length) {\n        return isVisible && options.nodes.some(function (optionNode) {\n          return optionNode.id === n.id;\n        });\n      }\n      return isVisible;\n    });\n    var nodesInitialized = nodes.every(function (n) {\n      return n.width && n.height;\n    });\n    if (nodes.length > 0 && nodesInitialized) {\n      var _options$minZoom, _options$maxZoom, _options$padding;\n      var bounds = getRectOfNodes(nodes, nodeOrigin);\n      var _getTransformForBound = getTransformForBounds(bounds, width, height, (_options$minZoom = options.minZoom) !== null && _options$minZoom !== void 0 ? _options$minZoom : minZoom, (_options$maxZoom = options.maxZoom) !== null && _options$maxZoom !== void 0 ? _options$maxZoom : maxZoom, (_options$padding = options.padding) !== null && _options$padding !== void 0 ? _options$padding : 0.1),\n        _getTransformForBound2 = _slicedToArray(_getTransformForBound, 3),\n        x = _getTransformForBound2[0],\n        y = _getTransformForBound2[1],\n        _zoom = _getTransformForBound2[2];\n      var nextTransform = zoomIdentity.translate(x, y).scale(_zoom);\n      if (typeof options.duration === 'number' && options.duration > 0) {\n        d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n      } else {\n        d3Zoom.transform(d3Selection, nextTransform);\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(function (change) {\n    var node = nodeInternals.get(change.id);\n    if (node) {\n      var _objectSpread2;\n      nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, internalsSymbol, node[internalsSymbol]), _defineProperty(_objectSpread2, \"selected\", change.selected), _objectSpread2)));\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(function (e) {\n    var change = edgeChanges.find(function (change) {\n      return change.id === e.id;\n    });\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref54) {\n  var changedNodes = _ref54.changedNodes,\n    changedEdges = _ref54.changedEdges,\n    get = _ref54.get,\n    set = _ref54.set;\n  var _get2 = get(),\n    nodeInternals = _get2.nodeInternals,\n    edges = _get2.edges,\n    onNodesChange = _get2.onNodesChange,\n    onEdgesChange = _get2.onEdgesChange,\n    hasDefaultNodes = _get2.hasDefaultNodes,\n    hasDefaultEdges = _get2.hasDefaultEdges;\n  if (changedNodes !== null && changedNodes !== void 0 && changedNodes.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changedNodes);\n  }\n  if (changedEdges !== null && changedEdges !== void 0 && changedEdges.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange === null || onEdgesChange === void 0 ? void 0 : onEdgesChange(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nvar noop = function noop() {};\nvar initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: function getZoom() {\n    return 1;\n  },\n  setViewport: noop,\n  getViewport: function getViewport() {\n    return {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  },\n  fitView: function fitView() {\n    return false;\n  },\n  setCenter: noop,\n  fitBounds: noop,\n  project: function project(position) {\n    return position;\n  },\n  viewportInitialized: false\n};\nvar selector$b = function selector$b(s) {\n  return {\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection\n  };\n};\nvar useViewportHelper = function useViewportHelper() {\n  var store = useStoreApi();\n  var _useStore4 = useStore(selector$b, shallow),\n    d3Zoom = _useStore4.d3Zoom,\n    d3Selection = _useStore4.d3Selection;\n  var viewportHelperFunctions = useMemo(function () {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: function zoomIn(options) {\n          return d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1.2);\n        },\n        zoomOut: function zoomOut(options) {\n          return d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1 / 1.2);\n        },\n        zoomTo: function zoomTo(zoomLevel, options) {\n          return d3Zoom.scaleTo(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), zoomLevel);\n        },\n        getZoom: function getZoom() {\n          return store.getState().transform[2];\n        },\n        setViewport: function setViewport(transform, options) {\n          var _transform$x, _transform$y, _transform$zoom;\n          var _store$getState$trans = _slicedToArray(store.getState().transform, 3),\n            x = _store$getState$trans[0],\n            y = _store$getState$trans[1],\n            zoom = _store$getState$trans[2];\n          var nextTransform = zoomIdentity.translate((_transform$x = transform.x) !== null && _transform$x !== void 0 ? _transform$x : x, (_transform$y = transform.y) !== null && _transform$y !== void 0 ? _transform$y : y).scale((_transform$zoom = transform.zoom) !== null && _transform$zoom !== void 0 ? _transform$zoom : zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), nextTransform);\n        },\n        getViewport: function getViewport() {\n          var _store$getState$trans2 = _slicedToArray(store.getState().transform, 3),\n            x = _store$getState$trans2[0],\n            y = _store$getState$trans2[1],\n            zoom = _store$getState$trans2[2];\n          return {\n            x: x,\n            y: y,\n            zoom: zoom\n          };\n        },\n        fitView: function fitView(options) {\n          return _fitView(store.getState, options);\n        },\n        setCenter: function setCenter(x, y, options) {\n          var _store$getState16 = store.getState(),\n            width = _store$getState16.width,\n            height = _store$getState16.height,\n            maxZoom = _store$getState16.maxZoom;\n          var nextZoom = typeof (options === null || options === void 0 ? void 0 : options.zoom) !== 'undefined' ? options.zoom : maxZoom;\n          var centerX = width / 2 - x * nextZoom;\n          var centerY = height / 2 - y * nextZoom;\n          var transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        fitBounds: function fitBounds(bounds, options) {\n          var _options$padding2;\n          var _store$getState17 = store.getState(),\n            width = _store$getState17.width,\n            height = _store$getState17.height,\n            minZoom = _store$getState17.minZoom,\n            maxZoom = _store$getState17.maxZoom;\n          var _getTransformForBound3 = getTransformForBounds(bounds, width, height, minZoom, maxZoom, (_options$padding2 = options === null || options === void 0 ? void 0 : options.padding) !== null && _options$padding2 !== void 0 ? _options$padding2 : 0.1),\n            _getTransformForBound4 = _slicedToArray(_getTransformForBound3, 3),\n            x = _getTransformForBound4[0],\n            y = _getTransformForBound4[1],\n            zoom = _getTransformForBound4[2];\n          var transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        project: function project(position) {\n          var _store$getState18 = store.getState(),\n            transform = _store$getState18.transform,\n            snapToGrid = _store$getState18.snapToGrid,\n            snapGrid = _store$getState18.snapGrid;\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  var viewportHelper = useViewportHelper();\n  var store = useStoreApi();\n  var getNodes = useCallback(function () {\n    return store.getState().getNodes().map(function (n) {\n      return _objectSpread({}, n);\n    });\n  }, []);\n  var getNode = useCallback(function (id) {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  var getEdges = useCallback(function () {\n    var _store$getState19 = store.getState(),\n      _store$getState19$edg = _store$getState19.edges,\n      edges = _store$getState19$edg === void 0 ? [] : _store$getState19$edg;\n    return edges.map(function (e) {\n      return _objectSpread({}, e);\n    });\n  }, []);\n  var getEdge = useCallback(function (id) {\n    var _store$getState20 = store.getState(),\n      _store$getState20$edg = _store$getState20.edges,\n      edges = _store$getState20$edg === void 0 ? [] : _store$getState20$edg;\n    return edges.find(function (e) {\n      return e.id === id;\n    });\n  }, []);\n  var setNodes = useCallback(function (payload) {\n    var _store$getState21 = store.getState(),\n      getNodes = _store$getState21.getNodes,\n      setNodes = _store$getState21.setNodes,\n      hasDefaultNodes = _store$getState21.hasDefaultNodes,\n      onNodesChange = _store$getState21.onNodesChange;\n    var nodes = getNodes();\n    var nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      var changes = nextNodes.length === 0 ? nodes.map(function (node) {\n        return {\n          type: 'remove',\n          id: node.id\n        };\n      }) : nextNodes.map(function (node) {\n        return {\n          item: node,\n          type: 'reset'\n        };\n      });\n      onNodesChange(changes);\n    }\n  }, []);\n  var setEdges = useCallback(function (payload) {\n    var _store$getState22 = store.getState(),\n      _store$getState22$edg = _store$getState22.edges,\n      edges = _store$getState22$edg === void 0 ? [] : _store$getState22$edg,\n      setEdges = _store$getState22.setEdges,\n      hasDefaultEdges = _store$getState22.hasDefaultEdges,\n      onEdgesChange = _store$getState22.onEdgesChange;\n    var nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      var changes = nextEdges.length === 0 ? edges.map(function (edge) {\n        return {\n          type: 'remove',\n          id: edge.id\n        };\n      }) : nextEdges.map(function (edge) {\n        return {\n          item: edge,\n          type: 'reset'\n        };\n      });\n      onEdgesChange(changes);\n    }\n  }, []);\n  var addNodes = useCallback(function (payload) {\n    var nodes = Array.isArray(payload) ? payload : [payload];\n    var _store$getState23 = store.getState(),\n      getNodes = _store$getState23.getNodes,\n      setNodes = _store$getState23.setNodes,\n      hasDefaultNodes = _store$getState23.hasDefaultNodes,\n      onNodesChange = _store$getState23.onNodesChange;\n    if (hasDefaultNodes) {\n      var currentNodes = getNodes();\n      var nextNodes = [].concat(_toConsumableArray(currentNodes), _toConsumableArray(nodes));\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      var changes = nodes.map(function (node) {\n        return {\n          item: node,\n          type: 'add'\n        };\n      });\n      onNodesChange(changes);\n    }\n  }, []);\n  var addEdges = useCallback(function (payload) {\n    var nextEdges = Array.isArray(payload) ? payload : [payload];\n    var _store$getState24 = store.getState(),\n      _store$getState24$edg = _store$getState24.edges,\n      edges = _store$getState24$edg === void 0 ? [] : _store$getState24$edg,\n      setEdges = _store$getState24.setEdges,\n      hasDefaultEdges = _store$getState24.hasDefaultEdges,\n      onEdgesChange = _store$getState24.onEdgesChange;\n    if (hasDefaultEdges) {\n      setEdges([].concat(_toConsumableArray(edges), _toConsumableArray(nextEdges)));\n    } else if (onEdgesChange) {\n      var changes = nextEdges.map(function (edge) {\n        return {\n          item: edge,\n          type: 'add'\n        };\n      });\n      onEdgesChange(changes);\n    }\n  }, []);\n  var toObject = useCallback(function () {\n    var _store$getState25 = store.getState(),\n      getNodes = _store$getState25.getNodes,\n      _store$getState25$edg = _store$getState25.edges,\n      edges = _store$getState25$edg === void 0 ? [] : _store$getState25$edg,\n      transform = _store$getState25.transform;\n    var _transform = _slicedToArray(transform, 3),\n      x = _transform[0],\n      y = _transform[1],\n      zoom = _transform[2];\n    return {\n      nodes: getNodes().map(function (n) {\n        return _objectSpread({}, n);\n      }),\n      edges: edges.map(function (e) {\n        return _objectSpread({}, e);\n      }),\n      viewport: {\n        x: x,\n        y: y,\n        zoom: zoom\n      }\n    };\n  }, []);\n  var deleteElements = useCallback(function (_ref55) {\n    var nodesDeleted = _ref55.nodes,\n      edgesDeleted = _ref55.edges;\n    var _store$getState26 = store.getState(),\n      nodeInternals = _store$getState26.nodeInternals,\n      getNodes = _store$getState26.getNodes,\n      edges = _store$getState26.edges,\n      hasDefaultNodes = _store$getState26.hasDefaultNodes,\n      hasDefaultEdges = _store$getState26.hasDefaultEdges,\n      onNodesDelete = _store$getState26.onNodesDelete,\n      onEdgesDelete = _store$getState26.onEdgesDelete,\n      onNodesChange = _store$getState26.onNodesChange,\n      onEdgesChange = _store$getState26.onEdgesChange;\n    var nodeIds = (nodesDeleted || []).map(function (node) {\n      return node.id;\n    });\n    var edgeIds = (edgesDeleted || []).map(function (edge) {\n      return edge.id;\n    });\n    var nodesToRemove = getNodes().reduce(function (res, node) {\n      var parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find(function (n) {\n        return n.id === node.parentNode;\n      });\n      var deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    var deletableEdges = edges.filter(function (e) {\n      return typeof e.deletable === 'boolean' ? e.deletable : true;\n    });\n    var initialHitEdges = deletableEdges.filter(function (e) {\n      return edgeIds.includes(e.id);\n    });\n    if (nodesToRemove || initialHitEdges) {\n      var connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      var edgesToRemove = [].concat(_toConsumableArray(initialHitEdges), _toConsumableArray(connectedEdges));\n      var edgeIdsToRemove = edgesToRemove.reduce(function (res, edge) {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(function (e) {\n              return !edgeIdsToRemove.includes(e.id);\n            })\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(function (node) {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete === null || onEdgesDelete === void 0 ? void 0 : onEdgesDelete(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(function (id) {\n            return {\n              id: id,\n              type: 'remove'\n            };\n          }));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete === null || onNodesDelete === void 0 ? void 0 : onNodesDelete(nodesToRemove);\n        if (onNodesChange) {\n          var nodeChanges = nodesToRemove.map(function (n) {\n            return {\n              id: n.id,\n              type: 'remove'\n            };\n          });\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  var getNodeRect = useCallback(function (nodeOrRect) {\n    var isRect = isRectObject(nodeOrRect);\n    var node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    var nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  var getIntersectingNodes = useCallback(function (nodeOrRect) {\n    var partially = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var nodes = arguments.length > 2 ? arguments[2] : undefined;\n    var _getNodeRect = getNodeRect(nodeOrRect),\n      _getNodeRect2 = _slicedToArray(_getNodeRect, 3),\n      nodeRect = _getNodeRect2[0],\n      node = _getNodeRect2[1],\n      isRect = _getNodeRect2[2];\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(function (n) {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      var currNodeRect = nodeToRect(n);\n      var overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      var partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    });\n  }, []);\n  var isNodeIntersecting = useCallback(function (nodeOrRect, area) {\n    var partially = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var _getNodeRect3 = getNodeRect(nodeOrRect),\n      _getNodeRect4 = _slicedToArray(_getNodeRect3, 1),\n      nodeRect = _getNodeRect4[0];\n    if (!nodeRect) {\n      return false;\n    }\n    var overlappingArea = getOverlappingArea(nodeRect, area);\n    var partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n  }, []);\n  return useMemo(function () {\n    return _objectSpread(_objectSpread({}, viewportHelper), {}, {\n      getNodes: getNodes,\n      getNode: getNode,\n      getEdges: getEdges,\n      getEdge: getEdge,\n      setNodes: setNodes,\n      setEdges: setEdges,\n      addNodes: addNodes,\n      addEdges: addEdges,\n      toObject: toObject,\n      deleteElements: deleteElements,\n      getIntersectingNodes: getIntersectingNodes,\n      isNodeIntersecting: isNodeIntersecting\n    });\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nvar useGlobalKeyHandler = function useGlobalKeyHandler(_ref56) {\n  var deleteKeyCode = _ref56.deleteKeyCode,\n    multiSelectionKeyCode = _ref56.multiSelectionKeyCode;\n  var store = useStoreApi();\n  var _useReactFlow = useReactFlow(),\n    deleteElements = _useReactFlow.deleteElements;\n  var deleteKeyPressed = useKeyPress(deleteKeyCode);\n  var multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(function () {\n    if (deleteKeyPressed) {\n      var _store$getState27 = store.getState(),\n        edges = _store$getState27.edges,\n        getNodes = _store$getState27.getNodes;\n      var selectedNodes = getNodes().filter(function (node) {\n        return node.selected;\n      });\n      var selectedEdges = edges.filter(function (edge) {\n        return edge.selected;\n      });\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(function () {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  var store = useStoreApi();\n  useEffect(function () {\n    var resizeObserver;\n    var updateDimensions = function updateDimensions() {\n      if (!rendererNode.current) {\n        return;\n      }\n      var size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        var _store$getState$onErr2, _store$getState28;\n        (_store$getState$onErr2 = (_store$getState28 = store.getState()).onError) === null || _store$getState$onErr2 === void 0 ? void 0 : _store$getState$onErr2.call(_store$getState28, '004', errorMessages['004']());\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(function () {\n        return updateDimensions();\n      });\n      resizeObserver.observe(rendererNode.current);\n    }\n    return function () {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nvar containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\nvar viewChanged = function viewChanged(prevViewport, eventViewport) {\n  return prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\n};\nvar eventToFlowTransform = function eventToFlowTransform(eventViewport) {\n  return {\n    x: eventViewport.x,\n    y: eventViewport.y,\n    zoom: eventViewport.k\n  };\n};\nvar isWrappedWithClass = function isWrappedWithClass(event, className) {\n  return event.target.closest(\".\".concat(className));\n};\nvar isRightClickPan = function isRightClickPan(panOnDrag, usedButton) {\n  return usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\n};\nvar selector$a = function selector$a(s) {\n  return {\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive\n  };\n};\nvar ZoomPane = function ZoomPane(_ref57) {\n  var onMove = _ref57.onMove,\n    onMoveStart = _ref57.onMoveStart,\n    onMoveEnd = _ref57.onMoveEnd,\n    onPaneContextMenu = _ref57.onPaneContextMenu,\n    _ref57$zoomOnScroll = _ref57.zoomOnScroll,\n    zoomOnScroll = _ref57$zoomOnScroll === void 0 ? true : _ref57$zoomOnScroll,\n    _ref57$zoomOnPinch = _ref57.zoomOnPinch,\n    zoomOnPinch = _ref57$zoomOnPinch === void 0 ? true : _ref57$zoomOnPinch,\n    _ref57$panOnScroll = _ref57.panOnScroll,\n    panOnScroll = _ref57$panOnScroll === void 0 ? false : _ref57$panOnScroll,\n    _ref57$panOnScrollSpe = _ref57.panOnScrollSpeed,\n    panOnScrollSpeed = _ref57$panOnScrollSpe === void 0 ? 0.5 : _ref57$panOnScrollSpe,\n    _ref57$panOnScrollMod = _ref57.panOnScrollMode,\n    panOnScrollMode = _ref57$panOnScrollMod === void 0 ? PanOnScrollMode.Free : _ref57$panOnScrollMod,\n    _ref57$zoomOnDoubleCl = _ref57.zoomOnDoubleClick,\n    zoomOnDoubleClick = _ref57$zoomOnDoubleCl === void 0 ? true : _ref57$zoomOnDoubleCl,\n    elementsSelectable = _ref57.elementsSelectable,\n    _ref57$panOnDrag = _ref57.panOnDrag,\n    panOnDrag = _ref57$panOnDrag === void 0 ? true : _ref57$panOnDrag,\n    defaultViewport = _ref57.defaultViewport,\n    translateExtent = _ref57.translateExtent,\n    minZoom = _ref57.minZoom,\n    maxZoom = _ref57.maxZoom,\n    zoomActivationKeyCode = _ref57.zoomActivationKeyCode,\n    _ref57$preventScrolli = _ref57.preventScrolling,\n    preventScrolling = _ref57$preventScrolli === void 0 ? true : _ref57$preventScrolli,\n    children = _ref57.children,\n    noWheelClassName = _ref57.noWheelClassName,\n    noPanClassName = _ref57.noPanClassName;\n  var timerId = useRef();\n  var store = useStoreApi();\n  var isZoomingOrPanning = useRef(false);\n  var zoomedWithRightMouseButton = useRef(false);\n  var zoomPane = useRef(null);\n  var prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  var _useStore5 = useStore(selector$a, shallow),\n    d3Zoom = _useStore5.d3Zoom,\n    d3Selection = _useStore5.d3Selection,\n    d3ZoomHandler = _useStore5.d3ZoomHandler,\n    userSelectionActive = _useStore5.userSelectionActive;\n  var zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  var mouseButton = useRef(0);\n  useResizeHandler(zoomPane);\n  useEffect(function () {\n    if (zoomPane.current) {\n      var bbox = zoomPane.current.getBoundingClientRect();\n      var d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      var selection = select(zoomPane.current).call(d3ZoomInstance);\n      var updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      var extent = [[0, 0], [bbox.width, bbox.height]];\n      var constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(function () {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', function (event) {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          var currentZoom = d3Selection.property('__zoom').k || 1;\n          if (event.ctrlKey && zoomOnPinch) {\n            var point = pointer(event);\n            // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n            var pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n            var _zoom2 = currentZoom * Math.pow(2, pinchDelta);\n            d3Zoom.scaleTo(d3Selection, _zoom2, point);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          var deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          var deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          var deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.on('start', function (event) {\n        var _event$sourceEvent;\n        if (!event.sourceEvent) {\n          return null;\n        }\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        mouseButton.current = event.sourceEvent.button;\n        var _store$getState29 = store.getState(),\n          onViewportChangeStart = _store$getState29.onViewportChangeStart;\n        isZoomingOrPanning.current = true;\n        if (((_event$sourceEvent = event.sourceEvent) === null || _event$sourceEvent === void 0 ? void 0 : _event$sourceEvent.type) === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        if (onMoveStart || onViewportChangeStart) {\n          var flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          onViewportChangeStart === null || onViewportChangeStart === void 0 ? void 0 : onViewportChangeStart(flowTransform);\n          onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart(event.sourceEvent, flowTransform);\n        }\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(function () {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', function (event) {\n          var _mouseButton$current;\n          var _store$getState30 = store.getState(),\n            onViewportChange = _store$getState30.onViewportChange;\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current = mouseButton.current) !== null && _mouseButton$current !== void 0 ? _mouseButton$current : 0));\n          if (onMove || onViewportChange) {\n            var flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange === null || onViewportChange === void 0 ? void 0 : onViewportChange(flowTransform);\n            onMove === null || onMove === void 0 ? void 0 : onMove(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.on('end', function (event) {\n        var _mouseButton$current2;\n        if (!event.sourceEvent) {\n          return null;\n        }\n        var _store$getState31 = store.getState(),\n          onViewportChangeEnd = _store$getState31.onViewportChangeEnd;\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current2 = mouseButton.current) !== null && _mouseButton$current2 !== void 0 ? _mouseButton$current2 : 0) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          var flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(function () {\n            onViewportChangeEnd === null || onViewportChangeEnd === void 0 ? void 0 : onViewportChangeEnd(flowTransform);\n            onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.filter(function (event) {\n        var zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        var pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        var buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return jsx(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle,\n    children: children\n  });\n};\nvar selector$9 = function selector$9(s) {\n  return {\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect\n  };\n};\nfunction UserSelection() {\n  var _useStore6 = useStore(selector$9, shallow),\n    userSelectionActive = _useStore6.userSelectionActive,\n    userSelectionRect = _useStore6.userSelectionRect;\n  var isActive = userSelectionActive && userSelectionRect;\n  if (!isActive) {\n    return null;\n  }\n  return jsx(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: \"translate(\".concat(userSelectionRect.x, \"px, \").concat(userSelectionRect.y, \"px)\")\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  var parent = res.find(function (e) {\n    return e.id === updateItem.parentNode;\n  });\n  if (parent) {\n    var extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    var extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      var _parent$style$width, _parent$style$height;\n      parent.style = _objectSpread({}, parent.style) || {};\n      parent.style.width = (_parent$style$width = parent.style.width) !== null && _parent$style$width !== void 0 ? _parent$style$width : parent.width;\n      parent.style.height = (_parent$style$height = parent.style.height) !== null && _parent$style$height !== void 0 ? _parent$style$height : parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        var xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        var yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(function (c) {\n    return c.type === 'reset';\n  })) {\n    return changes.filter(function (c) {\n      return c.type === 'reset';\n    }).map(function (c) {\n      return c.item;\n    });\n  }\n  var initElements = changes.filter(function (c) {\n    return c.type === 'add';\n  }).map(function (c) {\n    return c.item;\n  });\n  return elements.reduce(function (res, item) {\n    var currentChanges = changes.filter(function (c) {\n      return c.id === item.id;\n    });\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    var updateItem = _objectSpread({}, item);\n    var _iterator = _createForOfIteratorHelper(currentChanges),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var currentChange = _step.value;\n        if (currentChange) {\n          switch (currentChange.type) {\n            case 'select':\n              {\n                updateItem.selected = currentChange.selected;\n                break;\n              }\n            case 'position':\n              {\n                if (typeof currentChange.position !== 'undefined') {\n                  updateItem.position = currentChange.position;\n                }\n                if (typeof currentChange.positionAbsolute !== 'undefined') {\n                  updateItem.positionAbsolute = currentChange.positionAbsolute;\n                }\n                if (typeof currentChange.dragging !== 'undefined') {\n                  updateItem.dragging = currentChange.dragging;\n                }\n                if (updateItem.expandParent) {\n                  handleParentExpand(res, updateItem);\n                }\n                break;\n              }\n            case 'dimensions':\n              {\n                if (typeof currentChange.dimensions !== 'undefined') {\n                  updateItem.width = currentChange.dimensions.width;\n                  updateItem.height = currentChange.dimensions.height;\n                }\n                if (typeof currentChange.updateStyle !== 'undefined') {\n                  updateItem.style = _objectSpread(_objectSpread({}, updateItem.style || {}), currentChange.dimensions);\n                }\n                if (typeof currentChange.resizing === 'boolean') {\n                  updateItem.resizing = currentChange.resizing;\n                }\n                if (updateItem.expandParent) {\n                  handleParentExpand(res, updateItem);\n                }\n                break;\n              }\n            case 'remove':\n              {\n                return res;\n              }\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nvar createSelectionChange = function createSelectionChange(id, selected) {\n  return {\n    id: id,\n    type: 'select',\n    selected: selected\n  };\n};\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce(function (res, item) {\n    var willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\nvar wrapHandler = function wrapHandler(handler, containerRef) {\n  return function (event) {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler === null || handler === void 0 ? void 0 : handler(event);\n  };\n};\nvar selector$8 = function selector$8(s) {\n  return {\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging\n  };\n};\nvar Pane = memo(function (_ref58) {\n  var isSelecting = _ref58.isSelecting,\n    _ref58$selectionMode = _ref58.selectionMode,\n    selectionMode = _ref58$selectionMode === void 0 ? SelectionMode.Full : _ref58$selectionMode,\n    panOnDrag = _ref58.panOnDrag,\n    onSelectionStart = _ref58.onSelectionStart,\n    onSelectionEnd = _ref58.onSelectionEnd,\n    onPaneClick = _ref58.onPaneClick,\n    onPaneContextMenu = _ref58.onPaneContextMenu,\n    onPaneScroll = _ref58.onPaneScroll,\n    onPaneMouseEnter = _ref58.onPaneMouseEnter,\n    onPaneMouseMove = _ref58.onPaneMouseMove,\n    onPaneMouseLeave = _ref58.onPaneMouseLeave,\n    children = _ref58.children;\n  var container = useRef(null);\n  var store = useStoreApi();\n  var prevSelectedNodesCount = useRef(0);\n  var prevSelectedEdgesCount = useRef(0);\n  var containerBounds = useRef();\n  var _useStore7 = useStore(selector$8, shallow),\n    userSelectionActive = _useStore7.userSelectionActive,\n    elementsSelectable = _useStore7.elementsSelectable,\n    dragging = _useStore7.dragging;\n  var resetUserSelection = function resetUserSelection() {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  var onClick = function onClick(event) {\n    onPaneClick === null || onPaneClick === void 0 ? void 0 : onPaneClick(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  var onContextMenu = function onContextMenu(event) {\n    if (Array.isArray(panOnDrag) && panOnDrag !== null && panOnDrag !== void 0 && panOnDrag.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu === null || onPaneContextMenu === void 0 ? void 0 : onPaneContextMenu(event);\n  };\n  var onWheel = onPaneScroll ? function (event) {\n    return onPaneScroll(event);\n  } : undefined;\n  var onMouseDown = function onMouseDown(event) {\n    var _store$getState32 = store.getState(),\n      resetSelectedElements = _store$getState32.resetSelectedElements,\n      domNode = _store$getState32.domNode;\n    containerBounds.current = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    var _getEventPosition3 = getEventPosition(event, containerBounds.current),\n      x = _getEventPosition3.x,\n      y = _getEventPosition3.y;\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x: x,\n        y: y\n      }\n    });\n    onSelectionStart === null || onSelectionStart === void 0 ? void 0 : onSelectionStart(event);\n  };\n  var onMouseMove = function onMouseMove(event) {\n    var _userSelectionRect$st, _userSelectionRect$st2;\n    var _store$getState33 = store.getState(),\n      userSelectionRect = _store$getState33.userSelectionRect,\n      nodeInternals = _store$getState33.nodeInternals,\n      edges = _store$getState33.edges,\n      transform = _store$getState33.transform,\n      onNodesChange = _store$getState33.onNodesChange,\n      onEdgesChange = _store$getState33.onEdgesChange,\n      nodeOrigin = _store$getState33.nodeOrigin,\n      getNodes = _store$getState33.getNodes;\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    var mousePos = getEventPosition(event, containerBounds.current);\n    var startX = (_userSelectionRect$st = userSelectionRect.startX) !== null && _userSelectionRect$st !== void 0 ? _userSelectionRect$st : 0;\n    var startY = (_userSelectionRect$st2 = userSelectionRect.startY) !== null && _userSelectionRect$st2 !== void 0 ? _userSelectionRect$st2 : 0;\n    var nextUserSelectRect = _objectSpread(_objectSpread({}, userSelectionRect), {}, {\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    });\n    var nodes = getNodes();\n    var selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    var selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(function (e) {\n      return e.id;\n    });\n    var selectedNodeIds = selectedNodes.map(function (n) {\n      return n.id;\n    });\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      var changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      var _changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (_changes.length) {\n        onEdgesChange === null || onEdgesChange === void 0 ? void 0 : onEdgesChange(_changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  var onMouseUp = function onMouseUp(event) {\n    if (event.button !== 0) {\n      return;\n    }\n    var _store$getState34 = store.getState(),\n      userSelectionRect = _store$getState34.userSelectionRect;\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd === null || onSelectionEnd === void 0 ? void 0 : onSelectionEnd(event);\n  };\n  var onMouseLeave = function onMouseLeave(event) {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd === null || onSelectionEnd === void 0 ? void 0 : onSelectionEnd(event);\n    }\n    resetUserSelection();\n  };\n  var hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return jsxs(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging: dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle,\n    children: [children, jsx(UserSelection, {})]\n  });\n});\nPane.displayName = 'Pane';\nvar selector$7 = function selector$7(s) {\n  var selectedNodes = s.getNodes().filter(function (n) {\n    return n.selected;\n  });\n  return _objectSpread(_objectSpread({}, getRectOfNodes(selectedNodes, s.nodeOrigin)), {}, {\n    transformString: \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\"),\n    userSelectionActive: s.userSelectionActive\n  });\n};\nfunction NodesSelection(_ref59) {\n  var onSelectionContextMenu = _ref59.onSelectionContextMenu,\n    noPanClassName = _ref59.noPanClassName,\n    disableKeyboardA11y = _ref59.disableKeyboardA11y;\n  var store = useStoreApi();\n  var _useStore8 = useStore(selector$7, shallow),\n    width = _useStore8.width,\n    height = _useStore8.height,\n    left = _useStore8.x,\n    top = _useStore8.y,\n    transformString = _useStore8.transformString,\n    userSelectionActive = _useStore8.userSelectionActive;\n  var updatePositions = useUpdateNodePositions();\n  var nodeRef = useRef(null);\n  useEffect(function () {\n    if (!disableKeyboardA11y) {\n      var _nodeRef$current2;\n      (_nodeRef$current2 = nodeRef.current) === null || _nodeRef$current2 === void 0 ? void 0 : _nodeRef$current2.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef: nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  var onContextMenu = onSelectionContextMenu ? function (event) {\n    var selectedNodes = store.getState().getNodes().filter(function (n) {\n      return n.selected;\n    });\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  var onKeyDown = function onKeyDown(event) {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return jsx(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    },\n    children: jsx(\"div\", {\n      ref: nodeRef,\n      className: \"react-flow__nodesselection-rect\",\n      onContextMenu: onContextMenu,\n      tabIndex: disableKeyboardA11y ? undefined : -1,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      style: {\n        width: width,\n        height: height,\n        top: top,\n        left: left\n      }\n    })\n  });\n}\nvar NodesSelection$1 = memo(NodesSelection);\nvar selector$6 = function selector$6(s) {\n  return s.nodesSelectionActive;\n};\nvar FlowRenderer = function FlowRenderer(_ref60) {\n  var children = _ref60.children,\n    onPaneClick = _ref60.onPaneClick,\n    onPaneMouseEnter = _ref60.onPaneMouseEnter,\n    onPaneMouseMove = _ref60.onPaneMouseMove,\n    onPaneMouseLeave = _ref60.onPaneMouseLeave,\n    onPaneContextMenu = _ref60.onPaneContextMenu,\n    onPaneScroll = _ref60.onPaneScroll,\n    deleteKeyCode = _ref60.deleteKeyCode,\n    onMove = _ref60.onMove,\n    onMoveStart = _ref60.onMoveStart,\n    onMoveEnd = _ref60.onMoveEnd,\n    selectionKeyCode = _ref60.selectionKeyCode,\n    selectionOnDrag = _ref60.selectionOnDrag,\n    selectionMode = _ref60.selectionMode,\n    onSelectionStart = _ref60.onSelectionStart,\n    onSelectionEnd = _ref60.onSelectionEnd,\n    multiSelectionKeyCode = _ref60.multiSelectionKeyCode,\n    panActivationKeyCode = _ref60.panActivationKeyCode,\n    zoomActivationKeyCode = _ref60.zoomActivationKeyCode,\n    elementsSelectable = _ref60.elementsSelectable,\n    zoomOnScroll = _ref60.zoomOnScroll,\n    zoomOnPinch = _ref60.zoomOnPinch,\n    panOnScroll = _ref60.panOnScroll,\n    panOnScrollSpeed = _ref60.panOnScrollSpeed,\n    panOnScrollMode = _ref60.panOnScrollMode,\n    zoomOnDoubleClick = _ref60.zoomOnDoubleClick,\n    _panOnDrag = _ref60.panOnDrag,\n    defaultViewport = _ref60.defaultViewport,\n    translateExtent = _ref60.translateExtent,\n    minZoom = _ref60.minZoom,\n    maxZoom = _ref60.maxZoom,\n    preventScrolling = _ref60.preventScrolling,\n    onSelectionContextMenu = _ref60.onSelectionContextMenu,\n    noWheelClassName = _ref60.noWheelClassName,\n    noPanClassName = _ref60.noPanClassName,\n    disableKeyboardA11y = _ref60.disableKeyboardA11y;\n  var nodesSelectionActive = useStore(selector$6);\n  var selectionKeyPressed = useKeyPress(selectionKeyCode);\n  var panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  var panOnDrag = panActivationKeyPressed || _panOnDrag;\n  var isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode: deleteKeyCode,\n    multiSelectionKeyCode: multiSelectionKeyCode\n  });\n  return jsx(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    children: jsxs(Pane, {\n      onSelectionStart: onSelectionStart,\n      onSelectionEnd: onSelectionEnd,\n      onPaneClick: onPaneClick,\n      onPaneMouseEnter: onPaneMouseEnter,\n      onPaneMouseMove: onPaneMouseMove,\n      onPaneMouseLeave: onPaneMouseLeave,\n      onPaneContextMenu: onPaneContextMenu,\n      onPaneScroll: onPaneScroll,\n      panOnDrag: panOnDrag,\n      isSelecting: !!isSelecting,\n      selectionMode: selectionMode,\n      children: [children, nodesSelectionActive && jsx(NodesSelection$1, {\n        onSelectionContextMenu: onSelectionContextMenu,\n        noPanClassName: noPanClassName,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  var nodes = useStore(useCallback(function (s) {\n    return onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n      x: 0,\n      y: 0,\n      width: s.width,\n      height: s.height\n    }, s.transform, true) : s.getNodes();\n  }, [onlyRenderVisible]));\n  return nodes;\n}\nvar selector$5 = function selector$5(s) {\n  return {\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError\n  };\n};\nvar NodeRenderer = function NodeRenderer(props) {\n  var _useStore9 = useStore(selector$5, shallow),\n    nodesDraggable = _useStore9.nodesDraggable,\n    nodesConnectable = _useStore9.nodesConnectable,\n    nodesFocusable = _useStore9.nodesFocusable,\n    elementsSelectable = _useStore9.elementsSelectable,\n    updateNodeDimensions = _useStore9.updateNodeDimensions,\n    onError = _useStore9.onError;\n  var nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  var resizeObserverRef = useRef();\n  var resizeObserver = useMemo(function () {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    var observer = new ResizeObserver(function (entries) {\n      var updates = entries.map(function (entry) {\n        return {\n          id: entry.target.getAttribute('data-id'),\n          nodeElement: entry.target,\n          forceUpdate: true\n        };\n      });\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(function () {\n    return function () {\n      var _resizeObserverRef$cu;\n      resizeObserverRef === null || resizeObserverRef === void 0 ? void 0 : (_resizeObserverRef$cu = resizeObserverRef.current) === null || _resizeObserverRef$cu === void 0 ? void 0 : _resizeObserverRef$cu.disconnect();\n    };\n  }, []);\n  return jsx(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle,\n    children: nodes.map(function (node) {\n      var _clampedPosition$x, _clampedPosition$y, _node$width2, _node$height2, _node$internalsSymbol4, _node$internalsSymbol5, _node$internalsSymbol6;\n      var nodeType = node.type || 'default';\n      if (!props.nodeTypes[nodeType]) {\n        onError === null || onError === void 0 ? void 0 : onError('003', errorMessages['003'](nodeType));\n        nodeType = 'default';\n      }\n      var NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n      var isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n      var isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n      var isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n      var isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n      var clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n      var posX = (_clampedPosition$x = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.x) !== null && _clampedPosition$x !== void 0 ? _clampedPosition$x : 0;\n      var posY = (_clampedPosition$y = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.y) !== null && _clampedPosition$y !== void 0 ? _clampedPosition$y : 0;\n      var posOrigin = getPositionWithOrigin({\n        x: posX,\n        y: posY,\n        width: (_node$width2 = node.width) !== null && _node$width2 !== void 0 ? _node$width2 : 0,\n        height: (_node$height2 = node.height) !== null && _node$height2 !== void 0 ? _node$height2 : 0,\n        origin: props.nodeOrigin\n      });\n      return jsx(NodeComponent, {\n        id: node.id,\n        className: node.className,\n        style: node.style,\n        type: nodeType,\n        data: node.data,\n        sourcePosition: node.sourcePosition || Position.Bottom,\n        targetPosition: node.targetPosition || Position.Top,\n        hidden: node.hidden,\n        xPos: posX,\n        yPos: posY,\n        xPosOrigin: posOrigin.x,\n        yPosOrigin: posOrigin.y,\n        selectNodesOnDrag: props.selectNodesOnDrag,\n        onClick: props.onNodeClick,\n        onMouseEnter: props.onNodeMouseEnter,\n        onMouseMove: props.onNodeMouseMove,\n        onMouseLeave: props.onNodeMouseLeave,\n        onContextMenu: props.onNodeContextMenu,\n        onDoubleClick: props.onNodeDoubleClick,\n        selected: !!node.selected,\n        isDraggable: isDraggable,\n        isSelectable: isSelectable,\n        isConnectable: isConnectable,\n        isFocusable: isFocusable,\n        resizeObserver: resizeObserver,\n        dragHandle: node.dragHandle,\n        zIndex: (_node$internalsSymbol4 = (_node$internalsSymbol5 = node[internalsSymbol]) === null || _node$internalsSymbol5 === void 0 ? void 0 : _node$internalsSymbol5.z) !== null && _node$internalsSymbol4 !== void 0 ? _node$internalsSymbol4 : 0,\n        isParent: !!((_node$internalsSymbol6 = node[internalsSymbol]) !== null && _node$internalsSymbol6 !== void 0 && _node$internalsSymbol6.isParent),\n        noDragClassName: props.noDragClassName,\n        noPanClassName: props.noPanClassName,\n        initialized: !!node.width && !!node.height,\n        rfId: props.rfId,\n        disableKeyboardA11y: props.disableKeyboardA11y,\n        ariaLabel: node.ariaLabel\n      }, node.id);\n    })\n  });\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nvar defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  var elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var maxLevel = -1;\n  var levelLookup = edges.reduce(function (tree, edge) {\n    var hasZIndex = isNumeric(edge.zIndex);\n    var z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      var _nodeInternals$get2, _nodeInternals$get2$i, _nodeInternals$get3, _nodeInternals$get3$i;\n      z = hasZIndex ? edge.zIndex : Math.max(((_nodeInternals$get2 = nodeInternals.get(edge.source)) === null || _nodeInternals$get2 === void 0 ? void 0 : (_nodeInternals$get2$i = _nodeInternals$get2[internalsSymbol]) === null || _nodeInternals$get2$i === void 0 ? void 0 : _nodeInternals$get2$i.z) || 0, ((_nodeInternals$get3 = nodeInternals.get(edge.target)) === null || _nodeInternals$get3 === void 0 ? void 0 : (_nodeInternals$get3$i = _nodeInternals$get3[internalsSymbol]) === null || _nodeInternals$get3$i === void 0 ? void 0 : _nodeInternals$get3$i.z) || 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  var edgeTree = Object.entries(levelLookup).map(function (_ref61) {\n    var _ref62 = _slicedToArray(_ref61, 2),\n      key = _ref62[0],\n      edges = _ref62[1];\n    var level = +key;\n    return {\n      edges: edges,\n      level: level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  var edges = useStore(useCallback(function (s) {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(function (e) {\n      var sourceNode = nodeInternals.get(e.source);\n      var targetNode = nodeInternals.get(e.target);\n      return (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.width) && (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.height) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.width) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.height) && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nvar ArrowSymbol = function ArrowSymbol(_ref63) {\n  var _ref63$color = _ref63.color,\n    color = _ref63$color === void 0 ? 'none' : _ref63$color,\n    _ref63$strokeWidth = _ref63.strokeWidth,\n    strokeWidth = _ref63$strokeWidth === void 0 ? 1 : _ref63$strokeWidth;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nvar ArrowClosedSymbol = function ArrowClosedSymbol(_ref64) {\n  var _ref64$color = _ref64.color,\n    color = _ref64$color === void 0 ? 'none' : _ref64$color,\n    _ref64$strokeWidth = _ref64.strokeWidth,\n    strokeWidth = _ref64$strokeWidth === void 0 ? 1 : _ref64$strokeWidth;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: color,\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nvar MarkerSymbols = (_MarkerSymbols = {}, _defineProperty(_MarkerSymbols, MarkerType.Arrow, ArrowSymbol), _defineProperty(_MarkerSymbols, MarkerType.ArrowClosed, ArrowClosedSymbol), _MarkerSymbols);\nfunction useMarkerSymbol(type) {\n  var store = useStoreApi();\n  var symbol = useMemo(function () {\n    var symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      var _store$getState$onErr3, _store$getState35;\n      (_store$getState$onErr3 = (_store$getState35 = store.getState()).onError) === null || _store$getState$onErr3 === void 0 ? void 0 : _store$getState$onErr3.call(_store$getState35, '009', errorMessages['009'](type));\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nvar Marker = function Marker(_ref65) {\n  var id = _ref65.id,\n    type = _ref65.type,\n    color = _ref65.color,\n    _ref65$width = _ref65.width,\n    width = _ref65$width === void 0 ? 12.5 : _ref65$width,\n    _ref65$height = _ref65.height,\n    height = _ref65$height === void 0 ? 12.5 : _ref65$height,\n    _ref65$markerUnits = _ref65.markerUnits,\n    markerUnits = _ref65$markerUnits === void 0 ? 'strokeWidth' : _ref65$markerUnits,\n    strokeWidth = _ref65.strokeWidth,\n    _ref65$orient = _ref65.orient,\n    orient = _ref65$orient === void 0 ? 'auto-start-reverse' : _ref65$orient;\n  var Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return jsx(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: \"\".concat(width),\n    markerHeight: \"\".concat(height),\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\",\n    children: jsx(Symbol, {\n      color: color,\n      strokeWidth: strokeWidth\n    })\n  });\n};\nvar markerSelector = function markerSelector(_ref66) {\n  var defaultColor = _ref66.defaultColor,\n    rfId = _ref66.rfId;\n  return function (s) {\n    var ids = [];\n    return s.edges.reduce(function (markers, edge) {\n      [edge.markerStart, edge.markerEnd].forEach(function (marker) {\n        if (marker && typeof marker === 'object') {\n          var markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push(_objectSpread({\n              id: markerId,\n              color: marker.color || defaultColor\n            }, marker));\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort(function (a, b) {\n      return a.id.localeCompare(b.id);\n    });\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nvar MarkerDefinitions = function MarkerDefinitions(_ref67) {\n  var defaultColor = _ref67.defaultColor,\n    rfId = _ref67.rfId;\n  var markers = useStore(useCallback(markerSelector({\n    defaultColor: defaultColor,\n    rfId: rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  function (a, b) {\n    return !(a.length !== b.length || a.some(function (m, i) {\n      return m.id !== b[i].id;\n    }));\n  });\n  return jsx(\"defs\", {\n    children: markers.map(function (marker) {\n      return jsx(Marker, {\n        id: marker.id,\n        type: marker.type,\n        color: marker.color,\n        width: marker.width,\n        height: marker.height,\n        markerUnits: marker.markerUnits,\n        strokeWidth: marker.strokeWidth,\n        orient: marker.orient\n      }, marker.id);\n    })\n  });\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nvar selector$4 = function selector$4(s) {\n  return {\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError\n  };\n};\nvar EdgeRenderer = function EdgeRenderer(_ref68) {\n  var defaultMarkerColor = _ref68.defaultMarkerColor,\n    onlyRenderVisibleElements = _ref68.onlyRenderVisibleElements,\n    elevateEdgesOnSelect = _ref68.elevateEdgesOnSelect,\n    rfId = _ref68.rfId,\n    edgeTypes = _ref68.edgeTypes,\n    noPanClassName = _ref68.noPanClassName,\n    onEdgeUpdate = _ref68.onEdgeUpdate,\n    onEdgeContextMenu = _ref68.onEdgeContextMenu,\n    onEdgeMouseEnter = _ref68.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref68.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref68.onEdgeMouseLeave,\n    onEdgeClick = _ref68.onEdgeClick,\n    edgeUpdaterRadius = _ref68.edgeUpdaterRadius,\n    onEdgeDoubleClick = _ref68.onEdgeDoubleClick,\n    onEdgeUpdateStart = _ref68.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref68.onEdgeUpdateEnd,\n    children = _ref68.children;\n  var _useStore10 = useStore(selector$4, shallow),\n    edgesFocusable = _useStore10.edgesFocusable,\n    elementsSelectable = _useStore10.elementsSelectable,\n    width = _useStore10.width,\n    height = _useStore10.height,\n    connectionMode = _useStore10.connectionMode,\n    nodeInternals = _useStore10.nodeInternals,\n    onError = _useStore10.onError;\n  var edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  return jsxs(Fragment, {\n    children: [edgeTree.map(function (_ref69) {\n      var level = _ref69.level,\n        edges = _ref69.edges,\n        isMaxLevel = _ref69.isMaxLevel;\n      return jsxs(\"svg\", {\n        style: {\n          zIndex: level\n        },\n        width: width,\n        height: height,\n        className: \"react-flow__edges react-flow__container\",\n        children: [isMaxLevel && jsx(MarkerDefinitions$1, {\n          defaultColor: defaultMarkerColor,\n          rfId: rfId\n        }), jsx(\"g\", {\n          children: edges.map(function (edge) {\n            var _targetHandleBounds$t, _targetHandleBounds$s;\n            var _getNodeData = getNodeData(nodeInternals.get(edge.source)),\n              _getNodeData2 = _slicedToArray(_getNodeData, 3),\n              sourceNodeRect = _getNodeData2[0],\n              sourceHandleBounds = _getNodeData2[1],\n              sourceIsValid = _getNodeData2[2];\n            var _getNodeData3 = getNodeData(nodeInternals.get(edge.target)),\n              _getNodeData4 = _slicedToArray(_getNodeData3, 3),\n              targetNodeRect = _getNodeData4[0],\n              targetHandleBounds = _getNodeData4[1],\n              targetIsValid = _getNodeData4[2];\n            if (!sourceIsValid || !targetIsValid) {\n              return null;\n            }\n            var edgeType = edge.type || 'default';\n            if (!edgeTypes[edgeType]) {\n              onError === null || onError === void 0 ? void 0 : onError('011', errorMessages['011'](edgeType));\n              edgeType = 'default';\n            }\n            var EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n            // when connection type is loose we can define all handles as sources and connect source -> source\n            var targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : ((_targetHandleBounds$t = targetHandleBounds.target) !== null && _targetHandleBounds$t !== void 0 ? _targetHandleBounds$t : []).concat((_targetHandleBounds$s = targetHandleBounds.source) !== null && _targetHandleBounds$s !== void 0 ? _targetHandleBounds$s : []);\n            var sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n            var targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n            var sourcePosition = (sourceHandle === null || sourceHandle === void 0 ? void 0 : sourceHandle.position) || Position.Bottom;\n            var targetPosition = (targetHandle === null || targetHandle === void 0 ? void 0 : targetHandle.position) || Position.Top;\n            var isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n            if (!sourceHandle || !targetHandle) {\n              onError === null || onError === void 0 ? void 0 : onError('008', errorMessages['008'](sourceHandle, edge));\n              return null;\n            }\n            var _getEdgePositions = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition),\n              sourceX = _getEdgePositions.sourceX,\n              sourceY = _getEdgePositions.sourceY,\n              targetX = _getEdgePositions.targetX,\n              targetY = _getEdgePositions.targetY;\n            return jsx(EdgeComponent, {\n              id: edge.id,\n              className: cc([edge.className, noPanClassName]),\n              type: edgeType,\n              data: edge.data,\n              selected: !!edge.selected,\n              animated: !!edge.animated,\n              hidden: !!edge.hidden,\n              label: edge.label,\n              labelStyle: edge.labelStyle,\n              labelShowBg: edge.labelShowBg,\n              labelBgStyle: edge.labelBgStyle,\n              labelBgPadding: edge.labelBgPadding,\n              labelBgBorderRadius: edge.labelBgBorderRadius,\n              style: edge.style,\n              source: edge.source,\n              target: edge.target,\n              sourceHandleId: edge.sourceHandle,\n              targetHandleId: edge.targetHandle,\n              markerEnd: edge.markerEnd,\n              markerStart: edge.markerStart,\n              sourceX: sourceX,\n              sourceY: sourceY,\n              targetX: targetX,\n              targetY: targetY,\n              sourcePosition: sourcePosition,\n              targetPosition: targetPosition,\n              elementsSelectable: elementsSelectable,\n              onEdgeUpdate: onEdgeUpdate,\n              onContextMenu: onEdgeContextMenu,\n              onMouseEnter: onEdgeMouseEnter,\n              onMouseMove: onEdgeMouseMove,\n              onMouseLeave: onEdgeMouseLeave,\n              onClick: onEdgeClick,\n              edgeUpdaterRadius: edgeUpdaterRadius,\n              onEdgeDoubleClick: onEdgeDoubleClick,\n              onEdgeUpdateStart: onEdgeUpdateStart,\n              onEdgeUpdateEnd: onEdgeUpdateEnd,\n              rfId: rfId,\n              ariaLabel: edge.ariaLabel,\n              isFocusable: isFocusable,\n              pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n              interactionWidth: edge.interactionWidth\n            }, edge.id);\n          })\n        })]\n      }, level);\n    }), children]\n  });\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nvar selector$3 = function selector$3(s) {\n  return \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\");\n};\nfunction Viewport(_ref70) {\n  var children = _ref70.children;\n  var transform = useStore(selector$3);\n  return jsx(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform: transform\n    },\n    children: children\n  });\n}\nfunction useOnInitHandler(onInit) {\n  var rfInstance = useReactFlow();\n  var isInitialized = useRef(false);\n  useEffect(function () {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(function () {\n        return onInit(rfInstance);\n      }, 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nvar oppositePosition = (_oppositePosition = {}, _defineProperty(_oppositePosition, Position.Left, Position.Right), _defineProperty(_oppositePosition, Position.Right, Position.Left), _defineProperty(_oppositePosition, Position.Top, Position.Bottom), _defineProperty(_oppositePosition, Position.Bottom, Position.Top), _oppositePosition);\nvar ConnectionLine = function ConnectionLine(_ref71) {\n  var _fromNode$internalsSy, _fromNode$width, _fromNode$height, _fromNode$positionAbs, _fromNode$positionAbs2, _fromNode$positionAbs3, _fromNode$positionAbs4;\n  var nodeId = _ref71.nodeId,\n    handleType = _ref71.handleType,\n    style = _ref71.style,\n    _ref71$type = _ref71.type,\n    type = _ref71$type === void 0 ? ConnectionLineType.Bezier : _ref71$type,\n    CustomComponent = _ref71.CustomComponent,\n    connectionStatus = _ref71.connectionStatus;\n  var _useStore11 = useStore(useCallback(function (s) {\n      return {\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode\n      };\n    }, [nodeId]), shallow),\n    fromNode = _useStore11.fromNode,\n    handleId = _useStore11.handleId,\n    toX = _useStore11.toX,\n    toY = _useStore11.toY,\n    connectionMode = _useStore11.connectionMode;\n  var fromHandleBounds = fromNode === null || fromNode === void 0 ? void 0 : (_fromNode$internalsSy = fromNode[internalsSymbol]) === null || _fromNode$internalsSy === void 0 ? void 0 : _fromNode$internalsSy.handleBounds;\n  var handleBounds = fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !handleBounds) {\n    return null;\n  }\n  var fromHandle = handleId ? handleBounds.find(function (d) {\n    return d.id === handleId;\n  }) : handleBounds[0];\n  var fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : ((_fromNode$width = fromNode.width) !== null && _fromNode$width !== void 0 ? _fromNode$width : 0) / 2;\n  var fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : (_fromNode$height = fromNode.height) !== null && _fromNode$height !== void 0 ? _fromNode$height : 0;\n  var fromX = ((_fromNode$positionAbs = (_fromNode$positionAbs2 = fromNode.positionAbsolute) === null || _fromNode$positionAbs2 === void 0 ? void 0 : _fromNode$positionAbs2.x) !== null && _fromNode$positionAbs !== void 0 ? _fromNode$positionAbs : 0) + fromHandleX;\n  var fromY = ((_fromNode$positionAbs3 = (_fromNode$positionAbs4 = fromNode.positionAbsolute) === null || _fromNode$positionAbs4 === void 0 ? void 0 : _fromNode$positionAbs4.y) !== null && _fromNode$positionAbs3 !== void 0 ? _fromNode$positionAbs3 : 0) + fromHandleY;\n  var fromPosition = fromHandle === null || fromHandle === void 0 ? void 0 : fromHandle.position;\n  var toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n  if (!fromPosition || !toPosition) {\n    return null;\n  }\n  if (CustomComponent) {\n    return jsx(CustomComponent, {\n      connectionLineType: type,\n      connectionLineStyle: style,\n      fromNode: fromNode,\n      fromHandle: fromHandle,\n      fromX: fromX,\n      fromY: fromY,\n      toX: toX,\n      toY: toY,\n      fromPosition: fromPosition,\n      toPosition: toPosition,\n      connectionStatus: connectionStatus\n    });\n  }\n  var dAttr = '';\n  var pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (type === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    var _getBezierPath3 = getBezierPath(pathParams);\n    var _getBezierPath4 = _slicedToArray(_getBezierPath3, 1);\n    dAttr = _getBezierPath4[0];\n  } else if (type === ConnectionLineType.Step) {\n    var _getSmoothStepPath3 = getSmoothStepPath(_objectSpread(_objectSpread({}, pathParams), {}, {\n      borderRadius: 0\n    }));\n    var _getSmoothStepPath4 = _slicedToArray(_getSmoothStepPath3, 1);\n    dAttr = _getSmoothStepPath4[0];\n  } else if (type === ConnectionLineType.SmoothStep) {\n    var _getSmoothStepPath5 = getSmoothStepPath(pathParams);\n    var _getSmoothStepPath6 = _slicedToArray(_getSmoothStepPath5, 1);\n    dAttr = _getSmoothStepPath6[0];\n  } else if (type === ConnectionLineType.SimpleBezier) {\n    var _getSimpleBezierPath3 = getSimpleBezierPath(pathParams);\n    var _getSimpleBezierPath4 = _slicedToArray(_getSimpleBezierPath3, 1);\n    dAttr = _getSimpleBezierPath4[0];\n  } else {\n    dAttr = \"M\".concat(fromX, \",\").concat(fromY, \" \").concat(toX, \",\").concat(toY);\n  }\n  return jsx(\"path\", {\n    d: dAttr,\n    fill: \"none\",\n    className: \"react-flow__connection-path\",\n    style: style\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nvar selector$2 = function selector$2(s) {\n  return {\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height\n  };\n};\nfunction ConnectionLineWrapper(_ref72) {\n  var containerStyle = _ref72.containerStyle,\n    style = _ref72.style,\n    type = _ref72.type,\n    component = _ref72.component;\n  var _useStore12 = useStore(selector$2, shallow),\n    nodeId = _useStore12.nodeId,\n    handleType = _useStore12.handleType,\n    nodesConnectable = _useStore12.nodesConnectable,\n    width = _useStore12.width,\n    height = _useStore12.height,\n    connectionStatus = _useStore12.connectionStatus;\n  var isValid = !!(nodeId && handleType && width && nodesConnectable);\n  if (!isValid) {\n    return null;\n  }\n  return jsx(\"svg\", {\n    style: containerStyle,\n    width: width,\n    height: height,\n    className: \"react-flow__edges react-flow__connectionline react-flow__container\",\n    children: jsx(\"g\", {\n      className: cc(['react-flow__connection', connectionStatus]),\n      children: jsx(ConnectionLine, {\n        nodeId: nodeId,\n        handleType: handleType,\n        style: style,\n        type: type,\n        CustomComponent: component,\n        connectionStatus: connectionStatus\n      })\n    })\n  });\n}\nvar GraphView = function GraphView(_ref73) {\n  var nodeTypes = _ref73.nodeTypes,\n    edgeTypes = _ref73.edgeTypes,\n    onMove = _ref73.onMove,\n    onMoveStart = _ref73.onMoveStart,\n    onMoveEnd = _ref73.onMoveEnd,\n    onInit = _ref73.onInit,\n    onNodeClick = _ref73.onNodeClick,\n    onEdgeClick = _ref73.onEdgeClick,\n    onNodeDoubleClick = _ref73.onNodeDoubleClick,\n    onEdgeDoubleClick = _ref73.onEdgeDoubleClick,\n    onNodeMouseEnter = _ref73.onNodeMouseEnter,\n    onNodeMouseMove = _ref73.onNodeMouseMove,\n    onNodeMouseLeave = _ref73.onNodeMouseLeave,\n    onNodeContextMenu = _ref73.onNodeContextMenu,\n    onSelectionContextMenu = _ref73.onSelectionContextMenu,\n    onSelectionStart = _ref73.onSelectionStart,\n    onSelectionEnd = _ref73.onSelectionEnd,\n    connectionLineType = _ref73.connectionLineType,\n    connectionLineStyle = _ref73.connectionLineStyle,\n    connectionLineComponent = _ref73.connectionLineComponent,\n    connectionLineContainerStyle = _ref73.connectionLineContainerStyle,\n    selectionKeyCode = _ref73.selectionKeyCode,\n    selectionOnDrag = _ref73.selectionOnDrag,\n    selectionMode = _ref73.selectionMode,\n    multiSelectionKeyCode = _ref73.multiSelectionKeyCode,\n    panActivationKeyCode = _ref73.panActivationKeyCode,\n    zoomActivationKeyCode = _ref73.zoomActivationKeyCode,\n    deleteKeyCode = _ref73.deleteKeyCode,\n    onlyRenderVisibleElements = _ref73.onlyRenderVisibleElements,\n    elementsSelectable = _ref73.elementsSelectable,\n    selectNodesOnDrag = _ref73.selectNodesOnDrag,\n    defaultViewport = _ref73.defaultViewport,\n    translateExtent = _ref73.translateExtent,\n    minZoom = _ref73.minZoom,\n    maxZoom = _ref73.maxZoom,\n    preventScrolling = _ref73.preventScrolling,\n    defaultMarkerColor = _ref73.defaultMarkerColor,\n    zoomOnScroll = _ref73.zoomOnScroll,\n    zoomOnPinch = _ref73.zoomOnPinch,\n    panOnScroll = _ref73.panOnScroll,\n    panOnScrollSpeed = _ref73.panOnScrollSpeed,\n    panOnScrollMode = _ref73.panOnScrollMode,\n    zoomOnDoubleClick = _ref73.zoomOnDoubleClick,\n    panOnDrag = _ref73.panOnDrag,\n    onPaneClick = _ref73.onPaneClick,\n    onPaneMouseEnter = _ref73.onPaneMouseEnter,\n    onPaneMouseMove = _ref73.onPaneMouseMove,\n    onPaneMouseLeave = _ref73.onPaneMouseLeave,\n    onPaneScroll = _ref73.onPaneScroll,\n    onPaneContextMenu = _ref73.onPaneContextMenu,\n    onEdgeUpdate = _ref73.onEdgeUpdate,\n    onEdgeContextMenu = _ref73.onEdgeContextMenu,\n    onEdgeMouseEnter = _ref73.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref73.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref73.onEdgeMouseLeave,\n    edgeUpdaterRadius = _ref73.edgeUpdaterRadius,\n    onEdgeUpdateStart = _ref73.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref73.onEdgeUpdateEnd,\n    noDragClassName = _ref73.noDragClassName,\n    noWheelClassName = _ref73.noWheelClassName,\n    noPanClassName = _ref73.noPanClassName,\n    elevateEdgesOnSelect = _ref73.elevateEdgesOnSelect,\n    disableKeyboardA11y = _ref73.disableKeyboardA11y,\n    nodeOrigin = _ref73.nodeOrigin,\n    nodeExtent = _ref73.nodeExtent,\n    rfId = _ref73.rfId;\n  useOnInitHandler(onInit);\n  return jsx(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    children: jsxs(Viewport, {\n      children: [jsx(EdgeRenderer$1, {\n        edgeTypes: edgeTypes,\n        onEdgeClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeUpdate: onEdgeUpdate,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n        disableKeyboardA11y: disableKeyboardA11y,\n        rfId: rfId,\n        children: jsx(ConnectionLineWrapper, {\n          style: connectionLineStyle,\n          type: connectionLineType,\n          component: connectionLineComponent,\n          containerStyle: connectionLineContainerStyle\n        })\n      }), jsx(\"div\", {\n        className: \"react-flow__edgelabel-renderer\"\n      }), jsx(NodeRenderer$1, {\n        nodeTypes: nodeTypes,\n        onNodeClick: onNodeClick,\n        onNodeDoubleClick: onNodeDoubleClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        selectNodesOnDrag: selectNodesOnDrag,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        noPanClassName: noPanClassName,\n        noDragClassName: noDragClassName,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent,\n        rfId: rfId\n      })]\n    })\n  });\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nvar infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nvar initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionStatus: null,\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: '',\n  autoPanOnConnect: true,\n  autoPanOnNodeDrag: true,\n  connectionRadius: 20,\n  onError: devWarn\n};\nvar createRFStore = function createRFStore() {\n  return createStore(function (set, get) {\n    return _objectSpread(_objectSpread({}, initialState), {}, {\n      setNodes: function setNodes(nodes) {\n        var _get3 = get(),\n          nodeInternals = _get3.nodeInternals,\n          nodeOrigin = _get3.nodeOrigin,\n          elevateNodesOnSelect = _get3.elevateNodesOnSelect;\n        set({\n          nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n        });\n      },\n      getNodes: function getNodes() {\n        return Array.from(get().nodeInternals.values());\n      },\n      setEdges: function setEdges(edges) {\n        var _get4 = get(),\n          _get4$defaultEdgeOpti = _get4.defaultEdgeOptions,\n          defaultEdgeOptions = _get4$defaultEdgeOpti === void 0 ? {} : _get4$defaultEdgeOpti;\n        set({\n          edges: edges.map(function (e) {\n            return _objectSpread(_objectSpread({}, defaultEdgeOptions), e);\n          })\n        });\n      },\n      setDefaultNodesAndEdges: function setDefaultNodesAndEdges(nodes, edges) {\n        var hasDefaultNodes = typeof nodes !== 'undefined';\n        var hasDefaultEdges = typeof edges !== 'undefined';\n        var nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n        var nextEdges = hasDefaultEdges ? edges : [];\n        set({\n          nodeInternals: nodeInternals,\n          edges: nextEdges,\n          hasDefaultNodes: hasDefaultNodes,\n          hasDefaultEdges: hasDefaultEdges\n        });\n      },\n      updateNodeDimensions: function updateNodeDimensions(updates) {\n        var _get5 = get(),\n          onNodesChange = _get5.onNodesChange,\n          nodeInternals = _get5.nodeInternals,\n          fitViewOnInit = _get5.fitViewOnInit,\n          fitViewOnInitDone = _get5.fitViewOnInitDone,\n          fitViewOnInitOptions = _get5.fitViewOnInitOptions,\n          domNode = _get5.domNode,\n          nodeOrigin = _get5.nodeOrigin;\n        var viewportNode = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n          return;\n        }\n        var style = window.getComputedStyle(viewportNode);\n        var _window$DOMMatrixRead = new window.DOMMatrixReadOnly(style.transform),\n          zoom = _window$DOMMatrixRead.m22;\n        var changes = updates.reduce(function (res, update) {\n          var node = nodeInternals.get(update.id);\n          if (node) {\n            var dimensions = getDimensions(update.nodeElement);\n            var doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n            if (doUpdate) {\n              nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, _defineProperty({}, internalsSymbol, _objectSpread(_objectSpread({}, node[internalsSymbol]), {}, {\n                handleBounds: {\n                  source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                  target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n                }\n              })), dimensions));\n              res.push({\n                id: node.id,\n                type: 'dimensions',\n                dimensions: dimensions\n              });\n            }\n          }\n          return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        var nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && _fitView(get, _objectSpread({\n          initial: true\n        }, fitViewOnInitOptions));\n        set({\n          nodeInternals: new Map(nodeInternals),\n          fitViewOnInitDone: nextFitViewOnInitDone\n        });\n        if ((changes === null || changes === void 0 ? void 0 : changes.length) > 0) {\n          onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n        }\n      },\n      updateNodePositions: function updateNodePositions(nodeDragItems) {\n        var positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var _get6 = get(),\n          triggerNodeChanges = _get6.triggerNodeChanges;\n        var changes = nodeDragItems.map(function (node) {\n          var change = {\n            id: node.id,\n            type: 'position',\n            dragging: dragging\n          };\n          if (positionChanged) {\n            change.positionAbsolute = node.positionAbsolute;\n            change.position = node.position;\n          }\n          return change;\n        });\n        triggerNodeChanges(changes);\n      },\n      triggerNodeChanges: function triggerNodeChanges(changes) {\n        var _get7 = get(),\n          onNodesChange = _get7.onNodesChange,\n          nodeInternals = _get7.nodeInternals,\n          hasDefaultNodes = _get7.hasDefaultNodes,\n          nodeOrigin = _get7.nodeOrigin,\n          getNodes = _get7.getNodes,\n          elevateNodesOnSelect = _get7.elevateNodesOnSelect;\n        if (changes !== null && changes !== void 0 && changes.length) {\n          if (hasDefaultNodes) {\n            var nodes = applyNodeChanges(changes, getNodes());\n            var nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n            set({\n              nodeInternals: nextNodeInternals\n            });\n          }\n          onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n        }\n      },\n      addSelectedNodes: function addSelectedNodes(selectedNodeIds) {\n        var _get8 = get(),\n          multiSelectionActive = _get8.multiSelectionActive,\n          edges = _get8.edges,\n          getNodes = _get8.getNodes;\n        var changedNodes;\n        var changedEdges = null;\n        if (multiSelectionActive) {\n          changedNodes = selectedNodeIds.map(function (nodeId) {\n            return createSelectionChange(nodeId, true);\n          });\n        } else {\n          changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n          changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      addSelectedEdges: function addSelectedEdges(selectedEdgeIds) {\n        var _get9 = get(),\n          multiSelectionActive = _get9.multiSelectionActive,\n          edges = _get9.edges,\n          getNodes = _get9.getNodes;\n        var changedEdges;\n        var changedNodes = null;\n        if (multiSelectionActive) {\n          changedEdges = selectedEdgeIds.map(function (edgeId) {\n            return createSelectionChange(edgeId, true);\n          });\n        } else {\n          changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n          changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      unselectNodesAndEdges: function unselectNodesAndEdges() {\n        var _ref74 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          nodes = _ref74.nodes,\n          edges = _ref74.edges;\n        var _get10 = get(),\n          storeEdges = _get10.edges,\n          getNodes = _get10.getNodes;\n        var nodesToUnselect = nodes ? nodes : getNodes();\n        var edgesToUnselect = edges ? edges : storeEdges;\n        var changedNodes = nodesToUnselect.map(function (n) {\n          n.selected = false;\n          return createSelectionChange(n.id, false);\n        });\n        var changedEdges = edgesToUnselect.map(function (edge) {\n          return createSelectionChange(edge.id, false);\n        });\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      setMinZoom: function setMinZoom(minZoom) {\n        var _get11 = get(),\n          d3Zoom = _get11.d3Zoom,\n          maxZoom = _get11.maxZoom;\n        d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.scaleExtent([minZoom, maxZoom]);\n        set({\n          minZoom: minZoom\n        });\n      },\n      setMaxZoom: function setMaxZoom(maxZoom) {\n        var _get12 = get(),\n          d3Zoom = _get12.d3Zoom,\n          minZoom = _get12.minZoom;\n        d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.scaleExtent([minZoom, maxZoom]);\n        set({\n          maxZoom: maxZoom\n        });\n      },\n      setTranslateExtent: function setTranslateExtent(translateExtent) {\n        var _get$d3Zoom;\n        (_get$d3Zoom = get().d3Zoom) === null || _get$d3Zoom === void 0 ? void 0 : _get$d3Zoom.translateExtent(translateExtent);\n        set({\n          translateExtent: translateExtent\n        });\n      },\n      resetSelectedElements: function resetSelectedElements() {\n        var _get13 = get(),\n          edges = _get13.edges,\n          getNodes = _get13.getNodes;\n        var nodes = getNodes();\n        var nodesToUnselect = nodes.filter(function (e) {\n          return e.selected;\n        }).map(function (n) {\n          return createSelectionChange(n.id, false);\n        });\n        var edgesToUnselect = edges.filter(function (e) {\n          return e.selected;\n        }).map(function (e) {\n          return createSelectionChange(e.id, false);\n        });\n        updateNodesAndEdgesSelections({\n          changedNodes: nodesToUnselect,\n          changedEdges: edgesToUnselect,\n          get: get,\n          set: set\n        });\n      },\n      setNodeExtent: function setNodeExtent(nodeExtent) {\n        var _get14 = get(),\n          nodeInternals = _get14.nodeInternals;\n        nodeInternals.forEach(function (node) {\n          node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n          nodeExtent: nodeExtent,\n          nodeInternals: new Map(nodeInternals)\n        });\n      },\n      panBy: function panBy(delta) {\n        var _get15 = get(),\n          transform = _get15.transform,\n          width = _get15.width,\n          height = _get15.height,\n          d3Zoom = _get15.d3Zoom,\n          d3Selection = _get15.d3Selection,\n          translateExtent = _get15.translateExtent;\n        if (!d3Zoom || !d3Selection || !delta.x && !delta.y) {\n          return;\n        }\n        var nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        var extent = [[0, 0], [width, height]];\n        var constrainedTransform = d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n      },\n      cancelConnection: function cancelConnection() {\n        return set({\n          connectionNodeId: initialState.connectionNodeId,\n          connectionHandleId: initialState.connectionHandleId,\n          connectionHandleType: initialState.connectionHandleType,\n          connectionStatus: initialState.connectionStatus\n        });\n      },\n      reset: function reset() {\n        return set(_objectSpread({}, initialState));\n      }\n    });\n  });\n};\nvar ReactFlowProvider = function ReactFlowProvider(_ref75) {\n  var children = _ref75.children;\n  var storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return jsx(Provider$1, {\n    value: storeRef.current,\n    children: children\n  });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nvar Wrapper = function Wrapper(_ref76) {\n  var children = _ref76.children;\n  var isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return jsx(Fragment, {\n      children: children\n    });\n  }\n  return jsx(ReactFlowProvider, {\n    children: children\n  });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  var typesKeysRef = useRef(null);\n  var typesParsed = useMemo(function () {\n    if (process.env.NODE_ENV === 'development') {\n      var typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        devWarn('002', errorMessages['002']());\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nvar defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nvar defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nvar initNodeOrigin = [0, 0];\nvar initSnapGrid = [15, 15];\nvar initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nvar wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nvar ReactFlow = forwardRef(function (_ref77, ref) {\n  var nodes = _ref77.nodes,\n    edges = _ref77.edges,\n    defaultNodes = _ref77.defaultNodes,\n    defaultEdges = _ref77.defaultEdges,\n    className = _ref77.className,\n    _ref77$nodeTypes = _ref77.nodeTypes,\n    nodeTypes = _ref77$nodeTypes === void 0 ? defaultNodeTypes : _ref77$nodeTypes,\n    _ref77$edgeTypes = _ref77.edgeTypes,\n    edgeTypes = _ref77$edgeTypes === void 0 ? defaultEdgeTypes : _ref77$edgeTypes,\n    onNodeClick = _ref77.onNodeClick,\n    onEdgeClick = _ref77.onEdgeClick,\n    onInit = _ref77.onInit,\n    onMove = _ref77.onMove,\n    onMoveStart = _ref77.onMoveStart,\n    onMoveEnd = _ref77.onMoveEnd,\n    onConnect = _ref77.onConnect,\n    onConnectStart = _ref77.onConnectStart,\n    onConnectEnd = _ref77.onConnectEnd,\n    onClickConnectStart = _ref77.onClickConnectStart,\n    onClickConnectEnd = _ref77.onClickConnectEnd,\n    onNodeMouseEnter = _ref77.onNodeMouseEnter,\n    onNodeMouseMove = _ref77.onNodeMouseMove,\n    onNodeMouseLeave = _ref77.onNodeMouseLeave,\n    onNodeContextMenu = _ref77.onNodeContextMenu,\n    onNodeDoubleClick = _ref77.onNodeDoubleClick,\n    onNodeDragStart = _ref77.onNodeDragStart,\n    onNodeDrag = _ref77.onNodeDrag,\n    onNodeDragStop = _ref77.onNodeDragStop,\n    onNodesDelete = _ref77.onNodesDelete,\n    onEdgesDelete = _ref77.onEdgesDelete,\n    onSelectionChange = _ref77.onSelectionChange,\n    onSelectionDragStart = _ref77.onSelectionDragStart,\n    onSelectionDrag = _ref77.onSelectionDrag,\n    onSelectionDragStop = _ref77.onSelectionDragStop,\n    onSelectionContextMenu = _ref77.onSelectionContextMenu,\n    onSelectionStart = _ref77.onSelectionStart,\n    onSelectionEnd = _ref77.onSelectionEnd,\n    _ref77$connectionMode = _ref77.connectionMode,\n    connectionMode = _ref77$connectionMode === void 0 ? ConnectionMode.Strict : _ref77$connectionMode,\n    _ref77$connectionLine = _ref77.connectionLineType,\n    connectionLineType = _ref77$connectionLine === void 0 ? ConnectionLineType.Bezier : _ref77$connectionLine,\n    connectionLineStyle = _ref77.connectionLineStyle,\n    connectionLineComponent = _ref77.connectionLineComponent,\n    connectionLineContainerStyle = _ref77.connectionLineContainerStyle,\n    _ref77$deleteKeyCode = _ref77.deleteKeyCode,\n    deleteKeyCode = _ref77$deleteKeyCode === void 0 ? 'Backspace' : _ref77$deleteKeyCode,\n    _ref77$selectionKeyCo = _ref77.selectionKeyCode,\n    selectionKeyCode = _ref77$selectionKeyCo === void 0 ? 'Shift' : _ref77$selectionKeyCo,\n    _ref77$selectionOnDra = _ref77.selectionOnDrag,\n    selectionOnDrag = _ref77$selectionOnDra === void 0 ? false : _ref77$selectionOnDra,\n    _ref77$selectionMode = _ref77.selectionMode,\n    selectionMode = _ref77$selectionMode === void 0 ? SelectionMode.Full : _ref77$selectionMode,\n    _ref77$panActivationK = _ref77.panActivationKeyCode,\n    panActivationKeyCode = _ref77$panActivationK === void 0 ? 'Space' : _ref77$panActivationK,\n    _ref77$multiSelection = _ref77.multiSelectionKeyCode,\n    multiSelectionKeyCode = _ref77$multiSelection === void 0 ? 'Meta' : _ref77$multiSelection,\n    _ref77$zoomActivation = _ref77.zoomActivationKeyCode,\n    zoomActivationKeyCode = _ref77$zoomActivation === void 0 ? 'Meta' : _ref77$zoomActivation,\n    _ref77$snapToGrid = _ref77.snapToGrid,\n    snapToGrid = _ref77$snapToGrid === void 0 ? false : _ref77$snapToGrid,\n    _ref77$snapGrid = _ref77.snapGrid,\n    snapGrid = _ref77$snapGrid === void 0 ? initSnapGrid : _ref77$snapGrid,\n    _ref77$onlyRenderVisi = _ref77.onlyRenderVisibleElements,\n    onlyRenderVisibleElements = _ref77$onlyRenderVisi === void 0 ? false : _ref77$onlyRenderVisi,\n    _ref77$selectNodesOnD = _ref77.selectNodesOnDrag,\n    selectNodesOnDrag = _ref77$selectNodesOnD === void 0 ? true : _ref77$selectNodesOnD,\n    nodesDraggable = _ref77.nodesDraggable,\n    nodesConnectable = _ref77.nodesConnectable,\n    nodesFocusable = _ref77.nodesFocusable,\n    _ref77$nodeOrigin = _ref77.nodeOrigin,\n    nodeOrigin = _ref77$nodeOrigin === void 0 ? initNodeOrigin : _ref77$nodeOrigin,\n    edgesFocusable = _ref77.edgesFocusable,\n    elementsSelectable = _ref77.elementsSelectable,\n    _ref77$defaultViewpor = _ref77.defaultViewport,\n    defaultViewport = _ref77$defaultViewpor === void 0 ? initDefaultViewport : _ref77$defaultViewpor,\n    _ref77$minZoom = _ref77.minZoom,\n    minZoom = _ref77$minZoom === void 0 ? 0.5 : _ref77$minZoom,\n    _ref77$maxZoom = _ref77.maxZoom,\n    maxZoom = _ref77$maxZoom === void 0 ? 2 : _ref77$maxZoom,\n    _ref77$translateExten = _ref77.translateExtent,\n    translateExtent = _ref77$translateExten === void 0 ? infiniteExtent : _ref77$translateExten,\n    _ref77$preventScrolli = _ref77.preventScrolling,\n    preventScrolling = _ref77$preventScrolli === void 0 ? true : _ref77$preventScrolli,\n    nodeExtent = _ref77.nodeExtent,\n    _ref77$defaultMarkerC = _ref77.defaultMarkerColor,\n    defaultMarkerColor = _ref77$defaultMarkerC === void 0 ? '#b1b1b7' : _ref77$defaultMarkerC,\n    _ref77$zoomOnScroll = _ref77.zoomOnScroll,\n    zoomOnScroll = _ref77$zoomOnScroll === void 0 ? true : _ref77$zoomOnScroll,\n    _ref77$zoomOnPinch = _ref77.zoomOnPinch,\n    zoomOnPinch = _ref77$zoomOnPinch === void 0 ? true : _ref77$zoomOnPinch,\n    _ref77$panOnScroll = _ref77.panOnScroll,\n    panOnScroll = _ref77$panOnScroll === void 0 ? false : _ref77$panOnScroll,\n    _ref77$panOnScrollSpe = _ref77.panOnScrollSpeed,\n    panOnScrollSpeed = _ref77$panOnScrollSpe === void 0 ? 0.5 : _ref77$panOnScrollSpe,\n    _ref77$panOnScrollMod = _ref77.panOnScrollMode,\n    panOnScrollMode = _ref77$panOnScrollMod === void 0 ? PanOnScrollMode.Free : _ref77$panOnScrollMod,\n    _ref77$zoomOnDoubleCl = _ref77.zoomOnDoubleClick,\n    zoomOnDoubleClick = _ref77$zoomOnDoubleCl === void 0 ? true : _ref77$zoomOnDoubleCl,\n    _ref77$panOnDrag = _ref77.panOnDrag,\n    panOnDrag = _ref77$panOnDrag === void 0 ? true : _ref77$panOnDrag,\n    onPaneClick = _ref77.onPaneClick,\n    onPaneMouseEnter = _ref77.onPaneMouseEnter,\n    onPaneMouseMove = _ref77.onPaneMouseMove,\n    onPaneMouseLeave = _ref77.onPaneMouseLeave,\n    onPaneScroll = _ref77.onPaneScroll,\n    onPaneContextMenu = _ref77.onPaneContextMenu,\n    children = _ref77.children,\n    onEdgeUpdate = _ref77.onEdgeUpdate,\n    onEdgeContextMenu = _ref77.onEdgeContextMenu,\n    onEdgeDoubleClick = _ref77.onEdgeDoubleClick,\n    onEdgeMouseEnter = _ref77.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref77.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref77.onEdgeMouseLeave,\n    onEdgeUpdateStart = _ref77.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref77.onEdgeUpdateEnd,\n    _ref77$edgeUpdaterRad = _ref77.edgeUpdaterRadius,\n    edgeUpdaterRadius = _ref77$edgeUpdaterRad === void 0 ? 10 : _ref77$edgeUpdaterRad,\n    onNodesChange = _ref77.onNodesChange,\n    onEdgesChange = _ref77.onEdgesChange,\n    _ref77$noDragClassNam = _ref77.noDragClassName,\n    noDragClassName = _ref77$noDragClassNam === void 0 ? 'nodrag' : _ref77$noDragClassNam,\n    _ref77$noWheelClassNa = _ref77.noWheelClassName,\n    noWheelClassName = _ref77$noWheelClassNa === void 0 ? 'nowheel' : _ref77$noWheelClassNa,\n    _ref77$noPanClassName = _ref77.noPanClassName,\n    noPanClassName = _ref77$noPanClassName === void 0 ? 'nopan' : _ref77$noPanClassName,\n    _ref77$fitView = _ref77.fitView,\n    fitView = _ref77$fitView === void 0 ? false : _ref77$fitView,\n    fitViewOptions = _ref77.fitViewOptions,\n    _ref77$connectOnClick = _ref77.connectOnClick,\n    connectOnClick = _ref77$connectOnClick === void 0 ? true : _ref77$connectOnClick,\n    attributionPosition = _ref77.attributionPosition,\n    proOptions = _ref77.proOptions,\n    defaultEdgeOptions = _ref77.defaultEdgeOptions,\n    _ref77$elevateNodesOn = _ref77.elevateNodesOnSelect,\n    elevateNodesOnSelect = _ref77$elevateNodesOn === void 0 ? true : _ref77$elevateNodesOn,\n    _ref77$elevateEdgesOn = _ref77.elevateEdgesOnSelect,\n    elevateEdgesOnSelect = _ref77$elevateEdgesOn === void 0 ? false : _ref77$elevateEdgesOn,\n    _ref77$disableKeyboar = _ref77.disableKeyboardA11y,\n    disableKeyboardA11y = _ref77$disableKeyboar === void 0 ? false : _ref77$disableKeyboar,\n    _ref77$autoPanOnConne = _ref77.autoPanOnConnect,\n    autoPanOnConnect = _ref77$autoPanOnConne === void 0 ? true : _ref77$autoPanOnConne,\n    _ref77$autoPanOnNodeD = _ref77.autoPanOnNodeDrag,\n    autoPanOnNodeDrag = _ref77$autoPanOnNodeD === void 0 ? true : _ref77$autoPanOnNodeD,\n    _ref77$connectionRadi = _ref77.connectionRadius,\n    connectionRadius = _ref77$connectionRadi === void 0 ? 20 : _ref77$connectionRadi,\n    onError = _ref77.onError,\n    style = _ref77.style,\n    id = _ref77.id,\n    rest = _objectWithoutProperties(_ref77, _excluded4);\n  var nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  var edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  var rfId = id || '1';\n  return jsx(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    style: _objectSpread(_objectSpread({}, style), wrapperStyle),\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id,\n    children: jsxs(Wrapper, {\n      children: [jsx(GraphView$1, {\n        onInit: onInit,\n        onMove: onMove,\n        onMoveStart: onMoveStart,\n        onMoveEnd: onMoveEnd,\n        onNodeClick: onNodeClick,\n        onEdgeClick: onEdgeClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        onNodeDoubleClick: onNodeDoubleClick,\n        nodeTypes: nodeTypesWrapped,\n        edgeTypes: edgeTypesWrapped,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        selectionKeyCode: selectionKeyCode,\n        selectionOnDrag: selectionOnDrag,\n        selectionMode: selectionMode,\n        deleteKeyCode: deleteKeyCode,\n        multiSelectionKeyCode: multiSelectionKeyCode,\n        panActivationKeyCode: panActivationKeyCode,\n        zoomActivationKeyCode: zoomActivationKeyCode,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        selectNodesOnDrag: selectNodesOnDrag,\n        defaultViewport: defaultViewport,\n        translateExtent: translateExtent,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        preventScrolling: preventScrolling,\n        zoomOnScroll: zoomOnScroll,\n        zoomOnPinch: zoomOnPinch,\n        zoomOnDoubleClick: zoomOnDoubleClick,\n        panOnScroll: panOnScroll,\n        panOnScrollSpeed: panOnScrollSpeed,\n        panOnScrollMode: panOnScrollMode,\n        panOnDrag: panOnDrag,\n        onPaneClick: onPaneClick,\n        onPaneMouseEnter: onPaneMouseEnter,\n        onPaneMouseMove: onPaneMouseMove,\n        onPaneMouseLeave: onPaneMouseLeave,\n        onPaneScroll: onPaneScroll,\n        onPaneContextMenu: onPaneContextMenu,\n        onSelectionContextMenu: onSelectionContextMenu,\n        onSelectionStart: onSelectionStart,\n        onSelectionEnd: onSelectionEnd,\n        onEdgeUpdate: onEdgeUpdate,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noDragClassName: noDragClassName,\n        noWheelClassName: noWheelClassName,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: elevateEdgesOnSelect,\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent\n      }), jsx(StoreUpdater, {\n        nodes: nodes,\n        edges: edges,\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        onConnect: onConnect,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onClickConnectStart: onClickConnectStart,\n        onClickConnectEnd: onClickConnectEnd,\n        nodesDraggable: nodesDraggable,\n        nodesConnectable: nodesConnectable,\n        nodesFocusable: nodesFocusable,\n        edgesFocusable: edgesFocusable,\n        elementsSelectable: elementsSelectable,\n        elevateNodesOnSelect: elevateNodesOnSelect,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        nodeExtent: nodeExtent,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        snapToGrid: snapToGrid,\n        snapGrid: snapGrid,\n        connectionMode: connectionMode,\n        translateExtent: translateExtent,\n        connectOnClick: connectOnClick,\n        defaultEdgeOptions: defaultEdgeOptions,\n        fitView: fitView,\n        fitViewOptions: fitViewOptions,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onNodeDragStart: onNodeDragStart,\n        onNodeDrag: onNodeDrag,\n        onNodeDragStop: onNodeDragStop,\n        onSelectionDrag: onSelectionDrag,\n        onSelectionDragStart: onSelectionDragStart,\n        onSelectionDragStop: onSelectionDragStop,\n        noPanClassName: noPanClassName,\n        nodeOrigin: nodeOrigin,\n        rfId: rfId,\n        autoPanOnConnect: autoPanOnConnect,\n        autoPanOnNodeDrag: autoPanOnNodeDrag,\n        onError: onError,\n        connectionRadius: connectionRadius\n      }), jsx(Wrapper$1, {\n        onSelectionChange: onSelectionChange\n      }), children, jsx(Attribution, {\n        proOptions: proOptions,\n        position: attributionPosition\n      }), jsx(A11yDescriptions, {\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  }));\n});\nReactFlow.displayName = 'ReactFlow';\nvar selector$1 = function selector$1(s) {\n  var _s$domNode;\n  return (_s$domNode = s.domNode) === null || _s$domNode === void 0 ? void 0 : _s$domNode.querySelector('.react-flow__edgelabel-renderer');\n};\nfunction EdgeLabelRenderer(_ref78) {\n  var children = _ref78.children;\n  var edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  var store = useStoreApi();\n  return useCallback(function (id) {\n    var _store$getState36 = store.getState(),\n      domNode = _store$getState36.domNode,\n      updateNodeDimensions = _store$getState36.updateNodeDimensions;\n    var nodeElement = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector(\".react-flow__node[data-id=\\\"\".concat(id, \"\\\"]\"));\n    if (nodeElement) {\n      requestAnimationFrame(function () {\n        return updateNodeDimensions([{\n          id: id,\n          nodeElement: nodeElement,\n          forceUpdate: true\n        }]);\n      });\n    }\n  }, []);\n}\nvar nodesSelector = function nodesSelector(state) {\n  return state.getNodes();\n};\nfunction useNodes() {\n  var nodes = useStore(nodesSelector);\n  return nodes;\n}\nvar edgesSelector = function edgesSelector(state) {\n  return state.edges;\n};\nfunction useEdges() {\n  var edges = useStore(edgesSelector);\n  return edges;\n}\nvar viewportSelector = function viewportSelector(state) {\n  return {\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2]\n  };\n};\nfunction useViewport() {\n  var viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return function (initialItems) {\n    var _useState11 = useState(initialItems),\n      _useState12 = _slicedToArray(_useState11, 2),\n      items = _useState12[0],\n      setItems = _useState12[1];\n    var onItemsChange = useCallback(function (changes) {\n      return setItems(function (items) {\n        return applyChanges(changes, items);\n      });\n    }, []);\n    return [items, setItems, onItemsChange];\n  };\n}\nvar useNodesState = createUseItemsState(applyNodeChanges);\nvar useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref79) {\n  var onStart = _ref79.onStart,\n    onChange = _ref79.onChange,\n    onEnd = _ref79.onEnd;\n  var store = useStoreApi();\n  useEffect(function () {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(function () {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(function () {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref80) {\n  var onChange = _ref80.onChange;\n  var store = useStoreApi();\n  useEffect(function () {\n    store.setState({\n      onSelectionChange: onChange\n    });\n  }, [onChange]);\n}\nvar selector = function selector(s) {\n  if (s.nodeInternals.size === 0) {\n    return false;\n  }\n  return s.getNodes().every(function (n) {\n    var _n$internalsSymbol;\n    return ((_n$internalsSymbol = n[internalsSymbol]) === null || _n$internalsSymbol === void 0 ? void 0 : _n$internalsSymbol.handleBounds) !== undefined;\n  });\n};\nfunction useNodesInitialized() {\n  var initialized = useStore(selector);\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["jsx","jsxs","Fragment","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStore","useStore$1","createStore","shallow","drag","select","pointer","zoomIdentity","zoom","createPortal","StoreContext","Provider$1","Provider","errorMessages","_","nodeType","concat","id","type","sourceHandle","edge","targetHandle","edgeType","zustandErrorMessage","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","_ref","position","children","className","style","rest","_objectWithoutProperties","_excluded","pointerEvents","positionClasses","split","_objectSpread","_toConsumableArray","Attribution","_ref2","proOptions","_ref2$position","hideAttribution","href","target","rel","EdgeText","_ref3","x","y","label","_ref3$labelStyle","labelStyle","_ref3$labelShowBg","labelShowBg","_ref3$labelBgStyle","labelBgStyle","_ref3$labelBgPadding","labelBgPadding","_ref3$labelBgBorderRa","labelBgBorderRadius","_excluded2","edgeRef","_useState","width","height","_useState2","_slicedToArray","edgeTextBbox","setEdgeTextBbox","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","arguments","length","undefined","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","xMovement","yMovement","getHostForElement","element","_element$getRootNode","_window","getRootNode","call","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","_ref4","boxToRect","_ref5","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","_kbEvent$composedPath","_kbEvent$composedPath2","kbEvent","nativeEvent","composedPath","isInput","includes","nodeName","hasAttribute","isModifierKey","ctrlKey","metaKey","shiftKey","closest","isMouseEvent","getEventPosition","_event$touches","_event$touches2","_bounds$left","_bounds$top","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","BaseEdge","_ref6","path","labelX","labelY","markerEnd","markerStart","_ref6$interactionWidt","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","handler","edges","find","e","getEdgeCenter","_ref7","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","centerY","getBezierEdgeCenter","_ref8","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","_ref9","x1","y1","Left","Right","getSimpleBezierPath","_ref10","_ref10$sourcePosition","sourcePosition","Bottom","_ref10$targetPosition","targetPosition","Top","_getControl","_getControl2","_getControl3","_getControl4","_getBezierEdgeCenter","_getBezierEdgeCenter2","SimpleBezierEdge","_ref11","_ref11$sourcePosition","_ref11$targetPosition","_getSimpleBezierPath","_getSimpleBezierPath2","handleDirections","_handleDirections","_defineProperty","getDirection","_ref12","source","_ref12$sourcePosition","distance","a","b","sqrt","pow","getPoints","_ref13","_ref13$sourcePosition","_ref13$targetPosition","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","_getEdgeCenter","_getEdgeCenter2","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","_ref14","_ref14$sourcePosition","_ref14$targetPosition","_ref14$borderRadius","borderRadius","_ref14$offset","_getPoints","_getPoints2","reduce","res","p","i","segment","SmoothStepEdge","_ref15","_ref15$sourcePosition","_ref15$targetPosition","pathOptions","_getSmoothStepPath","_getSmoothStepPath2","StepEdge","props","_props$pathOptions2","_props$pathOptions","getStraightPath","_ref16","_getEdgeCenter3","_getEdgeCenter4","StraightEdge","_ref17","_getStraightPath","_getStraightPath2","calculateControlOffset","curvature","getControlWithCurvature","_ref18","getBezierPath","_ref19","_ref19$sourcePosition","_ref19$targetPosition","_ref19$curvature","_getControlWithCurvat","_getControlWithCurvat2","_getControlWithCurvat3","_getControlWithCurvat4","_getBezierEdgeCenter3","_getBezierEdgeCenter4","BezierEdge","_ref20","_ref20$sourcePosition","_ref20$targetPosition","_getBezierPath","_getBezierPath2","NodeIdContext","Consumer","useNodeId","nodeId","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","_ref21","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","updateEdge","oldEdge","newConnection","foundEdge","pointToRendererPoint","_ref22","_ref23","snapToGrid","_ref24","_ref25","tx","ty","tScale","_ref26","snapX","snapY","round","rendererPointToPoint","_ref27","_ref28","_ref29","getNodePositionWithOrigin","_node$width","_node$height","nodeOrigin","getRectOfNodes","box","currBox","_getNodePositionWithO","Infinity","getNodesInside","nodeInternals","rect","_ref30","_ref31","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","_node$selectable","selectable","_node$hidden","hidden","_getNodePositionWithO2","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","minZoom","maxZoom","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","_node$positionAbsolut","_node$positionAbsolut2","_node$positionAbsolut3","_node$positionAbsolut4","getClosestHandle","connectionRadius","handles","closestHandle","minDistance","handle","nullConnection","isValidHandle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","doc","isTarget","handleDomNode","querySelector","_getEventPosition","handleBelow","elementFromPoint","handleToCheck","classList","contains","result","isValid","connection","handleType","getHandleType","handleNodeId","getAttribute","handleId","Strict","getHandleLookup","_ref32","sourceHandles","targetHandles","apply","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","_ref33","onConnect","onEdgeUpdateEnd","_getState","domNode","autoPanOnConnect","onConnectStart","panBy","getNodes","cancelConnection","autoPanId","prevClosestHandle","_getEventPosition2","clickedHandle","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","autoPan","_calcAutoPan","_calcAutoPan2","requestAnimationFrame","connectionNodeId","connectionHandleId","connectionHandleType","onPointerMove","_getState2","add","toggle","onPointerUp","_getState$onConnectEn","_getState3","onConnectEnd","cancelAnimationFrame","removeEventListener","addEventListener","alwaysValid","selector$f","connectionStartHandle","connectOnClick","noPanClassName","Handle","_ref34","_ref34$type","_ref34$position","_ref34$isValidConnect","_ref34$isConnectable","isConnectable","onMouseDown","onTouchStart","_excluded3","_store$getState$onErr","_store$getState","onError","_useStore","onConnectExtended","params","_store$getState2","defaultEdgeOptions","onConnectAction","hasDefaultEdges","_store$getState3","onPointerDown","button","onClick","_store$getState4","onClickConnectStart","onClickConnectEnd","_isValidHandle","connectable","connecting","Handle$1","DefaultNode","_ref35","data","_ref35$targetPosition","_ref35$sourcePosition","DefaultNode$1","InputNode","_ref36","_ref36$sourcePosition","InputNode$1","OutputNode","_ref37","_ref37$targetPosition","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","_ref38","onSelectionChange","_useStore2","_store$getState$onSel","_store$getState5","changeSelector","Wrapper$1","_ref39","storeHasSelectionChange","selector$d","setNodes","setEdges","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","_ref40","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","_useStore3","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","_ref41","A11yDescriptions","_ref42","disableKeyboardA11y","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","_ref43","_ref43$radius","radius","onMouseEnter","onMouseOut","cx","cy","r","stroke","wrapEdge","EdgeComponent","EdgeWrapper","_ref44","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","onContextMenu","onMouseMove","onMouseLeave","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","ariaLabel","isFocusable","_useState3","_useState4","updateHover","setUpdateHover","_useState5","_useState6","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","_store$getState6","addSelectedEdges","nodesSelectionActive","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","handleEdgeUpdate","onKeyDown","_store$getState7","unselectNodesAndEdges","unselect","_edgeRef$current","blur","onDoubleClick","tabIndex","role","createEdgeTypes","edgeTypes","standardTypes","default","straight","bezier","step","smoothstep","simplebezier","wrappedTypes","specialTypes","k","getHandlePosition","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","_ref45","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","_node$internalsSymbol","_node$positionAbsolut5","_node$positionAbsolut6","_node$positionAbsolut7","_node$positionAbsolut8","isParentSelected","parentNode","get","hasSelector","nodeRef","_current","matches","parentElement","getDragItems","mousePos","Array","from","values","draggable","_n$positionAbsolute$x","_n$positionAbsolute","_n$positionAbsolute$y","_n$positionAbsolute2","delta","calcNextPosition","nextPosition","currentExtent","parent","_getNodePositionWithO3","parentX","parentY","_getNodePositionWithO4","parentPosition","getEventHandlerParams","_ref46","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","_ref47","_ref47$unselect","_store$getState8","addSelectedNodes","multiSelectionActive","useGetPointerPosition","getPointerPosition","_ref48","sourceEvent","_store$getState9","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","useDrag","_ref49","_ref49$disabled","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","_useState7","_useState8","setDragging","lastPos","mousePosition","dragEvent","updateNodes","_ref50","_store$getState10","updateNodePositions","hasChange","updatedPos","onDrag","_getEventHandlerParam","_getEventHandlerParam2","currentNode","_calcAutoPan3","_calcAutoPan4","_lastPos$current$x","_lastPos$current$y","_store$getState11","on","dragHandler","_store$getState12","onStart","_nodeInternals$get","_getEventHandlerParam3","_getEventHandlerParam4","_store$getState13","_store$getState14","onStop","_getEventHandlerParam5","_getEventHandlerParam6","isDraggable","useUpdateNodePositions","updatePositions","_store$getState15","xVelo","yVelo","factor","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","_calcNextPosition","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","_ref51","xPos","yPos","xPosOrigin","yPosOrigin","resizeObserver","dragHandle","zIndex","isParent","initialized","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","_nodeRef$current","prototype","hasOwnProperty","replace","toLowerCase","currNode","observe","unobserve","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","createNodeTypes","nodeTypes","input","output","group","getPositionWithOrigin","_ref53","origin","useKeyPress","keyCode","options","_useState9","_useState10","keyPressed","setKeyPressed","pressedKeys","Set","_useMemo","keyCodeArr","isArray","kc","keysFlat","item","_useMemo2","keyCodes","keysToWatch","_options$target","_options$target2","downHandler","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","_options$target3","_options$target4","isUp","every","has","eventCode","calculateXYZPosition","_result$x","_result$y","_parentNode$internals","_parentNode$internals2","_result$z","_parentNode$internals3","_parentNode$internals4","_result$z2","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","_node$internalsSymbol2","_node$internalsSymbol3","_calculateXYZPosition","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","_currInternals$intern","currInternals","internals","defineProperty","enumerable","set","_get","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","d3initialized","_options$nodes","includeHiddenNodes","optionNode","nodesInitialized","_options$minZoom","_options$maxZoom","_options$padding","_getTransformForBound","_getTransformForBound2","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","_objectSpread2","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","_ref54","changedNodes","changedEdges","_get2","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$b","useViewportHelper","_useStore4","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","_transform$x","_transform$y","_transform$zoom","_store$getState$trans","_store$getState$trans2","_store$getState16","nextZoom","_options$padding2","_store$getState17","_getTransformForBound3","_getTransformForBound4","_store$getState18","useReactFlow","viewportHelper","getNode","getEdges","_store$getState19","_store$getState19$edg","getEdge","_store$getState20","_store$getState20$edg","payload","_store$getState21","nextNodes","changes","_store$getState22","_store$getState22$edg","nextEdges","addNodes","_store$getState23","currentNodes","addEdges","_store$getState24","_store$getState24$edg","toObject","_store$getState25","_store$getState25$edg","_transform","viewport","deleteElements","_ref55","nodesDeleted","edgesDeleted","_store$getState26","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","_getNodeRect","_getNodeRect2","currNodeRect","isNodeIntersecting","_getNodeRect3","_getNodeRect4","useGlobalKeyHandler","_ref56","deleteKeyCode","multiSelectionKeyCode","_useReactFlow","deleteKeyPressed","multiSelectionKeyPressed","_store$getState27","useResizeHandler","rendererNode","updateDimensions","_store$getState$onErr2","_store$getState28","ResizeObserver","containerStyle","viewChanged","prevViewport","eventViewport","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","selector$a","d3ZoomHandler","ZoomPane","_ref57","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","_ref57$zoomOnScroll","zoomOnScroll","_ref57$zoomOnPinch","zoomOnPinch","_ref57$panOnScroll","panOnScroll","_ref57$panOnScrollSpe","panOnScrollSpeed","_ref57$panOnScrollMod","panOnScrollMode","Free","_ref57$zoomOnDoubleCl","zoomOnDoubleClick","_ref57$panOnDrag","defaultViewport","zoomActivationKeyCode","_ref57$preventScrolli","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","_useStore5","zoomActivationKeyPressed","mouseButton","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","stopImmediatePropagation","currentZoom","property","point","pinchDelta","deltaY","deltaMode","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","_event$sourceEvent","_store$getState29","onViewportChangeStart","paneDragging","flowTransform","_mouseButton$current","_store$getState30","onViewportChange","_mouseButton$current2","_store$getState31","onViewportChangeEnd","clearTimeout","setTimeout","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","_useStore6","isActive","handleParentExpand","updateItem","extendWidth","extendHeight","_parent$style$width","_parent$style$height","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","_iterator","_createForOfIteratorHelper","_step","done","currentChange","expandParent","dimensions","updateStyle","resizing","err","f","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","_ref58","isSelecting","_ref58$selectionMode","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","_useStore7","resetUserSelection","resetSelectedElements","onWheel","_store$getState32","_getEventPosition3","startX","startY","_userSelectionRect$st","_userSelectionRect$st2","_store$getState33","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","_store$getState34","hasActiveSelection","selector$7","transformString","NodesSelection","_ref59","onSelectionContextMenu","_useStore8","_nodeRef$current2","focus","preventScroll","NodesSelection$1","selector$6","FlowRenderer","_ref60","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","selector$5","NodeRenderer","_useStore9","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","_resizeObserverRef$cu","disconnect","_clampedPosition$x","_clampedPosition$y","_node$width2","_node$height2","_node$internalsSymbol4","_node$internalsSymbol5","_node$internalsSymbol6","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","_nodeInternals$get2","_nodeInternals$get2$i","_nodeInternals$get3","_nodeInternals$get3$i","edgeTree","_ref61","_ref62","useVisibleEdges","sourceNode","targetNode","ArrowSymbol","_ref63","_ref63$color","color","_ref63$strokeWidth","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","_ref64","_ref64$color","_ref64$strokeWidth","MarkerSymbols","_MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","_store$getState$onErr3","_store$getState35","Marker","_ref65","_ref65$width","_ref65$height","_ref65$markerUnits","markerUnits","_ref65$orient","orient","markerWidth","markerHeight","refX","refY","markerSelector","_ref66","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","_ref67","m","MarkerDefinitions$1","selector$4","EdgeRenderer","_ref68","defaultMarkerColor","_useStore10","_ref69","_targetHandleBounds$t","_targetHandleBounds$s","_getNodeData","_getNodeData2","sourceHandleBounds","sourceIsValid","_getNodeData3","_getNodeData4","targetHandleBounds","targetIsValid","targetNodeHandles","_getEdgePositions","EdgeRenderer$1","selector$3","Viewport","_ref70","useOnInitHandler","onInit","rfInstance","isInitialized","oppositePosition","_oppositePosition","ConnectionLine","_ref71","_fromNode$internalsSy","_fromNode$width","_fromNode$height","_fromNode$positionAbs","_fromNode$positionAbs2","_fromNode$positionAbs3","_fromNode$positionAbs4","_ref71$type","Bezier","CustomComponent","_useStore11","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","_getBezierPath3","_getBezierPath4","Step","_getSmoothStepPath3","_getSmoothStepPath4","SmoothStep","_getSmoothStepPath5","_getSmoothStepPath6","SimpleBezier","_getSimpleBezierPath3","_getSimpleBezierPath4","selector$2","ConnectionLineWrapper","_ref72","component","_useStore12","GraphView","_ref73","connectionLineComponent","connectionLineContainerStyle","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","_get3","_get4","_get4$defaultEdgeOpti","_get5","viewportNode","getComputedStyle","_window$DOMMatrixRead","DOMMatrixReadOnly","m22","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","_get6","triggerNodeChanges","_get7","_get8","_get9","edgeId","_ref74","_get10","storeEdges","nodesToUnselect","edgesToUnselect","_get11","_get12","_get$d3Zoom","_get13","_get14","_get15","ReactFlowProvider","_ref75","storeRef","Wrapper","_ref76","isWrapped","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","_ref77","_ref77$nodeTypes","_ref77$edgeTypes","_ref77$connectionMode","_ref77$connectionLine","_ref77$deleteKeyCode","_ref77$selectionKeyCo","_ref77$selectionOnDra","_ref77$selectionMode","_ref77$panActivationK","_ref77$multiSelection","_ref77$zoomActivation","_ref77$snapToGrid","_ref77$snapGrid","_ref77$onlyRenderVisi","_ref77$selectNodesOnD","_ref77$nodeOrigin","_ref77$defaultViewpor","_ref77$minZoom","_ref77$maxZoom","_ref77$translateExten","_ref77$preventScrolli","_ref77$defaultMarkerC","_ref77$zoomOnScroll","_ref77$zoomOnPinch","_ref77$panOnScroll","_ref77$panOnScrollSpe","_ref77$panOnScrollMod","_ref77$zoomOnDoubleCl","_ref77$panOnDrag","_ref77$edgeUpdaterRad","_ref77$noDragClassNam","_ref77$noWheelClassNa","_ref77$noPanClassName","_ref77$fitView","_ref77$connectOnClick","attributionPosition","_ref77$elevateNodesOn","_ref77$elevateEdgesOn","_ref77$disableKeyboar","_ref77$autoPanOnConne","_ref77$autoPanOnNodeD","_ref77$connectionRadi","_excluded4","nodeTypesWrapped","edgeTypesWrapped","selector$1","_s$domNode","EdgeLabelRenderer","_ref78","edgeLabelRenderer","useUpdateNodeInternals","_store$getState36","nodesSelector","state","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","_useState11","_useState12","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","_ref79","onChange","onEnd","useOnSelectionChange","_ref80","_n$internalsSymbol","useNodesInitialized"],"sources":["/Users/martinbsandberg/Documents/GitHub/painpoints-graph/node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    '001': () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    '002': () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    '003': (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    '004': () => 'The React Flow parent container needs a width and a height to render the graph.',\n    '005': () => 'Only child nodes can use a parent extent.',\n    '006': () => \"Can't create edge. An edge needs a source and a target.\",\n    '007': (id) => `The old edge with id=${id} does not exist.`,\n    '009': (type) => `Marker type \"${type}\" doesn't exist.`,\n    '008': (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    '010': () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    '011': (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n};\n\nconst zustandErrorMessage = errorMessages['001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStore$1(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // we want to be able to do a multi selection event if we are in an input field\n    const isModifierKey = event.ctrlKey || event.metaKey || event.shiftKey;\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return (isInput && !isModifierKey) || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\n\nconst BaseEdge = ({ path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        centerX = points[0].x;\n        centerY = points[0].y;\n    }\n    const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges) => {\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdge.id);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['007'](oldEdge.id));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...oldEdge,\n        id: getEdgeId(newConnection),\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdge.id).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(pos, connectionRadius, handles) {\n    let closestHandle = null;\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n        if (distance <= connectionRadius && distance < minDistance) {\n            minDistance = distance;\n            closestHandle = handle;\n        }\n    });\n    return closestHandle;\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleDomNode = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const { x, y } = getEventPosition(event);\n    const handleBelow = doc.elementFromPoint(x, y);\n    const handleToCheck = handleBelow?.classList.contains('react-flow__handle') ? handleBelow : handleDomNode;\n    const result = {\n        handleDomNode: handleToCheck,\n        isValid: false,\n        connection: nullConnection,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = connectionMode === ConnectionMode.Strict\n            ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n            : handleNodeId !== fromNodeId || handleId !== fromHandleId;\n        if (isValid) {\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let prevClosestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStatus: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        prevClosestHandle = getClosestHandle(pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup);\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        const result = isValidHandle(event, prevClosestHandle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n        handleDomNode = result.handleDomNode;\n        connection = result.connection;\n        isValid = result.isValid;\n        setState({\n            connectionPosition: prevClosestHandle && isValid\n                ? rendererPointToPoint({\n                    x: prevClosestHandle.x,\n                    y: prevClosestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!prevClosestHandle, isValid),\n        });\n        if (!prevClosestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((prevClosestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection = alwaysValid, isConnectable = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['010']());\n        return null;\n    }\n    const { connectionStartHandle, connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges } = store.getState();\n            store.setState({ edges: addEdge(edgeParams, edges) });\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        const isMouseTriggered = isMouseEvent(event);\n        if ((isMouseTriggered && event.button === 0) || !isMouseTriggered) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionMode } = store.getState();\n        if (!connectionStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const { connection, isValid } = isValidHandle(event, {\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionStartHandle.nodeId, connectionStartHandle.handleId || null, connectionStartHandle.type, isValidConnection, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connecting: connectionStartHandle?.nodeId === nodeId &&\n                    connectionStartHandle?.handleId === handleId &&\n                    connectionStartHandle?.type === type,\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange?.(params);\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges } = store.getState();\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                addSelectedEdges([id]);\n            }\n            if (onClick) {\n                const edge = edges.find((e) => e.id === id);\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = () => true;\n            const isTarget = isSourceHandle;\n            const edge = store.getState().edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const handleEdgeUpdate = typeof onEdgeUpdate !== 'undefined';\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), handleEdgeUpdate && (jsxs(Fragment, { children: [jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" }), jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" })] }))] }));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (handleId) {\n        return bounds.find((d) => d.id === handleId);\n    }\n    else if (bounds.length === 1) {\n        return bounds[0];\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n    }));\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    let currentExtent = node.extent || nodeExtent;\n    if (node.extent === 'parent') {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['005']());\n            currentExtent = nodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode) {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            handler(event, { ...node });\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals } = store.getState();\n    const node = nodeInternals.get(id);\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node] });\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a changes\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    updateNodes(lastPos.current);\n                    panBy({ x: xMovement, y: yMovement });\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { nodeInternals, multiSelectionActive, domNode, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n                        if (!nodeInternals.get(nodeId)?.selected) {\n                            // we need to reset selected nodes when selectNodesOnDrag=false\n                            unselectNodesAndEdges();\n                        }\n                    }\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\n                        handleNodeClick({\n                            id: nodeId,\n                            store,\n                        });\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                    if (onStart && dragItems.current) {\n                        const [currentNode, nodes] = getEventHandlerParams({\n                            nodeId,\n                            dragItems: dragItems.current,\n                            nodeInternals,\n                        });\n                        onStart(event.sourceEvent, currentNode, nodes);\n                    }\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag } = store.getState();\n                    if (!autoPanStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                onClick(event, { ...node });\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    nodeRef.current?.blur();\n                }\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                resizeObserver?.observe(currNode);\n                return () => resizeObserver?.unobserve(currNode);\n            }\n        }, [hidden]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (jsx(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                if (isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                if (isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            options?.target?.addEventListener('keydown', downHandler);\n            options?.target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                options?.target?.removeEventListener('keydown', downHandler);\n                options?.target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            width: currInternals?.width,\n            height: currInternals?.height,\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            internals.parentNode = node.parentNode;\n            parentNodes[node.parentNode] = true;\n        }\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getRectOfNodes(nodes, nodeOrigin);\n            const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst eventToFlowTransform = (eventViewport) => ({\n    x: eventViewport.x,\n    y: eventViewport.y,\n    zoom: eventViewport.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    if (event.ctrlKey && zoomOnPinch) {\n                        const point = pointer(event);\n                        // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n                        const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        d3Zoom.scaleTo(d3Selection, zoom, point);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n                });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent.button;\n                const { onViewportChangeStart } = store.getState();\n                isZoomingOrPanning.current = true;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                if (onMoveStart || onViewportChangeStart) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    onViewportChangeStart?.(flowTransform);\n                    onMoveStart?.(event.sourceEvent, flowTransform);\n                }\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if (onMove || onViewportChange) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if (event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n});\nPane.displayName = 'Pane';\n\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } }) }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\n            let nodeType = node.type || 'default';\n            if (!props.nodeTypes[nodeType]) {\n                onError?.('003', errorMessages['003'](nodeType));\n                nodeType = 'default';\n            }\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n            const clampedPosition = props.nodeExtent\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\n                : node.positionAbsolute;\n            const posX = clampedPosition?.x ?? 0;\n            const posY = clampedPosition?.y ?? 0;\n            const posOrigin = getPositionWithOrigin({\n                x: posX,\n                y: posY,\n                width: node.width ?? 0,\n                height: node.height ?? 0,\n                origin: props.nodeOrigin,\n            });\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\n        }) }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            z = hasZIndex\n                ? edge.zIndex\n                : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), jsx(\"g\", { children: edges.map((edge) => {\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                            if (!sourceIsValid || !targetIsValid) {\n                                return null;\n                            }\n                            let edgeType = edge.type || 'default';\n                            if (!edgeTypes[edgeType]) {\n                                onError?.('011', errorMessages['011'](edgeType));\n                                edgeType = 'default';\n                            }\n                            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                            // when connection type is loose we can define all handles as sources and connect source -> source\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                                ? targetHandleBounds.target\n                                : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\n                            const targetPosition = targetHandle?.position || Position.Top;\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                            if (!sourceHandle || !targetHandle) {\n                                onError?.('008', errorMessages['008'](sourceHandle, edge));\n                                return null;\n                            }\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\n                        }) })] }, level))), children] }));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', connectionStatus]), children: jsx(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }) }) }));\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    useOnInitHandler(onInit);\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId, children: jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }) }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n};\n\nconst createRFStore = () => createStore((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return;\n        }\n        const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n    }),\n    reset: () => set({ ...initialState }),\n}));\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return jsx(Provider$1, { value: storeRef.current, children: children });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return jsx(ReactFlowProvider, { children: children });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                devWarn('002', errorMessages['002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = 'Meta', zoomActivationKeyCode = 'Meta', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, onError, style, id, ...rest }, ref) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    const rfId = id || '1';\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypesWrapped, edgeTypes: edgeTypesWrapped, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${id}\"]`);\n        if (nodeElement) {\n            requestAnimationFrame(() => updateNodeDimensions([{ id, nodeElement, forceUpdate: true }]));\n        }\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onSelectionChange: onChange });\n    }, [onChange]);\n}\n\nconst selector = (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s.getNodes().every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nfunction useNodesInitialized() {\n    const initialized = useStore(selector);\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}