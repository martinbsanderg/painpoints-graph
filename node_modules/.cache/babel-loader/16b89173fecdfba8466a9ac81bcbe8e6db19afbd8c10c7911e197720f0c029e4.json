{"ast":null,"code":"var _jsxFileName = \"/Users/martinbsandberg/Documents/GitHub/react-flow/src/components/flow/flow.component.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Controls, Background, applyNodeChanges, applyEdgeChanges } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { darkTheme } from \"../../theme.jsx\";\nimport { initialNodes } from '../node.components.jsx';\nimport { initialEdges } from '../edges.component';\nimport { CustomNode } from \"../custom-nodes/custom-node.component.jsx\";\nimport { StyledFlow, MiniMapStyled } from \"./flow.styles\";\nimport { CustomEdge } from \"../custom-edges/custom-edges.component.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  highLevelNode: CustomNode,\n  specificLevelNode: CustomNode,\n  consequenceNode: CustomNode\n};\nconst edgeTypes = {\n  custom: CustomEdge\n};\nconst Flow = props => {\n  _s();\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [anySelected, setAnySelected] = useState(false);\n  const [edgesOfSelected, setEdgesOfSelected] = useState(false);\n  const onNodesChange = useCallback(changes => setNodes(nds => {\n    const selected = changes.filter(node => node.selected === true);\n    if (selected.length >= 1) {\n      setAnySelected(selected);\n    } else {\n      setAnySelected(() => false);\n    }\n    return applyNodeChanges(changes, nds);\n  }), []);\n  useEffect(() => {\n    setNodes(nds => nds.map(node => {\n      if (anySelected) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            anySelected: true\n          }\n        };\n      } else {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            anySelected: false\n          }\n        };\n      }\n    }));\n    return;\n  }, [anySelected]);\n  useEffect(() => {\n    setEdges(edgs => {\n      if (!edgesOfSelected) {\n        ;\n      }\n    });\n  }, [anySelected]);\n  const onEdgesChange = useCallback(changes => setEdges(eds => applyEdgeChanges(changes, eds)), []);\n  return /*#__PURE__*/_jsxDEV(StyledFlow, {\n    nodes: nodes,\n    onNodesChange: onNodesChange,\n    edges: edges,\n    onEdgesChange: onEdgesChange,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    fitView: true,\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MiniMapStyled, {\n      zoomable: true,\n      pannable: true,\n      nodeColor: _ref => {\n        let {\n          type\n        } = _ref;\n        return darkTheme[type].bgC;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n};\n_s(Flow, \"R98AjysTX9EUAn8Uzy5xwhegAco=\");\n_c = Flow;\nexport default Flow;\nvar _c;\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"names":["useState","useCallback","useEffect","Controls","Background","applyNodeChanges","applyEdgeChanges","darkTheme","initialNodes","initialEdges","CustomNode","StyledFlow","MiniMapStyled","CustomEdge","jsxDEV","_jsxDEV","nodeTypes","highLevelNode","specificLevelNode","consequenceNode","edgeTypes","custom","Flow","props","_s","nodes","setNodes","edges","setEdges","anySelected","setAnySelected","edgesOfSelected","setEdgesOfSelected","onNodesChange","changes","nds","selected","filter","node","length","map","data","edgs","onEdgesChange","eds","fitView","children","fileName","_jsxFileName","lineNumber","columnNumber","zoomable","pannable","nodeColor","_ref","type","bgC","_c","$RefreshReg$"],"sources":["/Users/martinbsandberg/Documents/GitHub/react-flow/src/components/flow/flow.component.jsx"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport {\n  Controls,\n  Background,\n  applyNodeChanges,\n  applyEdgeChanges,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { darkTheme} from \"../../theme.jsx\";\nimport {initialNodes} from '../node.components.jsx'\nimport {initialEdges}from '../edges.component'\nimport { CustomNode } from \"../custom-nodes/custom-node.component.jsx\";\nimport { StyledFlow, MiniMapStyled } from \"./flow.styles\";\nimport { CustomEdge } from \"../custom-edges/custom-edges.component.jsx\";\n\nconst nodeTypes = {\n  highLevelNode: CustomNode,\n  specificLevelNode: CustomNode,\n  consequenceNode: CustomNode,\n}\n\nconst edgeTypes = {\n  custom: CustomEdge,\n};\n\nconst Flow=(props) =>{\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [anySelected, setAnySelected] = useState(false);\n  const [edgesOfSelected, setEdgesOfSelected] = useState(false)\n\n  const onNodesChange = useCallback(\n    (changes) => setNodes((nds) => {\n      const selected = changes.filter( node => node.selected===true)\n      if(selected.length>=1){\n        setAnySelected(selected)\n      }else{\n        setAnySelected(()=>false)\n      }\n        return(applyNodeChanges(changes, nds))}),\n    []\n  );\n\n  useEffect(() => {\n    setNodes((nds) =>\n      nds.map((node) => {\n        if(anySelected){\n          return{...node, data: {...node.data, anySelected:true}}\n        }\n        else{\n          return{...node, data: {...node.data, anySelected:false}}\n        }\n      })\n    );\n      return\n  }, [anySelected])\n\n  useEffect(()=>{\n    setEdges((edgs)=>{\n      if(!edgesOfSelected){\n        ;\n      }\n\n    })\n\n  }, [anySelected])\n\n  const onEdgesChange = useCallback(\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n    []\n  );\n\n  return (\n    \n      <StyledFlow\n        nodes={nodes}\n        onNodesChange={onNodesChange}\n        edges={edges}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        edgeTypes={edgeTypes}\n        fitView\n      >\n        <Background />\n        <Controls />\n        <MiniMapStyled zoomable pannable nodeColor={({type}) => darkTheme[type].bgC}/>\n      </StyledFlow>\n    \n  );\n}\n\nexport default Flow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}