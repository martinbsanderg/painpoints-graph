{"ast":null,"code":"var _jsxFileName = \"/Users/martinbsandberg/Documents/GitHub/react-flow/src/components/flow/flow.component.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { Controls, Background, applyNodeChanges, applyEdgeChanges } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { darkTheme } from \"../../theme.jsx\";\nimport { initialNodes } from '../node.components.jsx';\nimport { initialEdges } from '../edges.component';\nimport { CustomNode } from \"../custom-nodes/custom-node.component.jsx\";\nimport { StyledFlow, MiniMapStyled } from \"./flow.styles\";\nimport { CustomEdge } from \"../custom-edges/custom-edges.component.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  highLevelNode: CustomNode,\n  specificLevelNode: CustomNode,\n  consequenceNode: CustomNode\n};\nconst edgeTypes = {\n  custom: CustomEdge\n};\nconst Flow = props => {\n  _s();\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [anySelected, setAnySelected] = useState(false);\n  const onNodesChange = useCallback(changes => setNodes(nds => {\n    const selected = changes.filter(node => node.selected === true);\n    console.log(selected.length > 0);\n    if (selected.length > 0) {\n      setAnySelected(true);\n    }\n    return applyNodeChanges(changes, nds);\n  }), []);\n  const onEdgesChange = useCallback(changes => setEdges(eds => applyEdgeChanges(changes, eds)), []);\n  return /*#__PURE__*/_jsxDEV(StyledFlow, {\n    nodes: nodes,\n    onNodesChange: onNodesChange,\n    edges: edges,\n    onEdgesChange: onEdgesChange,\n    nodeTypes: nodeTypes,\n    edgeTypes: edgeTypes,\n    fitView: true,\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MiniMapStyled, {\n      zoomable: true,\n      pannable: true,\n      nodeColor: _ref => {\n        let {\n          type\n        } = _ref;\n        return darkTheme[type].bgC;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n_s(Flow, \"GfJd9ZfTEivYZnFTFXqKSzHO2Do=\");\n_c = Flow;\nexport default Flow;\nvar _c;\n$RefreshReg$(_c, \"Flow\");","map":{"version":3,"names":["useState","useCallback","Controls","Background","applyNodeChanges","applyEdgeChanges","darkTheme","initialNodes","initialEdges","CustomNode","StyledFlow","MiniMapStyled","CustomEdge","jsxDEV","_jsxDEV","nodeTypes","highLevelNode","specificLevelNode","consequenceNode","edgeTypes","custom","Flow","props","_s","nodes","setNodes","edges","setEdges","anySelected","setAnySelected","onNodesChange","changes","nds","selected","filter","node","console","log","length","onEdgesChange","eds","fitView","children","fileName","_jsxFileName","lineNumber","columnNumber","zoomable","pannable","nodeColor","_ref","type","bgC","_c","$RefreshReg$"],"sources":["/Users/martinbsandberg/Documents/GitHub/react-flow/src/components/flow/flow.component.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport {\n  Controls,\n  Background,\n  applyNodeChanges,\n  applyEdgeChanges,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { darkTheme} from \"../../theme.jsx\";\nimport {initialNodes} from '../node.components.jsx'\nimport {initialEdges}from '../edges.component'\nimport { CustomNode } from \"../custom-nodes/custom-node.component.jsx\";\nimport { StyledFlow, MiniMapStyled } from \"./flow.styles\";\nimport { CustomEdge } from \"../custom-edges/custom-edges.component.jsx\";\n\nconst nodeTypes = {\n  highLevelNode: CustomNode,\n  specificLevelNode: CustomNode,\n  consequenceNode: CustomNode,\n}\n\nconst edgeTypes = {\n  custom: CustomEdge,\n};\n\nconst Flow=(props) =>{\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [anySelected, setAnySelected] = useState(false);\n\n  \n  const onNodesChange = useCallback(\n    \n    (changes) => setNodes((nds) => {\n      const selected = changes.filter( node => node.selected===true)\n      console.log(selected.length>0);\n      if(selected.length>0){\n        setAnySelected(true)\n      }\n        return(applyNodeChanges(changes, nds))}),\n    []\n  );\n  const onEdgesChange = useCallback(\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n    []\n  );\n\n  return (\n    \n      <StyledFlow\n        nodes={nodes}\n        onNodesChange={onNodesChange}\n        edges={edges}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        edgeTypes={edgeTypes}\n        fitView\n      >\n        <Background />\n        <Controls />\n        <MiniMapStyled zoomable pannable nodeColor={({type}) => darkTheme[type].bgC}/>\n      </StyledFlow>\n    \n  );\n}\n\nexport default Flow;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SACEC,QAAQ,EACRC,UAAU,EACVC,gBAAgB,EAChBC,gBAAgB,QACX,WAAW;AAClB,OAAO,0BAA0B;AACjC,SAASC,SAAS,QAAO,iBAAiB;AAC1C,SAAQC,YAAY,QAAO,wBAAwB;AACnD,SAAQC,YAAY,QAAM,oBAAoB;AAC9C,SAASC,UAAU,QAAQ,2CAA2C;AACtE,SAASC,UAAU,EAAEC,aAAa,QAAQ,eAAe;AACzD,SAASC,UAAU,QAAQ,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,SAAS,GAAG;EAChBC,aAAa,EAAEP,UAAU;EACzBQ,iBAAiB,EAAER,UAAU;EAC7BS,eAAe,EAAET;AACnB,CAAC;AAED,MAAMU,SAAS,GAAG;EAChBC,MAAM,EAAER;AACV,CAAC;AAED,MAAMS,IAAI,GAAEC,KAAK,IAAI;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAACO,YAAY,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAACQ,YAAY,CAAC;EAChD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAGrD,MAAM8B,aAAa,GAAG7B,WAAW,CAE9B8B,OAAO,IAAKN,QAAQ,CAAEO,GAAG,IAAK;IAC7B,MAAMC,QAAQ,GAAGF,OAAO,CAACG,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACF,QAAQ,KAAG,IAAI,CAAC;IAC9DG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,MAAM,GAAC,CAAC,CAAC;IAC9B,IAAGL,QAAQ,CAACK,MAAM,GAAC,CAAC,EAAC;MACnBT,cAAc,CAAC,IAAI,CAAC;IACtB;IACE,OAAOzB,gBAAgB,CAAC2B,OAAO,EAAEC,GAAG,CAAC;EAAC,CAAC,CAAC,EAC5C,EAAE,CACH;EACD,MAAMO,aAAa,GAAGtC,WAAW,CAC9B8B,OAAO,IAAKJ,QAAQ,CAAEa,GAAG,IAAKnC,gBAAgB,CAAC0B,OAAO,EAAES,GAAG,CAAC,CAAC,EAC9D,EAAE,CACH;EAED,oBAEI1B,OAAA,CAACJ,UAAU;IACTc,KAAK,EAAEA,KAAM;IACbM,aAAa,EAAEA,aAAc;IAC7BJ,KAAK,EAAEA,KAAM;IACba,aAAa,EAAEA,aAAc;IAC7BxB,SAAS,EAAEA,SAAU;IACrBI,SAAS,EAAEA,SAAU;IACrBsB,OAAO;IAAAC,QAAA,gBAEP5B,OAAA,CAACX,UAAU;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdhC,OAAA,CAACZ,QAAQ;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACZhC,OAAA,CAACH,aAAa;MAACoC,QAAQ;MAACC,QAAQ;MAACC,SAAS,EAAEC,IAAA;QAAA,IAAC;UAACC;QAAI,CAAC,GAAAD,IAAA;QAAA,OAAK5C,SAAS,CAAC6C,IAAI,CAAC,CAACC,GAAG;MAAA;IAAC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnE;AAGnB,CAAC;AAAAvB,EAAA,CAvCKF,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}